//# sourceMappingURL=data:application/json;charset=utf-8;base64,{
  "version": 3,
  "sources": ["../node_modules/valyrian.js/plugins/request.js", "../node_modules/valyrian.js/plugins/hooks.js", "../node_modules/valyrian.js/lib/index.ts", "../app/business-logic/btc.svg.tsx", "../app/business-logic/dash.svg.tsx", "../app/business-logic/etc.svg.tsx", "../app/business-logic/eth.svg.tsx", "../app/business-logic/ltc.svg.tsx", "../app/business-logic/crypto-calculator-service.ts", "../app/business-logic/xmr.svg.tsx", "../app/business-logic/zec.svg.tsx", "../app/common/storage-service.ts", "../app/common/format-number.ts", "../app/app.tsx", "../app/index.tsx"],
  "sourcesContent": ["const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nfunction serialize(obj, prefix) {\n  return Object.keys(obj)\n    .map((p) => {\n      let k = prefix ? `${prefix}[${p}]` : p;\n      return typeof obj[p] === \"object\" ? serialize(obj[p], k) : `${encodeURIComponent(k)}=${encodeURIComponent(obj[p])}`;\n    })\n    .join(\"&\");\n}\n\nfunction parseUrl(url, options = {}) {\n  let u = /^https?/gi.test(url) ? url : options.urls.base + url;\n\n  let parts = u.split(\"?\");\n  u = parts[0].trim().replace(/^\\/\\//, \"/\").replace(/\\/$/, \"\").trim();\n\n  if (parts[1]) {\n    u += `?${parts[1]}`;\n  }\n\n  if (isNodeJs && typeof options.urls.node === \"string\") {\n    options.urls.node = options.urls.node;\n\n    if (typeof options.urls.api === \"string\") {\n      options.urls.api = options.urls.api.replace(/\\/$/gi, \"\").trim();\n      u = u.replace(options.urls.api, options.urls.node);\n    }\n\n    if (!/^https?/gi.test(u)) {\n      u = options.urls.node + u;\n    }\n  }\n\n  return u;\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction Request(baseUrl = \"\", options = {}) {\n  let url = baseUrl.replace(/\\/$/gi, \"\").trim();\n  options.urls = options.urls || {};\n  let opts = {\n    methods: [\"get\", \"post\", \"put\", \"patch\", \"delete\"],\n    ...options,\n    urls: {\n      node: options.urls.node || null,\n      api: options.urls.api || null,\n      base: options.urls.base ? options.urls.base + url : url\n    }\n  };\n\n  async function request(method, url, data, options = {}) {\n    let innerOptions = {\n      method: method.toLowerCase(),\n      headers: {},\n      resolveWithFullResponse: false,\n      ...opts,\n      ...options\n    };\n\n    if (!innerOptions.headers.Accept) {\n      innerOptions.headers.Accept = \"application/json\";\n    }\n\n    let acceptType = innerOptions.headers.Accept;\n    let contentType = innerOptions.headers[\"Content-Type\"] || innerOptions.headers[\"content-type\"] || \"\";\n\n    if (innerOptions.methods.indexOf(method) === -1) {\n      throw new Error(\"Method not allowed\");\n    }\n\n    if (data) {\n      if (innerOptions.method === \"get\" && typeof data === \"object\") {\n        url += `?${serialize(data)}`;\n      }\n\n      if (innerOptions.method !== \"get\") {\n        if (/json/gi.test(contentType)) {\n          innerOptions.body = JSON.stringify(data);\n        } else {\n          let formData;\n          if (data instanceof FormData) {\n            formData = data;\n          } else {\n            formData = new FormData();\n            for (let i in data) {\n              formData.append(i, data[i]);\n            }\n          }\n          innerOptions.body = formData;\n        }\n      }\n    }\n\n    let response = await fetch(parseUrl(url, opts), innerOptions);\n\n    if (!response.ok) {\n      let err = new Error(response.statusText);\n      err.response = response;\n      throw err;\n    }\n\n    if (innerOptions.resolveWithFullResponse) {\n      return response;\n    }\n\n    if (/text/gi.test(acceptType)) {\n      return response.text();\n    }\n\n    if (/json/gi.test(acceptType)) {\n      return response.json();\n    }\n\n    return response;\n  }\n\n  request.new = (baseUrl, options) => Request(baseUrl, { ...opts, ...options });\n\n  request.options = (key, value) => {\n    let result = opts;\n\n    if (typeof key === \"undefined\") {\n      return result;\n    }\n\n    let parsed = key.split(\".\");\n    let next;\n\n    while (parsed.length) {\n      next = parsed.shift();\n\n      let nextIsArray = next.indexOf(\"[\") > -1;\n      if (nextIsArray) {\n        let idx = next.replace(/\\D/gi, \"\");\n        next = next.split(\"[\")[0];\n        parsed.unshift(idx);\n      }\n\n      if (parsed.length > 0 && typeof result[next] !== \"object\") {\n        result[next] = nextIsArray ? [] : {};\n      }\n\n      if (parsed.length === 0 && typeof value !== \"undefined\") {\n        result[next] = value;\n      }\n\n      result = result[next];\n    }\n\n    return result;\n  };\n\n  opts.methods.forEach((method) => (request[method] = (url, data, options) => request(method, url, data, options)));\n\n  return request;\n}\n\nconst request = Request();\n\nrequest.default = request;\nmodule.exports = request;\n", "let v = {\n  current: {}\n};\n\nfunction createHook({ create, update, remove, returnValue }) {\n  return (...args) => {\n    let { component, vnode, oldVnode } = v.current;\n\n    // Init the components array for the current vnode\n    if (vnode.components === undefined) {\n      vnode.components = [];\n      v.onUnmount(() => Reflect.deleteProperty(vnode, \"components\"));\n    }\n\n    // Add the component to the components array if it's not already there\n    if (vnode.components.indexOf(component) === -1) {\n      vnode.components.push(component);\n    }\n\n    // Init the component hooks array\n    if (component.hooks === undefined) {\n      component.hooks = [];\n      v.onUnmount(() => Reflect.deleteProperty(component, \"hooks\"));\n    }\n    let hook;\n\n    if (!oldVnode || !oldVnode.components || oldVnode.components[vnode.components.length - 1] !== component) {\n      hook = create(...args);\n      component.hooks.push(hook);\n\n      if (remove) {\n        // Add the hook to the onRemove array\n        v.onUnmount(() => remove(hook));\n      }\n    } else {\n      hook = component.hooks[component.hooks.length - 1];\n      if (update) {\n        update(hook, ...args);\n      }\n    }\n\n    if (returnValue) {\n      return returnValue(hook);\n    }\n\n    return hook;\n  };\n}\n\nconst useState = createHook({\n  create: (value) => {\n    let state = value;\n    let setState = (value) => (state = value);\n\n    let stateObj = Object.create(null);\n    stateObj.toJSON = stateObj.toString = stateObj.valueOf = () => (typeof state === \"function\" ? state() : state);\n\n    return [stateObj, setState];\n  }\n});\n\n// Effect hook\nconst useEffect = createHook({\n  create: (effect, changes) => {\n    let hook = { effect, prev: [] };\n    // on unmount\n    if (changes === null) {\n      hook.onRemove = effect;\n      return hook;\n    }\n\n    // on create\n    hook.prev = changes;\n    hook.onCleanup = hook.effect();\n    return hook;\n  },\n  update: (hook, effect, changes) => {\n    // on update\n    if (typeof changes === \"undefined\") {\n      hook.prev = changes;\n      if (typeof hook.onCleanup === \"function\") {\n        hook.onCleanup();\n      }\n      hook.onCleanup = hook.effect();\n      return;\n    }\n\n    // on update if there are changes\n    if (Array.isArray(changes)) {\n      for (let i = 0, l = changes.length; i < l; i++) {\n        if (changes[i] !== hook.prev[i]) {\n          hook.prev = changes;\n          if (typeof hook.onCleanup === \"function\") {\n            hook.onCleanup();\n          }\n          hook.onCleanup = hook.effect();\n          return;\n        }\n      }\n    }\n  },\n  remove: (hook) => {\n    if (typeof hook.onCleanup === \"function\") {\n      hook.onCleanup();\n    }\n    if (typeof hook.onRemove === \"function\") {\n      hook.onRemove();\n    }\n  }\n});\n\nconst useRef = createHook({\n  create: (initialValue) => {\n    v.directive(\"ref\", (ref, vnode) => {\n      ref.current = vnode.dom;\n    });\n    return { current: initialValue };\n  }\n});\n\nconst useCallback = createHook({\n  create: (callback, changes) => {\n    callback()\n    return { callback, changes };\n  },\n  update: (hook, callback, changes) => {\n    for (let i = 0, l = changes.length; i < l; i++) {\n      if (changes[i] !== hook.changes[i]) {\n        hook.changes = changes;\n        hook.callback();\n        return;\n      }\n    }\n  },\n});\n\nconst useMemo = createHook({\n  create: (callback, changes) => {\n    return { callback, changes, value: callback() };\n  },\n  update: (hook, callback, changes) => {\n    for (let i = 0, l = changes.length; i < l; i++) {\n      if (changes[i] !== hook.changes[i]) {\n        hook.changes = changes;\n        hook.value = callback();\n        return;\n      }\n    }\n  },\n  returnValue: (hook) => {\n    return hook.value;\n  }\n});\n\nfunction plugin(vInstance) {\n  v = vInstance;\n}\n\nplugin.createHook = createHook;\nplugin.useState = useState;\nplugin.useEffect = useEffect;\nplugin.useRef = useRef;\nplugin.useCallback = useCallback;\nplugin.useMemo = useMemo;\n\nplugin.default = plugin;\nmodule.exports = plugin;\n", "/* eslint-disable no-use-before-define */\n/* eslint-disable sonarjs/cognitive-complexity */\n/*** Vnode ***/\n\nimport {\n  Children,\n  Current,\n  Directive,\n  Directives,\n  DomElement,\n  IVnode,\n  Plugin,\n  Props,\n  ReservedProps,\n  Valyrian,\n  ValyrianComponent,\n  VnodeComponent,\n  VnodeWithDom\n} from \"./interfaces\";\n\n/*** Constants ***/\nconst ComponentString = \"__component__\";\nconst TextString = \"#text\";\nconst isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\nconst Und = undefined;\n\n/*** Vnode ***/\n\nconst Vnode = function Vnode(this: IVnode, tag: string, props: Props, children: Children) {\n  this.props = props;\n  this.children = children;\n  this.tag = tag;\n} as unknown as IVnode;\n\nfunction isVnode(object?: unknown | IVnode): object is IVnode {\n  return object instanceof Vnode;\n}\n\nfunction isComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return typeof component === \"function\" || (typeof component === \"object\" && component !== null && \"view\" in component);\n}\n\nfunction isVnodeComponent(vnode?: unknown | VnodeComponent): vnode is VnodeComponent {\n  return vnode instanceof Vnode && vnode.tag === ComponentString;\n}\n\n/*** Util ***/\n\nfunction createDomElement(tag: string, isSVG: boolean = false) {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag);\n}\n\nfunction domToVnode(dom: DomElement): void | VnodeWithDom {\n  if (dom.nodeType === 3) {\n    let vnode = v(TextString, {}, []);\n    vnode.nodeValue = dom.nodeValue as string;\n    vnode.dom = dom;\n    return vnode as VnodeWithDom;\n  }\n\n  if (dom.nodeType === 1) {\n    let children = [];\n    for (let i = 0; i < dom.childNodes.length; i++) {\n      let child = domToVnode(dom.childNodes[i] as DomElement);\n      if (child) {\n        children.push(child);\n      }\n    }\n\n    let props: Props = {};\n    [].forEach.call(dom.attributes, (prop: Attr) => (props[prop.nodeName] = prop.nodeValue));\n\n    let vnode = v(dom.tagName.toLowerCase(), props, ...children);\n    vnode.dom = dom;\n    return vnode as VnodeWithDom;\n  }\n}\n\nconst trust = (htmlString: string): Children => {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as Children;\n};\n\nconst reservedProps: ReservedProps = {\n  key: true,\n  state: true,\n  oncreate: true,\n  onupdate: true,\n  onremove: true,\n  shouldupdate: true,\n  \"v-once\": true,\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true,\n  \"v-model\": true\n};\n\n/*** Mount ***/\n\nconst eventListenerNames: Record<string, true> = {};\nlet onCleanupList: Function[] = [];\nlet onMountList: Function[] = [];\nlet onUpdateList: Function[] = [];\nlet onUnmountList: Function[] = [];\nconst current: Current = {};\nfunction eventListener(e: Event) {\n  let dom = e.target as DomElement;\n  let name = `v-on${e.type}`;\n  while (dom) {\n    if (dom[name]) {\n      dom[name](e, dom);\n      if (!e.defaultPrevented) {\n        update();\n      }\n      return;\n    }\n    dom = dom.parentNode as DomElement;\n  }\n}\n\nfunction onCleanup(callback: Function): void {\n  if (onCleanupList.indexOf(callback) === -1) {\n    onCleanupList.push(callback);\n  }\n}\nfunction onUnmount(callback: Function): void {\n  if (onUnmountList.indexOf(callback) === -1) {\n    onUnmountList.push(callback);\n  }\n}\nfunction onMount(callback: Function): void {\n  if (onMountList.indexOf(callback) === -1) {\n    onMountList.push(callback);\n  }\n}\nfunction onUpdate(callback: Function): void {\n  if (onUpdateList.indexOf(callback) === -1) {\n    onUpdateList.push(callback);\n  }\n}\n\n/*\n  * Mounts a component to the DOM\n  mount('#app', () => <div>Hello world</div>); // App is a Functional Component\n  mount('#app', { view: () => <div>Hello world</div> }); // App is a POJO component with a view method\n  mount('#app', classInstance); // App is a class instance with a view method\n  mount('#app', <App><div>Hello world</div></App>); // App is a Vnode component (Vnode with tag __component__)\n*/\n\nfunction mount(container: DomElement | string, component: ValyrianComponent | IVnode): void | string {\n  let appContainer = null;\n\n  if (isNodeJs) {\n    appContainer = typeof container === \"string\" ? createDomElement(container === \"svg\" ? \"svg\" : \"div\", container === \"svg\") : container;\n  } else {\n    appContainer = typeof container === \"string\" ? document.querySelectorAll(container)[0] : container;\n  }\n\n  if (!appContainer) {\n    throw new Error(\"Container not found\");\n  }\n\n  let vnodeComponent: VnodeComponent | IVnode;\n\n  if (isVnodeComponent(component)) {\n    vnodeComponent = component;\n  } else if (isComponent(component)) {\n    vnodeComponent = v(component, {});\n  } else {\n    throw new Error(\"Component must be a Valyrian Component or a Vnode component\");\n  }\n\n  if (v.isMounted) {\n    unmount();\n  }\n\n  v.component = vnodeComponent as VnodeComponent;\n  v.container = appContainer;\n  v.mainVnode = domToVnode(appContainer) as VnodeWithDom;\n\n  // update\n  return update();\n}\n\nfunction callCallbackList(list: Function[]): void {\n  for (let i = 0; i < list.length; i++) {\n    list[i]();\n  }\n  list = [];\n}\n\nfunction update(): void | string {\n  if (v.component && v.mainVnode) {\n    onCleanupList.length && callCallbackList(onCleanupList);\n    let oldVnode: VnodeWithDom | null = v.mainVnode as VnodeWithDom;\n    v.mainVnode = new Vnode(v.mainVnode.tag, v.mainVnode.props, [v.component]) as VnodeWithDom;\n    v.mainVnode.dom = oldVnode.dom;\n    patch(v.mainVnode, oldVnode);\n    oldVnode = null;\n    if (v.isMounted === false) {\n      onMountList.length && callCallbackList(onMountList);\n      v.isMounted = true;\n    } else {\n      onUpdateList.length && callCallbackList(onUpdateList);\n    }\n\n    if (isNodeJs) {\n      return v.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nfunction unmount(): void | string {\n  if (v.isMounted && v.mainVnode && v.component) {\n    onCleanupList.length && callCallbackList(onCleanupList);\n    onUnmountList.length && callCallbackList(onUnmountList);\n    let oldVnode: VnodeWithDom | null = v.mainVnode as VnodeWithDom;\n    v.mainVnode = new Vnode(v.mainVnode.tag, v.mainVnode.props, []) as VnodeWithDom;\n    v.mainVnode.dom = oldVnode.dom;\n    v.mainVnode.isSVG = oldVnode.isSVG;\n    patch(v.mainVnode, oldVnode);\n    oldVnode = null;\n    v.component = null;\n    v.isMounted = false;\n    if (isNodeJs) {\n      return v.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nlet emptyVnode = new Vnode(\"__empty__\", {}, []);\n\nfunction onremove(vnode: IVnode) {\n  for (let i = 0; i < vnode.children.length; i++) {\n    vnode.children[i].tag !== TextString && onremove(vnode.children[i]);\n  }\n\n  vnode.props.onremove && vnode.props.onremove(vnode);\n}\n\nfunction sharedSetAttribute(prop: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom): void | boolean {\n  // It is a reserved prop\n  if (reservedProps[prop]) {\n    // If it is a directive name call the directive\n    if (directives[prop]) {\n      return directives[prop](vnode.props[prop], vnode, oldVnode);\n    }\n\n    return;\n  }\n\n  // It is not a reserved prop so we add it to the dom\n  if (typeof value === \"function\") {\n    if (prop in eventListenerNames === false) {\n      eventListenerNames[prop] = true;\n      (v.container as DomElement).addEventListener(prop.slice(2), eventListener);\n    }\n    vnode.dom[`v-${prop}`] = value;\n    return;\n  }\n\n  if (prop in vnode.dom && vnode.isSVG === false) {\n    // eslint-disable-next-line eqeqeq\n    if (vnode.dom[prop] != value) {\n      vnode.dom[prop] = value;\n    }\n    return;\n  }\n\n  // Use set attribute\n  if (!oldVnode || oldVnode.props[prop] !== value) {\n    if (value === false) {\n      vnode.dom.removeAttribute(prop);\n    } else {\n      vnode.dom.setAttribute(prop, value);\n    }\n  }\n}\n\nfunction setAttribute(name: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  vnode.props[name] = value;\n\n  sharedSetAttribute(name, value, vnode, oldVnode);\n}\n\nfunction setAttributes(vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  for (let prop in vnode.props) {\n    if (sharedSetAttribute(prop, vnode.props[prop], vnode, oldVnode) === false) {\n      return;\n    }\n  }\n\n  if (oldVnode) {\n    for (let prop in oldVnode.props) {\n      if (prop in vnode.props === false && typeof oldVnode.props[prop] !== \"function\" && prop in reservedProps === false) {\n        if (prop in oldVnode.dom && vnode.isSVG === false) {\n          oldVnode.dom[prop] = null;\n        } else {\n          oldVnode.dom.removeAttribute(prop);\n        }\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patch(newVnode: VnodeWithDom, oldVnode: VnodeWithDom | IVnode = emptyVnode) {\n  current.vnode = newVnode;\n  current.oldVnode = oldVnode === emptyVnode ? Und : (oldVnode as VnodeWithDom);\n  let newTree = newVnode.children;\n  let oldTree = oldVnode.children;\n\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n    if (childVnode instanceof Vnode) {\n      if (childVnode.tag !== TextString) {\n        if (childVnode.tag === ComponentString) {\n          let component = childVnode.component as ValyrianComponent;\n          current.component = component;\n          let result = (\"view\" in component ? component.view : component).call(component, childVnode.props, ...childVnode.children);\n\n          newTree.splice(i--, 1, result);\n          continue;\n        }\n        childVnode.isSVG = newVnode.isSVG || childVnode.tag === \"svg\";\n      }\n    } else if (Array.isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else if (childVnode === null || childVnode === Und) {\n      newTree.splice(i--, 1);\n    } else {\n      newTree[i] = new Vnode(TextString, {}, []);\n      newTree[i].nodeValue = childVnode;\n    }\n  }\n\n  let oldTreeLength = oldTree.length;\n  let newTreeLength = newTree.length;\n\n  // If new tree is empty, remove all old nodes\n  if (newTreeLength === 0) {\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldTree[i].tag !== TextString && onremove(oldTree[i]);\n    }\n\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n\n  // If the tree is keyed list and is not first render and old tree is keyed list too\n  if (oldTreeLength && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    let oldKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldKeyedList[oldTree[i].props.key] = i;\n    }\n\n    let newKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < newTreeLength; i++) {\n      newKeyedList[newTree[i].props.key] = i;\n    }\n\n    for (let i = 0; i < newTreeLength; i++) {\n      let childVnode = newTree[i];\n      let oldChildVnode = oldTree[oldKeyedList[childVnode.props.key]];\n      let shouldPatch = true;\n\n      if (oldChildVnode) {\n        childVnode.dom = oldChildVnode.dom;\n        if (\"v-once\" in childVnode.props || (childVnode.props.shouldupdate && childVnode.props.shouldupdate(childVnode, oldChildVnode) === false)) {\n          // skip this patch\n          childVnode.children = oldChildVnode.children;\n          shouldPatch = false;\n        } else {\n          setAttributes(childVnode, oldChildVnode);\n          if (v.isMounted) {\n            childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n          } else {\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n          }\n        }\n      } else {\n        childVnode.dom = createDomElement(childVnode.tag, childVnode.isSVG);\n        setAttributes(childVnode);\n        childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n      }\n\n      if (newVnode.dom.childNodes[i] === Und) {\n        newVnode.dom.appendChild(childVnode.dom);\n      } else if (newVnode.dom.childNodes[i] !== childVnode.dom) {\n        oldTree[i] && newKeyedList[oldTree[i].props.key] === Und && onremove(oldTree[i]);\n        newVnode.dom.replaceChild(childVnode.dom, newVnode.dom.childNodes[i]);\n      }\n\n      shouldPatch && patch(childVnode, oldChildVnode);\n    }\n\n    // For the rest of the children, we should remove them\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      if (newKeyedList[oldTree[i].props.key] === Und) {\n        let oldChildVnode = oldTree[i];\n        onremove(oldChildVnode);\n        oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n      }\n    }\n\n    return;\n  }\n\n  // If new tree and old tree have more than one child, we should update the dom\n  for (let i = 0; i < newTreeLength; i++) {\n    let newChildVnode = newTree[i];\n\n    // Old child exists\n    if (i < oldTreeLength) {\n      let oldChildVnode = oldTree[i];\n      // New child is a text node\n      if (newChildVnode.tag === TextString) {\n        // Old child is a text node\n        if (oldChildVnode.tag === TextString) {\n          newChildVnode.dom = oldChildVnode.dom;\n          // eslint-disable-next-line eqeqeq\n          if (newChildVnode.dom.nodeValue != newChildVnode.nodeValue) {\n            newChildVnode.dom.nodeValue = newChildVnode.nodeValue as string;\n          }\n          continue;\n        }\n\n        // Old child is a normal node\n        newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n        onremove(oldChildVnode);\n        newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n\n        continue;\n      }\n\n      // New child is a normal node\n      // Old child is the same type as new child\n      if (oldChildVnode.tag === newChildVnode.tag) {\n        newChildVnode.dom = oldChildVnode.dom;\n        // If we have a v-once directive or a shouldupdate method that returns false, we skip the update\n        if (newChildVnode.props[\"v-once\"] || (newChildVnode.props.shouldupdate && newChildVnode.props.shouldupdate(newChildVnode, oldChildVnode) === false)) {\n          newChildVnode.children = oldChildVnode.children;\n          continue;\n        }\n\n        // We update the dom element\n        setAttributes(newChildVnode, oldChildVnode);\n        if (v.isMounted) {\n          newChildVnode.props.onupdate && newChildVnode.props.onupdate(newChildVnode, oldChildVnode);\n        } else {\n          newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n        }\n\n        patch(newChildVnode, oldChildVnode);\n        continue;\n      }\n\n      // Old child is of a different type than new child\n      newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n      setAttributes(newChildVnode);\n      oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n      newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n      newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n      patch(newChildVnode, emptyVnode);\n      continue;\n    }\n\n    // Old child does not exists\n    // New child is a text node\n    if (newChildVnode.tag === TextString) {\n      newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n      newVnode.dom.appendChild(newChildVnode.dom);\n      continue;\n    }\n\n    // New child is a normal node\n    newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n    setAttributes(newChildVnode);\n    newVnode.dom.appendChild(newChildVnode.dom);\n    newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n    patch(newChildVnode, emptyVnode);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    let oldChildVnode = oldTree[i];\n    oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n    oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n  }\n}\n\n/*** Directives ***/\n\nfunction directive(name: string, directive: Directive) {\n  let fullName = `v-${name}`;\n  directives[fullName] = directive;\n  reservedProps[fullName] = true;\n}\n\nfunction hideDirective(test: boolean): Directive {\n  return (bool: boolean, vnode: IVnode, oldVnode?: IVnode) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldVnode && oldVnode.dom && oldVnode.dom.parentNode) {\n        oldVnode.tag !== TextString && onremove(oldVnode);\n        oldVnode.dom.parentNode.replaceChild(newdom, oldVnode.dom);\n      }\n      vnode.tag = TextString;\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n      return false;\n    }\n  };\n}\n\nconst directives: Directives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set: unknown[], vnode: VnodeWithDom) => {\n    vnode.children = set.map(vnode.children[0]);\n  },\n  \"v-show\": (bool: boolean, vnode: VnodeWithDom) => {\n    (vnode.dom as unknown as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes: { [x: string]: boolean }, vnode: VnodeWithDom) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html: string, vnode: VnodeWithDom) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event]: any[], vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value;\n    let handler;\n    if (vnode.tag === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e: Event) => {\n              let val = (e.target as DomElement & Record<string, any>).value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          setAttribute(\"checked\", value, vnode, oldVnode);\n          break;\n        }\n        case \"radio\": {\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode, oldVnode);\n          break;\n        }\n        default: {\n          setAttribute(\"value\", model[property], vnode, oldVnode);\n        }\n      }\n    } else if (vnode.tag === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e: Event & Record<string, any>) => {\n          let val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.tag === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n\n    if (!vnode.props[event]) {\n      if (!handler) {\n        handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n      }\n      setAttribute(event, handler, vnode, oldVnode);\n    }\n  }\n};\n\n/*** Plugins ***/\nconst plugins = new Map<Plugin, any>();\n\nfunction use(plugin: Plugin, options?: Record<string | number | symbol, any>): void | any {\n  if (plugins.has(plugin)) {\n    return plugins.get(plugin);\n  }\n\n  let result = plugin(v, options);\n  plugins.set(plugin, result);\n  return result;\n}\n\n/*** Hyperscript ***/\n\nconst v: Valyrian = function v(tagOrComponent: string | ValyrianComponent, props: Props, ...children: Children): IVnode | VnodeComponent {\n  if (typeof tagOrComponent === \"string\") {\n    return new Vnode(tagOrComponent, props || {}, children);\n  }\n\n  const vnode = new Vnode(\"__component__\", props || {}, children);\n  vnode.component = tagOrComponent;\n  return vnode as VnodeComponent;\n};\n\nv.fragment = (props: Props, ...children: Children): Children => {\n  return children;\n};\n\n/*** V properties and methods ***/\n// This is intended to make the properties and methods available for plugins\nv.current = current;\n\nv.directives = directives;\n\nv.reservedProps = reservedProps;\n\nv.isVnode = isVnode;\nv.isComponent = isComponent;\nv.isVnodeComponent = isVnodeComponent;\n\nv.isMounted = false;\nv.isNodeJs = isNodeJs;\nv.trust = trust;\n\nv.onCleanup = onCleanup;\nv.onUnmount = onUnmount;\nv.onMount = onMount;\nv.onUpdate = onUpdate;\n\nv.mount = mount;\nv.unmount = unmount;\nv.update = update;\n\nv.setAttribute = setAttribute;\nv.directive = directive;\nv.use = use;\n\nexport default v;\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function BtcSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n      version=\"1.1\"\n      shape-rendering=\"geometricPrecision\"\n      text-rendering=\"geometricPrecision\"\n      image-rendering=\"optimizeQuality\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      viewBox=\"0 0 4091.27 4091.73\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\"\n    >\n      <g id=\"Layer_x0020_1\">\n        <metadata id=\"CorelCorpID_0Corel-Layer\" />\n        <g id=\"_1421344023328\">\n          <path\n            fill=\"#F7931A\"\n            fill-rule=\"nonzero\"\n            d=\"M4030.06 2540.77c-273.24,1096.01 -1383.32,1763.02 -2479.46,1489.71 -1095.68,-273.24 -1762.69,-1383.39 -1489.33,-2479.31 273.12,-1096.13 1383.2,-1763.19 2479,-1489.95 1096.06,273.24 1763.03,1383.51 1489.76,2479.57l0.02 -0.02z\"\n          />\n          <path\n            fill=\"white\"\n            fill-rule=\"nonzero\"\n            d=\"M2947.77 1754.38c40.72,-272.26 -166.56,-418.61 -450,-516.24l91.95 -368.8 -224.5 -55.94 -89.51 359.09c-59.02,-14.72 -119.63,-28.59 -179.87,-42.34l90.16 -361.46 -224.36 -55.94 -92 368.68c-48.84,-11.12 -96.81,-22.11 -143.35,-33.69l0.26 -1.16 -309.59 -77.31 -59.72 239.78c0,0 166.56,38.18 163.05,40.53 90.91,22.69 107.35,82.87 104.62,130.57l-104.74 420.15c6.26,1.59 14.38,3.89 23.34,7.49 -7.49,-1.86 -15.46,-3.89 -23.73,-5.87l-146.81 588.57c-11.11,27.62 -39.31,69.07 -102.87,53.33 2.25,3.26 -163.17,-40.72 -163.17,-40.72l-111.46 256.98 292.15 72.83c54.35,13.63 107.61,27.89 160.06,41.3l-92.9 373.03 224.24 55.94 92 -369.07c61.26,16.63 120.71,31.97 178.91,46.43l-91.69 367.33 224.51 55.94 92.89 -372.33c382.82,72.45 670.67,43.24 791.83,-303.02 97.63,-278.78 -4.86,-439.58 -206.26,-544.44 146.69,-33.83 257.18,-130.31 286.64,-329.61l-0.07 -0.05zm-512.93 719.26c-69.38,278.78 -538.76,128.08 -690.94,90.29l123.28 -494.2c152.17,37.99 640.17,113.17 567.67,403.91zm69.43 -723.3c-63.29,253.58 -453.96,124.75 -580.69,93.16l111.77 -448.21c126.73,31.59 534.85,90.55 468.94,355.05l-0.02 0z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function DashSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 513.4 416.8\">\n      <defs>\n        <style>\n          {`.cls-1 {\n        fill: #008de4;\n      }`}\n        </style>\n      </defs>\n      <title>d</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n          <path\n            class=\"cls-1\"\n            d=\"M336.25,0H149.35l-15.5,86.6,168.7.2c83.1,0,107.6,30.2,106.9,80.2-.4,25.6-11.5,69-16.3,83.1-12.8,37.5-39.1,80.2-137.7,80.1l-164-.1L76,416.8h186.5c65.8,0,93.7-7.7,123.4-21.3,65.7-30.5,104.8-95.3,120.5-179.9C529.65,89.6,500.65,0,336.25,0\"\n          />\n          <path\n            class=\"cls-1\"\n            d=\"M68.7,164.9c-49,0-56,31.9-60.6,51.2C2,241.3,0,251.6,0,251.6H191.4c49,0,56-31.9,60.6-51.2,6.1-25.2,8.1-35.5,8.1-35.5Z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function EtcSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1543 2499.2\">\n      <defs>\n        <style>{`.cls-1{fill:#3ab83a;}.cls-2{fill:#0b8311;}.cls-3{fill:#146714;}`}</style>\n      </defs>\n      <title>e</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"svg8\">\n          <g id=\"layer5\">\n            <g id=\"g1627\">\n              <path\n                id=\"path1599\"\n                class=\"cls-1\"\n                d=\"M0,1361.05c271.87,144.38,555.56,295.51,774.67,412.45L1543,1361.05c-278.2,413.29-510,757.36-768.33,1138.15C515.88,2119.25,230.08,1700,0,1361.05Zm29.55-114L775.51,849l736.25,395.14L775.93,1642.63ZM774.67,721.47,0,1129.28,771.29,0,1543,1131.81,774.67,721.47Z\"\n              />\n              <path\n                id=\"path1593\"\n                class=\"cls-2\"\n                d=\"M774.67,1773.5,1543,1361.05C1264.8,1774.34,774.67,2499.2,774.67,2499.2ZM775.51,849l736.25,395.14L775.93,1642.63,775.51,849Zm-.84-127.5L771.29,0,1543,1131.81Z\"\n              />\n              <path id=\"path1603\" class=\"cls-2\" d=\"M29.55,1247.06l746,61.22,736.25-63.75L775.93,1643.05Z\" />\n              <path id=\"path1606\" class=\"cls-3\" d=\"M775.51,1308.28l736.25-63.75L775.93,1643.05l-.42-334.77Z\" />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "import v from \"valyrian.js/lib\";\n\nexport function EthSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n      version=\"1.1\"\n      shape-rendering=\"geometricPrecision\"\n      text-rendering=\"geometricPrecision\"\n      image-rendering=\"optimizeQuality\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      viewBox=\"0 0 784.37 1277.39\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\"\n    >\n      <g id=\"Layer_x0020_1\">\n        <metadata id=\"CorelCorpID_0Corel-Layer\" />\n        <g id=\"_1421394342400\">\n          <g>\n            <polygon\n              fill=\"#343434\"\n              fill-rule=\"nonzero\"\n              points=\"392.07,0 383.5,29.11 383.5,873.74 392.07,882.29 784.13,650.54 \"\n            />\n            <polygon fill=\"#8C8C8C\" fill-rule=\"nonzero\" points=\"392.07,0 -0,650.54 392.07,882.29 392.07,472.33 \" />\n            <polygon\n              fill=\"#3C3C3B\"\n              fill-rule=\"nonzero\"\n              points=\"392.07,956.52 387.24,962.41 387.24,1263.28 392.07,1277.38 784.37,724.89 \"\n            />\n            <polygon fill=\"#8C8C8C\" fill-rule=\"nonzero\" points=\"392.07,1277.38 392.07,956.52 -0,724.89 \" />\n            <polygon fill=\"#141414\" fill-rule=\"nonzero\" points=\"392.07,882.29 784.13,650.54 392.07,472.33 \" />\n            <polygon fill=\"#393939\" fill-rule=\"nonzero\" points=\"0,650.54 392.07,882.29 392.07,472.33 \" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function LtcSVG() {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 82.6 82.6\">\n      <title>litecoin-ltc-logo</title>\n      <circle cx=\"41.3\" cy=\"41.3\" r=\"36.83\" style=\"fill:#fff\" />\n      <path\n        d=\"M41.3,0A41.3,41.3,0,1,0,82.6,41.3h0A41.18,41.18,0,0,0,41.54,0ZM42,42.7,37.7,57.2h23a1.16,1.16,0,0,1,1.2,1.12v.38l-2,6.9a1.49,1.49,0,0,1-1.5,1.1H23.2l5.9-20.1-6.6,2L24,44l6.6-2,8.3-28.2a1.51,1.51,0,0,1,1.5-1.1h8.9a1.16,1.16,0,0,1,1.2,1.12v.38L43.5,38l6.6-2-1.4,4.8Z\"\n        style=\"fill:#345d9d\"\n      />\n    </svg>\n  );\n}\n", "import { BtcSVG } from \"./btc.svg\";\nimport { DashSVG } from \"./dash.svg\";\nimport { EtcSVG } from \"./etc.svg\";\nimport { EthSVG } from \"./eth.svg\";\nimport { LtcSVG } from \"./ltc.svg\";\n// We will create a hash power calculator for cryptocurrencies and mining hardward.\n// We will use the coingecko-api and minerstats-api.\nimport Request from \"valyrian.js/plugins/request.js\";\nimport { XmrSVG } from \"./xmr.svg\";\nimport { ZecSVG } from \"./zec.svg\";\nimport { storageService } from \"../common/storage-service\";\n\nconst CoinGeckoRequest = Request.new(\"https://api.coingecko.com/api/v3\", {\n  methods: [\"get\"]\n});\n\nconst MinerstatRequest = Request.new(\"https://api.minerstat.com/v2/coins\", {\n  methods: [\"get\"]\n});\n\nconst ThirtyMinutesInMilliSeconds = 1000 * 60 * 30;\n\nconst DefaultCacheTime = ThirtyMinutesInMilliSeconds;\n\nexport enum AlgorithmsEnum {\n  \"SHA-256\" = \"SHA-256\",\n  \"Scrypt\" = \"Scrypt\",\n  \"Ethash\" = \"Ethash\",\n  \"Etchash\" = \"Etchash\",\n  \"Equihash\" = \"Equihash\",\n  \"RandomX\" = \"RandomX\",\n  \"X11\" = \"X11\"\n}\n\nexport enum CoinSymbolEnum {\n  \"BTC\" = \"BTC\",\n  \"ETH\" = \"ETH\",\n  \"ETC\" = \"ETC\",\n  \"XMR\" = \"XMR\",\n  \"ZEC\" = \"ZEC\",\n  \"DASH\" = \"DASH\",\n  \"LTC\" = \"LTC\"\n}\n\nenum CoinNamesEnum {\n  \"Bitcoin\" = \"Bitcoin\",\n  \"Ethereum\" = \"Ethereum\",\n  \"Ethereum Classic\" = \"Ethereum Classic\",\n  \"Monero\" = \"Monero\",\n  \"Zcash\" = \"Zcash\",\n  \"Dash\" = \"Dash\",\n  \"Litecoin\" = \"Litecoin\"\n}\n\ninterface CoinInterface {\n  algorithm: AlgorithmsEnum;\n  coin: CoinSymbolEnum;\n  name: CoinNamesEnum;\n  network_hashrate: number;\n  price: number;\n  reward: number;\n  updated: number;\n}\n\ninterface PriceItemInterface {\n  aud: number;\n  brl: number;\n  cad: number;\n  chf: number;\n  cny: number;\n  eur: number;\n  gbp: number;\n  hkd: number;\n  jpy: number;\n  mxn: number;\n  rub: number;\n  usd: number;\n}\n\ninterface PricesInterface {\n  bitcoin: PriceItemInterface;\n  dash: PriceItemInterface;\n  ethereum: PriceItemInterface;\n  \"ethereum-classic\": PriceItemInterface;\n  litecoin: PriceItemInterface;\n  monero: PriceItemInterface;\n  zcash: PriceItemInterface;\n}\n\nexport interface CalculationResult {\n  mined: number;\n  minedFee: number;\n  income: number;\n  incomeFee: number;\n  powerCost: number;\n  profit: number;\n}\n\nexport interface CalculationsResult {\n  daily: CalculationResult;\n  weekly: CalculationResult;\n  monthly: CalculationResult;\n  yearly: CalculationResult;\n  currency: string;\n  price: number;\n  realPrice: number;\n  costPerMinedCoin: number;\n  electricityPriceBreakEven: number;\n  hashPrice: number;\n}\n\nexport const CryptoCurrencies = {\n  BTC: {\n    id: \"bitcoin\",\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    icon: BtcSVG(),\n    config: {\n      hashRateAmount: 40,\n      hashRateType: \"Th/s\",\n      power: 2600\n    }\n  },\n  ETH: {\n    id: \"ethereum\",\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    icon: EthSVG(),\n    config: {\n      hashRateAmount: 200,\n      hashRateType: \"Mh/s\",\n      power: 140\n    }\n  },\n  ETC: {\n    id: \"ethereum-classic\",\n    symbol: \"ETC\",\n    name: \"Ethereum Classic\",\n    icon: EtcSVG(),\n    config: {\n      hashRateAmount: 500,\n      hashRateType: \"Mh/s\",\n      power: 1000\n    }\n  },\n  XMR: {\n    id: \"monero\",\n    symbol: \"XMR\",\n    name: \"Monero\",\n    icon: XmrSVG(),\n    config: {\n      hashRateAmount: 100,\n      hashRateType: \"Kh/s\",\n      power: 1200\n    }\n  },\n  ZEC: {\n    id: \"zcash\",\n    symbol: \"ZEC\",\n    name: \"Zcash\",\n    icon: ZecSVG(),\n    config: {\n      hashRateAmount: 100,\n      hashRateType: \"Kh/s\",\n      power: 1000\n    }\n  },\n  DASH: {\n    id: \"dash\",\n    symbol: \"DASH\",\n    name: \"Dash\",\n    icon: DashSVG(),\n    config: {\n      hashRateAmount: 200,\n      hashRateType: \"Gh/s\",\n      power: 1110\n    }\n  },\n  LTC: {\n    id: \"litecoin\",\n    symbol: \"LTC\",\n    name: \"Litecoin\",\n    icon: LtcSVG(),\n    config: {\n      hashRateAmount: 5,\n      hashRateType: \"Gh/s\",\n      power: 1000\n    }\n  }\n};\n\nconst CryptoCurrenciesIds = [\"bitcoin\", \"ethereum\", \"ethereum-classic\", \"monero\", \"zcash\", \"dash\", \"litecoin\"];\n\nexport enum CurrencyEnum {\n  \"USD\" = \"USD\",\n  \"EUR\" = \"EUR\",\n  \"GBP\" = \"GBP\",\n  \"CAD\" = \"CAD\",\n  \"AUD\" = \"AUD\",\n  \"CHF\" = \"CHF\",\n  \"CNY\" = \"CNY\",\n  \"RUB\" = \"RUB\",\n  \"BRL\" = \"BRL\",\n  \"HKD\" = \"HKD\",\n  \"JPY\" = \"JPY\",\n  \"MXN\" = \"MXN\"\n}\n\nexport enum HashRateStringToNumber {\n  \"Ph/s\" = 1000000000000000,\n  \"Th/s\" = 1000000000000,\n  \"Gh/s\" = 1000000000,\n  \"Mh/s\" = 1000000,\n  \"Kh/s\" = 1000,\n  \"H/s\" = 1\n}\n\nexport class CalculatorService {\n  private useCache = (path): boolean => {\n    let dateNow = Date.now();\n    let cache = storageService.get(path);\n    if (cache) {\n      let cacheDate = cache.date;\n      if (dateNow - cacheDate < DefaultCacheTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  private setCache(path: string, value: unknown): void {\n    let dateNow = Date.now();\n    storageService.set(path, {\n      value,\n      date: dateNow\n    });\n  }\n\n  // async ping(): Promise<unknown> {\n  //   if (this.useCache(\"ping\")) {\n  //     return storageService.get(\"ping.value\");\n  //   }\n\n  //   const response = await CoinGeckoRequest.get(\"/ping\");\n  //   this.setCache(\"ping\", response);\n  //   return response;\n  // }\n\n  // async getCoinsList(): Promise<any> {\n  //   if (this.useCache(\"coinsList\")) {\n  //     return storageService.get(\"coinsList.value\");\n  //   }\n  //   const response = await CoinGeckoRequest.get(\"/coins/list\");\n  //   this.setCache(\"coinsList\", response);\n  //   return response;\n  // }\n\n  // async getSupportedCurrencies(): Promise<any> {\n  //   if (this.useCache(\"supportedCurrencies\")) {\n  //     return storageService.get(\"supportedCurrencies.value\");\n  //   }\n  //   const response = await CoinGeckoRequest.get(\"/simple/supported_vs_currencies\");\n  //   this.setCache(\"supportedCurrencies\", response);\n  //   return response;\n  // }\n\n  async getPrices(): Promise<PricesInterface> {\n    if (this.useCache(\"prices\")) {\n      return storageService.get(\"prices.value\");\n    }\n    const response = await CoinGeckoRequest.get(\"/simple/price\", {\n      ids: CryptoCurrenciesIds.join(\",\"),\n      vs_currencies: Object.keys(CurrencyEnum)\n        .map((key) => key.toLowerCase())\n        .join(\",\")\n    });\n    this.setCache(\"prices\", response);\n    return response;\n  }\n\n  async getCoinsData(): Promise<CoinInterface[]> {\n    if (this.useCache(\"coinsData\")) {\n      return storageService.get(\"coinsData.value\");\n    }\n    const response = await MinerstatRequest.get(\"/\", {\n      list: Object.keys(CoinSymbolEnum).join(\",\")\n    });\n    this.setCache(\"coinsData\", response);\n    return response;\n  }\n\n  getHashRateFromString(hashRateString: HashRateStringToNumber, amount: number) {\n    return amount * Number(HashRateStringToNumber[hashRateString]);\n  }\n\n  async calculateCoinForHashRate({\n    coinSymbol,\n    hashRate,\n    power,\n    powerCost,\n    currency,\n    algorithm,\n    poolFee,\n    customPrice\n  }: {\n    customPrice: number;\n    coinSymbol: CoinSymbolEnum;\n    hashRate: number;\n    power: number;\n    powerCost: number;\n    currency: string;\n    algorithm?: AlgorithmsEnum;\n    poolFee: number;\n  }): Promise<CalculationsResult> {\n    let coins = await this.getCoinsData();\n    let pricesForAllCoins = await this.getPrices();\n\n    if (!coins || !pricesForAllCoins) {\n      throw new Error(\"Could not load data\");\n    }\n\n    let coin = coins.find((coin) => coin.coin === coinSymbol);\n\n    if (!coin || !CryptoCurrencies[coinSymbol] || !pricesForAllCoins[CryptoCurrencies[coinSymbol].id]) {\n      throw new Error(\"Coin not found\");\n    }\n\n    if (algorithm && coin.algorithm !== algorithm) {\n      throw new Error(\"Algorithm not supported\");\n    }\n\n    let currencyLowerCased = (currency || \"usd\").toLowerCase();\n\n    let realPrice =\n      pricesForAllCoins[CryptoCurrencies[coinSymbol].id][currencyLowerCased] ||\n      pricesForAllCoins[CryptoCurrencies[coinSymbol].id].usd;\n    let coinPrice = customPrice || realPrice;\n\n    const coinRewardPerDayMined = coin.reward * hashRate * 24;\n    const dailyMinedFee = coinRewardPerDayMined * poolFee;\n    const rewardWithoutFee = coinRewardPerDayMined - dailyMinedFee;\n    const dailyMined = rewardWithoutFee;\n    const dailyIncome = dailyMined * coinPrice;\n    const dailyIncomeFee = dailyMinedFee * coinPrice;\n    const dailyPowerCost = (powerCost / 1000) * power * 24;\n    const dailyProfit = dailyIncome - dailyPowerCost;\n\n    const costPerMinedCoin = (dailyPowerCost + dailyIncomeFee) / dailyMined;\n    const electricityPriceBreakEven = ((dailyMined * coinPrice * 1000) / power) * 24;\n    const hashPrice = coinRewardPerDayMined * coinPrice;\n\n    return {\n      daily: {\n        mined: dailyMined,\n        minedFee: dailyMinedFee,\n        income: dailyIncome,\n        incomeFee: dailyIncomeFee,\n        powerCost: dailyPowerCost,\n        profit: dailyProfit\n      },\n      weekly: {\n        mined: dailyMined * 7,\n        minedFee: dailyMinedFee * 7,\n        income: dailyIncome * 7,\n        incomeFee: dailyIncomeFee * 7,\n        powerCost: dailyPowerCost * 7,\n        profit: dailyProfit * 7\n      },\n      monthly: {\n        mined: dailyMined * 30,\n        minedFee: dailyMinedFee * 30,\n        income: dailyIncome * 30,\n        incomeFee: dailyIncomeFee * 30,\n        powerCost: dailyPowerCost * 30,\n        profit: dailyProfit * 30\n      },\n      yearly: {\n        mined: dailyMined * 365,\n        minedFee: dailyMinedFee * 365,\n        income: dailyIncome * 365,\n        incomeFee: dailyIncomeFee * 365,\n        powerCost: dailyPowerCost * 365,\n        profit: dailyProfit * 365\n      },\n      currency,\n      price: coinPrice,\n      realPrice: realPrice,\n      costPerMinedCoin,\n      electricityPriceBreakEven,\n      hashPrice\n    };\n  }\n}\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function XmrSVG() {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 3756.09 3756.49\">\n      <title>monero</title>\n      <path\n        d=\"M4128,2249.81C4128,3287,3287.26,4127.86,2250,4127.86S372,3287,372,2249.81,1212.76,371.75,2250,371.75,4128,1212.54,4128,2249.81Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#fff\"\n      />\n      <path\n        id=\"_149931032\"\n        data-name=\" 149931032\"\n        d=\"M2250,371.75c-1036.89,0-1879.12,842.06-1877.8,1878,0.26,207.26,33.31,406.63,95.34,593.12h561.88V1263L2250,2483.57,3470.52,1263v1579.9h562c62.12-186.48,95-385.85,95.37-593.12C4129.66,1212.76,3287,372,2250,372Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#f26822\"\n      />\n      <path\n        id=\"_149931160\"\n        data-name=\" 149931160\"\n        d=\"M1969.3,2764.17l-532.67-532.7v994.14H1029.38l-384.29.07c329.63,540.8,925.35,902.56,1604.91,902.56S3525.31,3766.4,3855,3225.6H3063.25V2231.47l-532.7,532.7-280.61,280.61-280.62-280.61h0Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#4d4d4d\"\n      />\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport v from \"valyrian.js/lib\";\n\nexport function ZecSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 2500 2500\">\n      <defs>\n        <style>{`.cls-1{fill:url(#linear-gradient);}`}</style>\n        <linearGradient\n          id=\"linear-gradient\"\n          x1=\"782.84\"\n          y1=\"165.91\"\n          x2=\"799.34\"\n          y2=\"165.91\"\n          gradientTransform=\"translate(-81568.2 55372.05) rotate(-45) scale(122.41)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0\" stop-color=\"#cf8724\" />\n          <stop offset=\"1\" stop-color=\"#fdce58\" />\n        </linearGradient>\n      </defs>\n      <title>z</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n          <path\n            class=\"cls-1\"\n            d=\"M1263.05,2297.61c-569.6,0-1034.57-465.43-1034.57-1034.56,0-569.6,465.44-1034.57,1034.57-1034.57,569.6,0,1034.56,465.44,1034.56,1034.57C2297.61,1832.65,1832.65,2297.61,1263.05,2297.61Z\"\n          />\n          <path d=\"M1250,2500C562.5,2500,0,1937.5,0,1250S562.5,0,1250,0,2500,562.5,2500,1250,1937.5,2500,1250,2500Zm0-2222.06c-534.56,0-972.06,437.5-972.06,972.06s437.5,972.06,972.06,972.06,972.06-437.5,972.06-972.06S1784.56,277.94,1250,277.94Z\" />\n          <path d=\"M1221.05,1588.59h541.67v270.84h-319.6v229.16H1165.18V1866.53H831.85c0-90.44-13.73-180.4,7.1-263.73,7.1-41.67,55.4-83.34,90.43-125,104.17-125,208.34-250,319.61-375,41.66-48.77,83.33-90.44,132.1-145.83H860.26V686.13h305.39V457h270.84V679h333.33c0,90.43,13.73,180.4-7.1,263.73-7.1,41.67-55.4,83.33-90.44,125-104.16,125-208.33,250-319.6,375C1311,1491.53,1269.35,1539.82,1221.05,1588.59Z\" />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nconst Key = \"hash-power-income-calculator\";\nexport class StorageService {\n  db: Storage;\n  constructor() {\n    this.db = window.localStorage || window.sessionStorage;\n  }\n\n  private getDb(): Record<string | number | symbol, any> {\n    let obj;\n\n    try {\n      obj = JSON.parse(this.db.getItem(Key) || \"{}\");\n    } catch (e) {\n      obj = {};\n    }\n    return obj;\n  }\n\n  get(key: string, fallback = null): any | null {\n    let result = this.getDb();\n\n    let parsed = key.split(\".\");\n    let next;\n\n    while (parsed.length) {\n      next = parsed.shift();\n      if (next in result === false || (parsed.length > 0 && typeof result[next] !== \"object\")) {\n        return fallback;\n      }\n\n      result = result[next];\n    }\n\n    return result === null || typeof result === \"undefined\" ? fallback : result;\n  }\n\n  set(key: string, value: any) {\n    let result = this.getDb();\n    let finalResult = result;\n\n    let parsed = key.split(\".\");\n    let next: string | number;\n\n    while (parsed.length) {\n      next = parsed.shift();\n      if (next in result === false || (parsed.length > 0 && typeof result[next] !== \"object\")) {\n        result[next] = {};\n      }\n\n      if (parsed.length === 0) {\n        if (value === null) {\n          delete result[next];\n        } else {\n          result[next] = value;\n        }\n      }\n\n      result = result[next];\n    }\n\n    this.db.setItem(Key, JSON.stringify(finalResult));\n  }\n}\n\nexport const storageService = new StorageService();\n", "// Format money with currency symbol and decimal precision (2) using the Intl.NumberFormat API\n\nimport { Directive, IVnode, Valyrian } from \"valyrian.js/lib/interfaces\";\n\nenum CurrencyToLanguageEnum {\n  \"USD\" = \"en-US\",\n  \"EUR\" = \"es-ES\",\n  \"GBP\" = \"en-GB\",\n  \"CAD\" = \"en-CA\",\n  \"AUD\" = \"en-AU\",\n  \"CHF\" = \"fr-CH\",\n  \"CNY\" = \"zh-CN\",\n  \"RUB\" = \"ru-RU\",\n  \"BRL\" = \"pt-BR\",\n  \"HKD\" = \"zh-HK\",\n  \"JPY\" = \"ja-JP\",\n  \"MXN\" = \"es-MX\"\n}\n\nlet formatMoney = (amount: number, currency: CurrencyToLanguageEnum, language: string) => {\n  let formatter = new Intl.NumberFormat(language, {\n    style: \"currency\",\n    currency: currency,\n    minimumFractionDigits: 2\n  });\n  return formatter.format(amount);\n};\n\nlet formatNumber = (amount: number, decimalPlaces: number, language: string) => {\n  let formatter = new Intl.NumberFormat(language, {\n    style: \"decimal\",\n    minimumFractionDigits: decimalPlaces,\n    maximumFractionDigits: decimalPlaces\n  });\n  return formatter.format(amount);\n};\n\nexport function formatMoneyDirective(currency: CurrencyToLanguageEnum, vnode: IVnode) {\n  let child = vnode.children[0];\n  if (typeof child === \"number\") {\n    vnode.children[0] = formatMoney(child, currency, CurrencyToLanguageEnum[currency]);\n  }\n}\n\nexport function formatNumberDirective(\n  { currency, decimalPlaces }: { currency: CurrencyToLanguageEnum; decimalPlaces: number },\n  vnode: IVnode\n) {\n  let child = vnode.children[0];\n  if (typeof child === \"number\") {\n    vnode.children[0] = formatNumber(child, decimalPlaces, CurrencyToLanguageEnum[currency]);\n  }\n}\n", "import {\n  CalculationResult,\n  CalculationsResult,\n  CalculatorService,\n  CoinSymbolEnum,\n  CryptoCurrencies,\n  CurrencyEnum\n} from \"./business-logic/crypto-calculator-service\";\nimport hooksPlugin, { useCallback } from \"valyrian.js/plugins/hooks\";\n\nimport v from \"valyrian.js/lib\";\n\nv.use(hooksPlugin);\n\nconst DefaultCurrency = CurrencyEnum.USD;\nconst DefaultCoin = CryptoCurrencies.ETH;\nconst AllowSelectMiner = false;\n\nenum FormToShow {\n  \"minerSelect\" = \"minerSelect\",\n  \"manualConfig\" = \"manualConfig\"\n}\n\nconst DefaultConfig = {\n  powerCost: 0.1,\n  poolFee: 1\n};\n\nconst Store = {\n  currency: DefaultCurrency,\n  coin: DefaultCoin,\n  formToShow: FormToShow.manualConfig,\n  config: {\n    powerCost: DefaultConfig.powerCost,\n    poolFee: DefaultConfig.poolFee,\n    customPrice: 0,\n    BTC: { ...CryptoCurrencies.BTC.config },\n    ETH: { ...CryptoCurrencies.ETH.config },\n    ETC: { ...CryptoCurrencies.ETC.config },\n    LTC: { ...CryptoCurrencies.LTC.config },\n    XMR: { ...CryptoCurrencies.XMR.config },\n    ZEC: { ...CryptoCurrencies.ZEC.config },\n    DASH: { ...CryptoCurrencies.DASH.config }\n  },\n  result: {} as CalculationsResult\n};\n\nfunction CoinNav() {\n  return (\n    <nav v-for={Object.keys(CryptoCurrencies)} class=\"coin-nav flex\">\n      {(key) => (\n        <button\n          v-class={{\n            active: Store.coin.symbol === key\n          }}\n          onclick={() => {\n            Store.coin = CryptoCurrencies[key];\n            Store.config.customPrice = null;\n          }}\n        >\n          {key}\n        </button>\n      )}\n    </nav>\n  );\n}\n\nfunction CurrencyNav() {\n  return (\n    <nav v-for={Object.keys(CurrencyEnum)} class=\"currency-nav flex flex-column\">\n      {(key) => (\n        <button\n          v-class={{\n            active: Store.currency === key\n          }}\n          onclick={() => {\n            Store.currency = key;\n            Store.config.customPrice = null;\n          }}\n        >\n          {key}\n        </button>\n      )}\n    </nav>\n  );\n}\n\nfunction CoinDescription() {\n  return (\n    <div class=\"coin-description-top\">\n      <figure>{Store.coin.icon}</figure>\n      <b>{Store.coin.name}</b>\n      <small class=\"flex flex-row\">\n        <span class=\"u-p-xs u-no-warp\">1 {Store.coin.symbol} = </span>\n        <input type=\"number\" v-model={[Store.config, \"customPrice\"]} step=\"0.01\" class=\"u-m-0\" />\n        <span class=\"u-p-xs u-no-warp\">{Store.currency}</span>\n      </small>\n      <small v-format-money={Store.currency} class=\"note text-xs\">\n        {Store.result.realPrice}\n      </small>\n    </div>\n  );\n}\n\nfunction MinerSelect() {\n  return <div v-if={Store.formToShow === FormToShow.minerSelect && AllowSelectMiner}></div>;\n}\n\nfunction ManualConfig() {\n  return (\n    <div v-if={!AllowSelectMiner || Store.formToShow === FormToShow.manualConfig}>\n      <form>\n        <section>\n          <div class=\"flex flex-hash-power\">\n            <fieldset>\n              <legend>Hash Power</legend>\n              <input\n                type=\"number\"\n                placeholder=\"Hash power\"\n                v-model={[Store.config[Store.coin.symbol], \"hashRateAmount\"]}\n                onkeyup={v.update}\n              />\n            </fieldset>\n            <fieldset class=\"hash-power\">\n              <legend>&nbsp;</legend>\n              <select\n                value={Store.config[Store.coin.symbol].hashRateType}\n                onchange={(e) => {\n                  Store.config[Store.coin.symbol].hashRateType = e.target.value;\n                  v.update();\n                }}\n              >\n                <option>Ph/s</option>\n                <option>Th/s</option>\n                <option>Gh/s</option>\n                <option>Mh/s</option>\n                <option>Kh/s</option>\n                <option>H/s</option>\n              </select>\n            </fieldset>\n          </div>\n          <fieldset>\n            <legend>Power Consumption (W)</legend>\n            <input\n              type=\"number\"\n              placeholder=\"Power Consumption (W)\"\n              v-model={[Store.config[Store.coin.symbol], \"power\"]}\n              onkeyup={v.update}\n            />\n          </fieldset>\n          <fieldset>\n            <legend>Power Cost Kw/h ($)</legend>\n            <input\n              type=\"number\"\n              placeholder=\"Power Cost Kw/h ($)\"\n              v-model={[Store.config, \"powerCost\"]}\n              onkeyup={v.update}\n            />\n          </fieldset>\n          <fieldset>\n            <legend>Pool fee (%)</legend>\n            <input type=\"number\" placeholder=\"Pool fee (%)\" v-model={[Store.config, \"poolFee\"]} onkeyup={v.update} />\n          </fieldset>\n        </section>\n      </form>\n    </div>\n  );\n}\n\nfunction ConfigSection() {\n  return (\n    <div class=\"config\">\n      <nav v-if={AllowSelectMiner}>\n        <button\n          v-class={{\n            active: Store.formToShow === FormToShow.minerSelect\n          }}\n        >\n          Miner List\n        </button>\n        <button\n          v-class={{\n            active: Store.formToShow === FormToShow.manualConfig\n          }}\n        >\n          Manual\n        </button>\n      </nav>\n      <section>\n        <MinerSelect />\n        <ManualConfig />\n      </section>\n    </div>\n  );\n}\n\nenum ResultByEnum {\n  \"daily\" = \"Day\",\n  \"weekly\" = \"Week\",\n  \"monthly\" = \"Month\",\n  \"yearly\" = \"Year\"\n}\n\nfunction ResultBy({ by }: { by: string }) {\n  let result = Store.result[by] as CalculationResult;\n  let byString = ResultByEnum[by];\n  if (result === undefined) {\n    return (\n      <tr>\n        <td colspan=\"4\"> - </td>\n      </tr>\n    );\n  }\n\n  return (\n    <tr>\n      <td>\n        <small>Mined/{byString}</small>\n        <b\n          v-format-number={{\n            currency: Store.currency,\n            decimalPlaces: 6\n          }}\n        >\n          {result.mined}\n        </b>\n        <small>\n          Pool fee: <span v-format-number={{ currency: Store.currency, decimalPlaces: 6 }}>{result.minedFee}</span>\n        </small>\n      </td>\n      <td>\n        <small>Income/{byString}</small>\n        <b v-format-money={Store.currency}>{result.income}</b>\n        <small>\n          Pool fee <span v-format-money={Store.currency}>{result.incomeFee}</span>\n        </small>\n      </td>\n      <td>\n        <small>Power cost/{byString}</small>\n        <b v-format-money={Store.currency}>{result.powerCost}</b>\n      </td>\n      <td>\n        <small>Profit/{byString}</small>\n        <b v-format-money={Store.currency}>{result.profit}</b>\n      </td>\n    </tr>\n  );\n}\n\nfunction Results() {\n  if (Store.result.daily === undefined) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <tr class=\"results\">\n      <td colspan=\"2\">\n        <dl>\n          <dt>\n            <dd>\n              Cost by <span class=\"text-sm\">{Store.coin.name}</span> mined\n            </dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.costPerMinedCoin}</b>\n            </dd>\n          </dt>\n          <dt>\n            <dd>Electricity BreakEven</dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.electricityPriceBreakEven}</b>\n            </dd>\n          </dt>\n          <dt>\n            <dd>Hashprice</dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.hashPrice}</b>\n            </dd>\n          </dt>\n        </dl>\n      </td>\n      <td colspan=\"2\">\n        <b>Profit by month</b>\n        <b v-format-money={Store.currency}>{Store.result.monthly.profit}</b>\n      </td>\n    </tr>\n  );\n}\n\nconst calculatorService = new CalculatorService();\n\nasync function computeProfit() {\n  console.log(\"Computing profit...\");\n  if (Store.config[Store.coin.symbol] === undefined || Store.config[Store.coin.symbol].hashRateAmount === undefined) {\n    return;\n  }\n\n  if (Store.config.powerCost === undefined) {\n    Store.config.powerCost === 0;\n  }\n  if (Store.config.poolFee === undefined) {\n    Store.config.poolFee === 0;\n  }\n\n  const hashRate = calculatorService.getHashRateFromString(\n    Store.config[Store.coin.symbol].hashRateType,\n    Store.config[Store.coin.symbol].hashRateAmount\n  );\n\n  let results = await calculatorService.calculateCoinForHashRate({\n    customPrice: Store.config.customPrice,\n    coinSymbol: CoinSymbolEnum[Store.coin.symbol],\n    hashRate,\n    power: Store.config[Store.coin.symbol].power,\n    powerCost: Store.config.powerCost,\n    currency: Store.currency,\n    poolFee: Store.config.poolFee / 100\n  });\n\n  Store.result = results;\n  Store.config.customPrice = results.price;\n  console.log(\"Done computing profit.\");\n  v.update();\n}\n\nexport function App() {\n  useCallback(\n    () => computeProfit(),\n    [\n      Store.config.customPrice,\n      Store.coin.symbol,\n      Store.currency,\n      Store.config[Store.coin.symbol].hashRateAmount,\n      Store.config[Store.coin.symbol].hashRateType,\n      Store.config[Store.coin.symbol].power,\n      Store.config.powerCost,\n      Store.config.poolFee\n    ]\n  );\n  return [\n    <CoinNav />,\n    <article class=\"flex\">\n      <CurrencyNav />\n      <section class=\"coin-container flex flex-1\">\n        <div class=\"coin-description\">\n          <CoinDescription />\n          <ConfigSection />\n        </div>\n\n        <table class=\"coin-result flex-1\">\n          <tbody>\n            <ResultBy by=\"daily\" />\n            <ResultBy by=\"weekly\" />\n            <ResultBy by=\"monthly\" />\n            <ResultBy by=\"yearly\" />\n            <Results />\n          </tbody>\n        </table>\n      </section>\n    </article>,\n    <small class=\"note text-sm text-right\">Data is updated every 30 minutes</small>\n  ];\n}\n", "import \"./business-logic/crypto-calculator-service\";\n\nimport { formatMoneyDirective, formatNumberDirective } from \"./common/format-number\";\n\nimport { App } from \"./app\";\nimport v from \"valyrian.js/lib\";\n\nv.directive(\"format-number\", formatNumberDirective);\nv.directive(\"format-money\", formatMoneyDirective);\n\nv.mount(\"body\", App);\n"],
  "mappings": "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",
  "names": []
}
