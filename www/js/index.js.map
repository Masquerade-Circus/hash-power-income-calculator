//# sourceMappingURL=data:application/json;charset=utf-8;base64,{
  "version": 3,
  "sources": ["../node_modules/valyrian.js/dist/index.mjs", "../app/business-logic/btc.svg.tsx", "../app/business-logic/dash.svg.tsx", "../app/business-logic/etc.svg.tsx", "../app/business-logic/eth.svg.tsx", "../app/business-logic/ltc.svg.tsx", "../app/business-logic/xmr.svg.tsx", "../app/business-logic/zec.svg.tsx", "../node_modules/valyrian.js/dist/request/index.mjs", "../app/common/storage-service.ts", "../app/business-logic/crypto-calculator-service.ts", "../app/common/format-number.ts", "../node_modules/valyrian.js/dist/hooks/index.mjs", "../app/app.tsx", "../app/index.tsx"],
  "sourcesContent": ["// lib/index.ts\nvar textTag = \"#text\";\nvar isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\nfunction createDomElement(tag, isSVG = false) {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag);\n}\nvar Vnode = function Vnode2(tag, props, children) {\n  this.tag = tag;\n  this.props = props;\n  this.children = children;\n};\nfunction isComponent(component) {\n  return component && (typeof component === \"function\" || typeof component === \"object\" && \"view\" in component);\n}\nvar isVnode = (object) => {\n  return object instanceof Vnode;\n};\nvar isVnodeComponent = (object) => {\n  return isVnode(object) && isComponent(object.tag);\n};\nfunction domToVnode(dom) {\n  let children = [];\n  for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n    let childDom = dom.childNodes[i];\n    if (childDom.nodeType === 3) {\n      let vnode2 = new Vnode(textTag, {}, []);\n      vnode2.dom = childDom;\n      children.push(vnode2);\n      continue;\n    }\n    if (childDom.nodeType === 1) {\n      children.push(domToVnode(childDom));\n    }\n  }\n  let props = {};\n  for (let i = 0, l = dom.attributes.length; i < l; i++) {\n    let attr = dom.attributes[i];\n    props[attr.nodeName] = attr.nodeValue;\n  }\n  let vnode = new Vnode(dom.tagName.toLowerCase(), props, children);\n  vnode.dom = dom;\n  return vnode;\n}\nfunction trust(htmlString) {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n  return [].map.call(div.childNodes, (item) => domToVnode(item));\n}\nvar mainComponent = null;\nvar mainVnode = null;\nvar isMounted = false;\nvar current = {\n  vnode: null,\n  oldVnode: null,\n  component: null\n};\nvar reservedProps = {\n  key: true,\n  state: true,\n  \"v-keep\": true,\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true,\n  \"v-model\": true,\n  \"v-create\": true,\n  \"v-update\": true,\n  \"v-cleanup\": true\n};\nvar onCleanupSet = /* @__PURE__ */ new Set();\nvar onMountSet = /* @__PURE__ */ new Set();\nvar onUpdateSet = /* @__PURE__ */ new Set();\nvar onUnmountSet = /* @__PURE__ */ new Set();\nfunction onMount(callback) {\n  onMountSet.add(callback);\n}\nfunction onUpdate(callback) {\n  onUpdateSet.add(callback);\n}\nfunction onCleanup(callback) {\n  onCleanupSet.add(callback);\n}\nfunction onUnmount(callback) {\n  onUnmountSet.add(callback);\n}\nfunction callSet(set) {\n  for (let callback of set) {\n    callback();\n  }\n  set.clear();\n}\nvar eventListenerNames = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `v-on${e.type}`;\n  while (dom) {\n    if (dom[name]) {\n      dom[name](e, dom);\n      if (!e.defaultPrevented) {\n        update();\n      }\n      return;\n    }\n    dom = dom.parentNode;\n  }\n}\nvar hideDirective = (test) => (bool, vnode, oldnode) => {\n  let value = test ? bool : !bool;\n  if (value) {\n    let newdom = document.createTextNode(\"\");\n    if (oldnode && oldnode.dom && oldnode.dom.parentNode) {\n      oldnode.dom.parentNode.replaceChild(newdom, oldnode.dom);\n    }\n    vnode.tag = \"#text\";\n    vnode.children = [];\n    vnode.props = {};\n    vnode.dom = newdom;\n    return false;\n  }\n};\nvar directives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set, vnode) => {\n    let newChildren = [];\n    let callback = vnode.children[0];\n    for (let i = 0, l = set.length; i < l; i++) {\n      newChildren.push(callback(set[i], i));\n    }\n    vnode.children = newChildren;\n  },\n  \"v-show\": (bool, vnode) => {\n    vnode.dom.style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes, vnode) => {\n    for (let name in classes) {\n      vnode.dom.classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html, vnode) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event], vnode, oldVnode) => {\n    if (oldVnode && oldVnode.dom === vnode.dom) {\n      let [oldModel, oldProperty, oldEvent] = oldVnode.props[\"v-model\"] || [];\n      if (oldModel === model && oldProperty === property && oldEvent === event) {\n        return;\n      }\n    }\n    let value;\n    let handler = (e) => model[property] = e.target.value;\n    if (vnode.tag === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e) => {\n              let val = e.target.value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => model[property] = !model[property];\n            value = model[property];\n          }\n          sharedSetAttribute(\"checked\", value, vnode);\n          break;\n        }\n        case \"radio\": {\n          sharedSetAttribute(\"checked\", model[property] === vnode.dom.value, vnode);\n          break;\n        }\n        default: {\n          sharedSetAttribute(\"value\", model[property], vnode);\n        }\n      }\n    } else if (vnode.tag === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e) => {\n          let val = e.target.value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child) => {\n          if (child.tag === \"option\") {\n            let value2 = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value2) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child) => {\n          if (child.tag === \"option\") {\n            let value2 = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value2 === model[property];\n          }\n        });\n      }\n    } else if (vnode.tag === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n    let prevHandler = vnode.props[event];\n    sharedSetAttribute(\n      event,\n      (e) => {\n        handler(e);\n        if (prevHandler) {\n          prevHandler(e);\n        }\n      },\n      vnode,\n      oldVnode\n    );\n  },\n  \"v-create\": (callback, vnode, oldVnode) => {\n    if (!oldVnode) {\n      callback(vnode);\n    }\n  },\n  \"v-update\": (callback, vnode, oldVnode) => {\n    if (oldVnode) {\n      callback(vnode, oldVnode);\n    }\n  },\n  \"v-cleanup\": (callback, vnode, oldVnode) => {\n    onCleanup(() => callback(vnode, oldVnode));\n  }\n};\nfunction directive(name, directive2) {\n  let directiveName = `v-${name}`;\n  directives[directiveName] = directive2;\n  reservedProps[directiveName] = true;\n}\nfunction sharedSetAttribute(name, value, newVnode, oldVnode) {\n  if (typeof value === \"function\") {\n    if (name in eventListenerNames === false) {\n      mainVnode.dom.addEventListener(name.slice(2), eventListener);\n      eventListenerNames[name] = true;\n    }\n    newVnode.dom[`v-${name}`] = value;\n    return;\n  }\n  if (name in newVnode.dom && newVnode.isSVG === false) {\n    if (newVnode.dom[name] != value) {\n      newVnode.dom[name] = value;\n    }\n    return;\n  }\n  if (!oldVnode || value !== oldVnode.props[name]) {\n    if (value === false) {\n      newVnode.dom.removeAttribute(name);\n    } else {\n      newVnode.dom.setAttribute(name, value);\n    }\n  }\n}\nfunction setAttribute(name, value, newVnode, oldVnode) {\n  if (name in reservedProps) {\n    return;\n  }\n  newVnode.props[name] = value;\n  sharedSetAttribute(name, value, newVnode, oldVnode);\n}\nfunction updateAttributes(newVnode, oldVnode) {\n  if (oldVnode) {\n    for (let name in oldVnode.props) {\n      if (name in newVnode.props === false && name in eventListenerNames === false && name in reservedProps === false) {\n        if (name in newVnode.dom && newVnode.isSVG === false) {\n          newVnode.dom[name] = null;\n        } else {\n          newVnode.dom.removeAttribute(name);\n        }\n      }\n    }\n  }\n  for (let name in newVnode.props) {\n    if (name in reservedProps) {\n      if (name in directives && directives[name](newVnode.props[name], newVnode, oldVnode) === false) {\n        break;\n      }\n      continue;\n    }\n    sharedSetAttribute(name, newVnode.props[name], newVnode, oldVnode);\n  }\n}\nfunction patch(newVnode, oldVnode) {\n  let newTree = newVnode.children;\n  let oldTree = oldVnode?.children || [];\n  let oldTreeLength = oldTree.length;\n  if (oldTreeLength && newTree[0] instanceof Vnode && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    let newTreeLength = newTree.length;\n    let oldKeyedList = {};\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldKeyedList[oldTree[i].props.key] = i;\n    }\n    let newKeyedList = {};\n    for (let i = 0; i < newTreeLength; i++) {\n      newKeyedList[newTree[i].props.key] = i;\n    }\n    for (let i = 0; i < newTreeLength; i++) {\n      let newChild = newTree[i];\n      let oldChild = oldTree[oldKeyedList[newChild.props.key]];\n      let shouldPatch = true;\n      if (oldChild) {\n        newChild.dom = oldChild.dom;\n        if (\"v-keep\" in newChild.props && newChild.props[\"v-keep\"] === oldChild.props[\"v-keep\"]) {\n          newChild.children = oldChild.children;\n          shouldPatch = false;\n        } else {\n          updateAttributes(newChild, oldChild);\n        }\n      } else {\n        newChild.dom = createDomElement(newChild.tag, newChild.isSVG);\n        updateAttributes(newChild);\n      }\n      if (!newVnode.dom.childNodes[i]) {\n        newVnode.dom.appendChild(newChild.dom);\n      } else if (newVnode.dom.childNodes[i] !== newChild.dom) {\n        newVnode.dom.replaceChild(newChild.dom, newVnode.dom.childNodes[i]);\n      }\n      shouldPatch && patch(newChild, oldChild);\n    }\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      if (!newKeyedList[oldTree[i].props.key]) {\n        oldTree[i].dom.parentNode && oldTree[i].dom.parentNode.removeChild(oldTree[i].dom);\n      }\n    }\n    return;\n  }\n  if (newTree.length === 0) {\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n  current.vnode = newVnode;\n  current.oldVnode = oldVnode;\n  for (let i = 0; i < newTree.length; i++) {\n    let newChild = newTree[i];\n    if (newChild instanceof Vnode && newChild.tag !== textTag) {\n      if (typeof newChild.tag !== \"string\") {\n        current.component = newChild.tag;\n        newTree.splice(\n          i--,\n          1,\n          (\"view\" in newChild.tag ? newChild.tag.view.bind(newChild.tag) : newChild.tag.bind(newChild.tag))(\n            newChild.props,\n            ...newChild.children\n          )\n        );\n        continue;\n      }\n      newChild.isSVG = newVnode.isSVG || newChild.tag === \"svg\";\n      if (i < oldTreeLength) {\n        let oldChild = oldTree[i];\n        if (newChild.tag === oldChild.tag) {\n          newChild.dom = oldChild.dom;\n          if (\"v-keep\" in newChild.props && newChild.props[\"v-keep\"] === oldChild.props[\"v-keep\"]) {\n            newChild.children = oldChild.children;\n            continue;\n          }\n          updateAttributes(newChild, oldChild);\n          patch(newChild, oldChild);\n          continue;\n        }\n        newChild.dom = createDomElement(newChild.tag, newChild.isSVG);\n        updateAttributes(newChild);\n        newVnode.dom.replaceChild(newChild.dom, oldChild.dom);\n        patch(newChild);\n        continue;\n      }\n      newChild.dom = createDomElement(newChild.tag, newChild.isSVG);\n      updateAttributes(newChild);\n      newVnode.dom.appendChild(newChild.dom);\n      patch(newChild);\n      continue;\n    }\n    if (Array.isArray(newChild)) {\n      newTree.splice(i--, 1, ...newChild);\n      continue;\n    }\n    if (newChild === null || newChild === void 0) {\n      newTree.splice(i--, 1);\n      continue;\n    }\n    newTree[i] = new Vnode(textTag, {}, []);\n    if (newChild instanceof Vnode) {\n      newTree[i].dom = newChild.dom;\n      newChild = newChild.dom.textContent;\n    }\n    if (i < oldTreeLength) {\n      let oldChild = oldTree[i];\n      if (oldChild.tag === textTag) {\n        newTree[i].dom = oldChild.dom;\n        if (newChild != oldChild.dom.textContent) {\n          oldChild.dom.textContent = newChild;\n        }\n        continue;\n      }\n      newTree[i].dom = document.createTextNode(newChild);\n      newVnode.dom.replaceChild(newTree[i].dom, oldChild.dom);\n      continue;\n    }\n    newTree[i].dom = document.createTextNode(newChild);\n    newVnode.dom.appendChild(newTree[i].dom);\n  }\n  for (let i = newTree.length; i < oldTreeLength; i++) {\n    newVnode.dom.removeChild(oldTree[i].dom);\n  }\n}\nfunction update() {\n  if (mainVnode) {\n    callSet(onCleanupSet);\n    let oldMainVnode = mainVnode;\n    mainVnode = new Vnode(oldMainVnode.tag, oldMainVnode.props, [mainComponent]);\n    mainVnode.dom = oldMainVnode.dom;\n    mainVnode.isSVG = oldMainVnode.isSVG;\n    patch(mainVnode, oldMainVnode);\n    callSet(isMounted ? onUpdateSet : onMountSet);\n    isMounted = true;\n    current.vnode = null;\n    current.oldVnode = null;\n    current.component = null;\n    if (isNodeJs) {\n      return mainVnode.dom.innerHTML;\n    }\n  }\n}\nfunction unmount() {\n  if (mainVnode) {\n    mainComponent = new Vnode(() => null, {}, []);\n    let result = update();\n    callSet(onUnmountSet);\n    for (let name in eventListenerNames) {\n      mainVnode.dom.removeEventListener(name.slice(2).toLowerCase(), eventListener);\n      Reflect.deleteProperty(eventListenerNames, name);\n    }\n    mainComponent = null;\n    mainVnode = null;\n    isMounted = false;\n    current.vnode = null;\n    current.oldVnode = null;\n    current.component = null;\n    return result;\n  }\n}\nfunction mount(dom, component) {\n  let container = typeof dom === \"string\" ? isNodeJs ? createDomElement(dom, dom === \"svg\") : document.querySelectorAll(dom)[0] : dom;\n  let vnodeComponent = isVnodeComponent(component) ? component : isComponent(component) ? new Vnode(component, {}, []) : new Vnode(() => component, {}, []);\n  if (mainComponent && mainComponent.tag !== vnodeComponent.tag) {\n    unmount();\n  }\n  mainComponent = vnodeComponent;\n  mainVnode = domToVnode(container);\n  return update();\n}\nvar v = (tagOrComponent, props = {}, ...children) => {\n  return new Vnode(tagOrComponent, props || {}, children);\n};\nv.fragment = (props, ...children) => children;\nexport {\n  Vnode,\n  createDomElement,\n  current,\n  directive,\n  directives,\n  isComponent,\n  isNodeJs,\n  isVnode,\n  isVnodeComponent,\n  mount,\n  onCleanup,\n  onMount,\n  onUnmount,\n  onUpdate,\n  patch,\n  reservedProps,\n  setAttribute,\n  trust,\n  unmount,\n  update,\n  updateAttributes,\n  v\n};\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function BtcSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n      version=\"1.1\"\n      shape-rendering=\"geometricPrecision\"\n      text-rendering=\"geometricPrecision\"\n      image-rendering=\"optimizeQuality\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      viewBox=\"0 0 4091.27 4091.73\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\"\n    >\n      <g id=\"Layer_x0020_1\">\n        <metadata id=\"CorelCorpID_0Corel-Layer\" />\n        <g id=\"_1421344023328\">\n          <path\n            fill=\"#F7931A\"\n            fill-rule=\"nonzero\"\n            d=\"M4030.06 2540.77c-273.24,1096.01 -1383.32,1763.02 -2479.46,1489.71 -1095.68,-273.24 -1762.69,-1383.39 -1489.33,-2479.31 273.12,-1096.13 1383.2,-1763.19 2479,-1489.95 1096.06,273.24 1763.03,1383.51 1489.76,2479.57l0.02 -0.02z\"\n          />\n          <path\n            fill=\"white\"\n            fill-rule=\"nonzero\"\n            d=\"M2947.77 1754.38c40.72,-272.26 -166.56,-418.61 -450,-516.24l91.95 -368.8 -224.5 -55.94 -89.51 359.09c-59.02,-14.72 -119.63,-28.59 -179.87,-42.34l90.16 -361.46 -224.36 -55.94 -92 368.68c-48.84,-11.12 -96.81,-22.11 -143.35,-33.69l0.26 -1.16 -309.59 -77.31 -59.72 239.78c0,0 166.56,38.18 163.05,40.53 90.91,22.69 107.35,82.87 104.62,130.57l-104.74 420.15c6.26,1.59 14.38,3.89 23.34,7.49 -7.49,-1.86 -15.46,-3.89 -23.73,-5.87l-146.81 588.57c-11.11,27.62 -39.31,69.07 -102.87,53.33 2.25,3.26 -163.17,-40.72 -163.17,-40.72l-111.46 256.98 292.15 72.83c54.35,13.63 107.61,27.89 160.06,41.3l-92.9 373.03 224.24 55.94 92 -369.07c61.26,16.63 120.71,31.97 178.91,46.43l-91.69 367.33 224.51 55.94 92.89 -372.33c382.82,72.45 670.67,43.24 791.83,-303.02 97.63,-278.78 -4.86,-439.58 -206.26,-544.44 146.69,-33.83 257.18,-130.31 286.64,-329.61l-0.07 -0.05zm-512.93 719.26c-69.38,278.78 -538.76,128.08 -690.94,90.29l123.28 -494.2c152.17,37.99 640.17,113.17 567.67,403.91zm69.43 -723.3c-63.29,253.58 -453.96,124.75 -580.69,93.16l111.77 -448.21c126.73,31.59 534.85,90.55 468.94,355.05l-0.02 0z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function DashSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 513.4 416.8\">\n      <defs>\n        <style>\n          {`.cls-1 {\n        fill: #008de4;\n      }`}\n        </style>\n      </defs>\n      <title>d</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n          <path\n            class=\"cls-1\"\n            d=\"M336.25,0H149.35l-15.5,86.6,168.7.2c83.1,0,107.6,30.2,106.9,80.2-.4,25.6-11.5,69-16.3,83.1-12.8,37.5-39.1,80.2-137.7,80.1l-164-.1L76,416.8h186.5c65.8,0,93.7-7.7,123.4-21.3,65.7-30.5,104.8-95.3,120.5-179.9C529.65,89.6,500.65,0,336.25,0\"\n          />\n          <path\n            class=\"cls-1\"\n            d=\"M68.7,164.9c-49,0-56,31.9-60.6,51.2C2,241.3,0,251.6,0,251.6H191.4c49,0,56-31.9,60.6-51.2,6.1-25.2,8.1-35.5,8.1-35.5Z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function EtcSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1543 2499.2\">\n      <defs>\n        <style>{`.cls-1{fill:#3ab83a;}.cls-2{fill:#0b8311;}.cls-3{fill:#146714;}`}</style>\n      </defs>\n      <title>e</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"svg8\">\n          <g id=\"layer5\">\n            <g id=\"g1627\">\n              <path\n                id=\"path1599\"\n                class=\"cls-1\"\n                d=\"M0,1361.05c271.87,144.38,555.56,295.51,774.67,412.45L1543,1361.05c-278.2,413.29-510,757.36-768.33,1138.15C515.88,2119.25,230.08,1700,0,1361.05Zm29.55-114L775.51,849l736.25,395.14L775.93,1642.63ZM774.67,721.47,0,1129.28,771.29,0,1543,1131.81,774.67,721.47Z\"\n              />\n              <path\n                id=\"path1593\"\n                class=\"cls-2\"\n                d=\"M774.67,1773.5,1543,1361.05C1264.8,1774.34,774.67,2499.2,774.67,2499.2ZM775.51,849l736.25,395.14L775.93,1642.63,775.51,849Zm-.84-127.5L771.29,0,1543,1131.81Z\"\n              />\n              <path id=\"path1603\" class=\"cls-2\" d=\"M29.55,1247.06l746,61.22,736.25-63.75L775.93,1643.05Z\" />\n              <path id=\"path1606\" class=\"cls-3\" d=\"M775.51,1308.28l736.25-63.75L775.93,1643.05l-.42-334.77Z\" />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "import { v } from \"valyrian.js\";\n\nexport function EthSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xml:space=\"preserve\"\n      width=\"100%\"\n      height=\"100%\"\n      version=\"1.1\"\n      shape-rendering=\"geometricPrecision\"\n      text-rendering=\"geometricPrecision\"\n      image-rendering=\"optimizeQuality\"\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      viewBox=\"0 0 784.37 1277.39\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      xmlns:xodm=\"http://www.corel.com/coreldraw/odm/2003\"\n    >\n      <g id=\"Layer_x0020_1\">\n        <metadata id=\"CorelCorpID_0Corel-Layer\" />\n        <g id=\"_1421394342400\">\n          <g>\n            <polygon\n              fill=\"#343434\"\n              fill-rule=\"nonzero\"\n              points=\"392.07,0 383.5,29.11 383.5,873.74 392.07,882.29 784.13,650.54 \"\n            />\n            <polygon fill=\"#8C8C8C\" fill-rule=\"nonzero\" points=\"392.07,0 -0,650.54 392.07,882.29 392.07,472.33 \" />\n            <polygon\n              fill=\"#3C3C3B\"\n              fill-rule=\"nonzero\"\n              points=\"392.07,956.52 387.24,962.41 387.24,1263.28 392.07,1277.38 784.37,724.89 \"\n            />\n            <polygon fill=\"#8C8C8C\" fill-rule=\"nonzero\" points=\"392.07,1277.38 392.07,956.52 -0,724.89 \" />\n            <polygon fill=\"#141414\" fill-rule=\"nonzero\" points=\"392.07,882.29 784.13,650.54 392.07,472.33 \" />\n            <polygon fill=\"#393939\" fill-rule=\"nonzero\" points=\"0,650.54 392.07,882.29 392.07,472.33 \" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function LtcSVG() {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 82.6 82.6\">\n      <title>litecoin-ltc-logo</title>\n      <circle cx=\"41.3\" cy=\"41.3\" r=\"36.83\" style=\"fill:#fff\" />\n      <path\n        d=\"M41.3,0A41.3,41.3,0,1,0,82.6,41.3h0A41.18,41.18,0,0,0,41.54,0ZM42,42.7,37.7,57.2h23a1.16,1.16,0,0,1,1.2,1.12v.38l-2,6.9a1.49,1.49,0,0,1-1.5,1.1H23.2l5.9-20.1-6.6,2L24,44l6.6-2,8.3-28.2a1.51,1.51,0,0,1,1.5-1.1h8.9a1.16,1.16,0,0,1,1.2,1.12v.38L43.5,38l6.6-2-1.4,4.8Z\"\n        style=\"fill:#345d9d\"\n      />\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function XmrSVG() {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 3756.09 3756.49\">\n      <title>monero</title>\n      <path\n        d=\"M4128,2249.81C4128,3287,3287.26,4127.86,2250,4127.86S372,3287,372,2249.81,1212.76,371.75,2250,371.75,4128,1212.54,4128,2249.81Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#fff\"\n      />\n      <path\n        id=\"_149931032\"\n        data-name=\" 149931032\"\n        d=\"M2250,371.75c-1036.89,0-1879.12,842.06-1877.8,1878,0.26,207.26,33.31,406.63,95.34,593.12h561.88V1263L2250,2483.57,3470.52,1263v1579.9h562c62.12-186.48,95-385.85,95.37-593.12C4129.66,1212.76,3287,372,2250,372Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#f26822\"\n      />\n      <path\n        id=\"_149931160\"\n        data-name=\" 149931160\"\n        d=\"M1969.3,2764.17l-532.67-532.7v994.14H1029.38l-384.29.07c329.63,540.8,925.35,902.56,1604.91,902.56S3525.31,3766.4,3855,3225.6H3063.25V2231.47l-532.7,532.7-280.61,280.61-280.62-280.61h0Z\"\n        transform=\"translate(-371.96 -371.75)\"\n        style=\"fill:#4d4d4d\"\n      />\n    </svg>\n  );\n}\n", "/* eslint-disable max-len */\nimport { v } from \"valyrian.js\";\n\nexport function ZecSVG() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 2500 2500\">\n      <defs>\n        <style>{`.cls-1{fill:url(#linear-gradient);}`}</style>\n        <linearGradient\n          id=\"linear-gradient\"\n          x1=\"782.84\"\n          y1=\"165.91\"\n          x2=\"799.34\"\n          y2=\"165.91\"\n          gradientTransform=\"translate(-81568.2 55372.05) rotate(-45) scale(122.41)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0\" stop-color=\"#cf8724\" />\n          <stop offset=\"1\" stop-color=\"#fdce58\" />\n        </linearGradient>\n      </defs>\n      <title>z</title>\n      <g id=\"Layer_2\" data-name=\"Layer 2\">\n        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n          <path\n            class=\"cls-1\"\n            d=\"M1263.05,2297.61c-569.6,0-1034.57-465.43-1034.57-1034.56,0-569.6,465.44-1034.57,1034.57-1034.57,569.6,0,1034.56,465.44,1034.56,1034.57C2297.61,1832.65,1832.65,2297.61,1263.05,2297.61Z\"\n          />\n          <path d=\"M1250,2500C562.5,2500,0,1937.5,0,1250S562.5,0,1250,0,2500,562.5,2500,1250,1937.5,2500,1250,2500Zm0-2222.06c-534.56,0-972.06,437.5-972.06,972.06s437.5,972.06,972.06,972.06,972.06-437.5,972.06-972.06S1784.56,277.94,1250,277.94Z\" />\n          <path d=\"M1221.05,1588.59h541.67v270.84h-319.6v229.16H1165.18V1866.53H831.85c0-90.44-13.73-180.4,7.1-263.73,7.1-41.67,55.4-83.34,90.43-125,104.17-125,208.34-250,319.61-375,41.66-48.77,83.33-90.44,132.1-145.83H860.26V686.13h305.39V457h270.84V679h333.33c0,90.43,13.73,180.4-7.1,263.73-7.1,41.67-55.4,83.33-90.44,125-104.16,125-208.33,250-319.6,375C1311,1491.53,1269.35,1539.82,1221.05,1588.59Z\" />\n        </g>\n      </g>\n    </svg>\n  );\n}\n", "// lib/request/index.ts\nimport { isNodeJs } from \"valyrian.js\";\nfunction serialize(obj, prefix = \"\") {\n  return Object.keys(obj).map((prop) => {\n    let k = prefix ? `${prefix}[${prop}]` : prop;\n    return typeof obj[prop] === \"object\" ? serialize(obj[prop], k) : `${encodeURIComponent(k)}=${encodeURIComponent(obj[prop])}`;\n  }).join(\"&\");\n}\nfunction parseUrl(url, options) {\n  let u = /^https?/gi.test(url) ? url : options.urls.base + url;\n  let parts = u.split(\"?\");\n  u = parts[0].trim().replace(/^\\/\\//, \"/\").replace(/\\/$/, \"\").trim();\n  if (parts[1]) {\n    u += `?${parts[1]}`;\n  }\n  if (isNodeJs && typeof options.urls.node === \"string\") {\n    options.urls.node = options.urls.node;\n    if (typeof options.urls.api === \"string\") {\n      options.urls.api = options.urls.api.replace(/\\/$/gi, \"\").trim();\n      u = u.replace(options.urls.api, options.urls.node);\n    }\n    if (!/^https?/gi.test(u)) {\n      u = options.urls.node + u;\n    }\n  }\n  return u;\n}\nvar defaultOptions = { allowedMethods: [\"get\", \"post\", \"put\", \"patch\", \"delete\"] };\nfunction Requester(baseUrl = \"\", options = defaultOptions) {\n  let url = baseUrl.replace(/\\/$/gi, \"\").trim();\n  if (!options.urls) {\n    options.urls = {\n      base: \"\",\n      node: null,\n      api: null\n    };\n  }\n  if (!options.allowedMethods) {\n    options.allowedMethods = defaultOptions.allowedMethods;\n  }\n  let opts = {\n    ...options,\n    urls: {\n      node: options.urls.node || null,\n      api: options.urls.api || null,\n      base: options.urls.base ? options.urls.base + url : url\n    }\n  };\n  const request2 = async function request3(method, url2, data, options2 = {}) {\n    let innerOptions = {\n      method: method.toUpperCase(),\n      headers: {},\n      resolveWithFullResponse: false,\n      ...opts,\n      ...options2\n    };\n    if (!innerOptions.headers.Accept) {\n      innerOptions.headers.Accept = \"application/json\";\n    }\n    let acceptType = innerOptions.headers.Accept;\n    let contentType = innerOptions.headers[\"Content-Type\"] || innerOptions.headers[\"content-type\"] || \"\";\n    if (innerOptions.allowedMethods.indexOf(method) === -1) {\n      throw new Error(\"Method not allowed\");\n    }\n    if (data) {\n      if (innerOptions.method === \"GET\" && typeof data === \"object\") {\n        url2 += `?${serialize(data)}`;\n      }\n      if (innerOptions.method !== \"GET\") {\n        if (/json/gi.test(contentType)) {\n          innerOptions.body = JSON.stringify(data);\n        } else {\n          let formData;\n          if (data instanceof FormData) {\n            formData = data;\n          } else {\n            formData = new FormData();\n            for (let i in data) {\n              formData.append(i, data[i]);\n            }\n          }\n          innerOptions.body = formData;\n        }\n      }\n    }\n    let response = await fetch(parseUrl(url2, opts), innerOptions);\n    let body = null;\n    if (!response.ok) {\n      let err = new Error(response.statusText);\n      err.response = response;\n      if (/text/gi.test(acceptType)) {\n        err.body = await response.text();\n      }\n      if (/json/gi.test(acceptType)) {\n        try {\n          err.body = await response.json();\n        } catch (error) {\n        }\n      }\n      throw err;\n    }\n    if (innerOptions.resolveWithFullResponse) {\n      return response;\n    }\n    if (/text/gi.test(acceptType)) {\n      body = await response.text();\n      return body;\n    }\n    if (/json/gi.test(acceptType)) {\n      try {\n        body = await response.json();\n        return body;\n      } catch (error) {\n      }\n    }\n    return response;\n  };\n  request2.new = (baseUrl2, options2) => Requester(baseUrl2, { ...opts, ...options2 });\n  request2.setOption = (key, value) => {\n    let result = opts;\n    let parsed = key.split(\".\");\n    let next;\n    while (parsed.length) {\n      next = parsed.shift();\n      let nextIsArray = next.indexOf(\"[\") > -1;\n      if (nextIsArray) {\n        let idx = next.replace(/\\D/gi, \"\");\n        next = next.split(\"[\")[0];\n        parsed.unshift(idx);\n      }\n      if (parsed.length > 0 && typeof result[next] !== \"object\") {\n        result[next] = nextIsArray ? [] : {};\n      }\n      if (parsed.length === 0 && typeof value !== \"undefined\") {\n        result[next] = value;\n      }\n      result = result[next];\n    }\n    return result;\n  };\n  request2.getOptions = (key) => {\n    if (!key) {\n      return opts;\n    }\n    let result = opts;\n    let parsed = key.split(\".\");\n    let next;\n    while (parsed.length) {\n      next = parsed.shift();\n      let nextIsArray = next.indexOf(\"[\") > -1;\n      if (nextIsArray) {\n        let idx = next.replace(/\\D/gi, \"\");\n        next = next.split(\"[\")[0];\n        parsed.unshift(idx);\n      }\n      if (parsed.length > 0 && typeof result[next] !== \"object\") {\n        return null;\n      }\n      if (parsed.length === 0) {\n        return result[next];\n      }\n      result = result[next];\n    }\n  };\n  opts.allowedMethods.forEach(\n    (method) => request2[method] = (url2, data, options2) => request2(method, url2, data, options2)\n  );\n  return request2;\n}\nvar request = Requester();\nexport {\n  request\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nconst Key = \"hash-power-income-calculator\";\nexport class StorageService {\n  db: Storage;\n  constructor() {\n    this.db = window.localStorage || window.sessionStorage;\n  }\n\n  private getDb(): Record<string | number | symbol, any> {\n    let obj;\n\n    try {\n      obj = JSON.parse(this.db.getItem(Key) || \"{}\");\n    } catch (e) {\n      obj = {};\n    }\n    return obj;\n  }\n\n  get(key: string, fallback = null): any | null {\n    let result = this.getDb();\n\n    let parsed = key.split(\".\");\n    let next;\n\n    while (parsed.length) {\n      next = parsed.shift();\n      if (next in result === false || (parsed.length > 0 && typeof result[next] !== \"object\")) {\n        return fallback;\n      }\n\n      result = result[next];\n    }\n\n    return result === null || typeof result === \"undefined\" ? fallback : result;\n  }\n\n  set(key: string, value: any) {\n    let result = this.getDb();\n    let finalResult = result;\n\n    let parsed = key.split(\".\");\n    let next: string | number;\n\n    while (parsed.length) {\n      next = parsed.shift();\n      if (next in result === false || (parsed.length > 0 && typeof result[next] !== \"object\")) {\n        result[next] = {};\n      }\n\n      if (parsed.length === 0) {\n        if (value === null) {\n          delete result[next];\n        } else {\n          result[next] = value;\n        }\n      }\n\n      result = result[next];\n    }\n\n    this.db.setItem(Key, JSON.stringify(finalResult));\n  }\n}\n\nexport const storageService = new StorageService();\n", "import { BtcSVG } from \"./btc.svg\";\nimport { DashSVG } from \"./dash.svg\";\nimport { EtcSVG } from \"./etc.svg\";\nimport { EthSVG } from \"./eth.svg\";\nimport { LtcSVG } from \"./ltc.svg\";\nimport { XmrSVG } from \"./xmr.svg\";\nimport { ZecSVG } from \"./zec.svg\";\n// We will create a hash power calculator for cryptocurrencies and mining hardward.\n// We will use the coingecko-api and minerstats-api.\nimport { request } from \"valyrian.js/request\";\nimport { storageService } from \"../common/storage-service\";\n\nconst CoinGeckoRequest = request.new(\"https://api.coingecko.com/api/v3\", {\n  allowedMethods: [\"get\"]\n});\n\nconst MinerstatRequest = request.new(\"https://api.minerstat.com/v2/coins\", {\n  allowedMethods: [\"get\"]\n});\n\nconst ThirtyMinutesInMilliSeconds = 1000 * 60 * 30;\n\nconst DefaultCacheTime = ThirtyMinutesInMilliSeconds;\n\nexport enum AlgorithmsEnum {\n  \"SHA-256\" = \"SHA-256\",\n  \"Scrypt\" = \"Scrypt\",\n  \"Ethash\" = \"Ethash\",\n  \"Etchash\" = \"Etchash\",\n  \"Equihash\" = \"Equihash\",\n  \"RandomX\" = \"RandomX\",\n  \"X11\" = \"X11\"\n}\n\nexport enum CoinSymbolEnum {\n  \"BTC\" = \"BTC\",\n  \"ETH\" = \"ETH\",\n  \"ETC\" = \"ETC\",\n  \"XMR\" = \"XMR\",\n  \"ZEC\" = \"ZEC\",\n  \"DASH\" = \"DASH\",\n  \"LTC\" = \"LTC\"\n}\n\nenum CoinNamesEnum {\n  \"Bitcoin\" = \"Bitcoin\",\n  \"Ethereum\" = \"Ethereum\",\n  \"Ethereum Classic\" = \"Ethereum Classic\",\n  \"Monero\" = \"Monero\",\n  \"Zcash\" = \"Zcash\",\n  \"Dash\" = \"Dash\",\n  \"Litecoin\" = \"Litecoin\"\n}\n\ninterface CoinInterface {\n  algorithm: AlgorithmsEnum;\n  coin: CoinSymbolEnum;\n  name: CoinNamesEnum;\n  network_hashrate: number;\n  price: number;\n  reward: number;\n  updated: number;\n}\n\ninterface PriceItemInterface {\n  aud: number;\n  brl: number;\n  cad: number;\n  chf: number;\n  cny: number;\n  eur: number;\n  gbp: number;\n  hkd: number;\n  jpy: number;\n  mxn: number;\n  rub: number;\n  usd: number;\n}\n\ninterface PricesInterface {\n  bitcoin: PriceItemInterface;\n  dash: PriceItemInterface;\n  ethereum: PriceItemInterface;\n  \"ethereum-classic\": PriceItemInterface;\n  litecoin: PriceItemInterface;\n  monero: PriceItemInterface;\n  zcash: PriceItemInterface;\n}\n\nexport interface CalculationResult {\n  mined: number;\n  minedFee: number;\n  income: number;\n  incomeFee: number;\n  powerCost: number;\n  profit: number;\n}\n\nexport interface CalculationsResult {\n  daily: CalculationResult;\n  weekly: CalculationResult;\n  monthly: CalculationResult;\n  yearly: CalculationResult;\n  currency: string;\n  price: number;\n  realPrice: number;\n  costPerMinedCoin: number;\n  electricityPriceBreakEven: number;\n  hashPrice: number;\n}\n\nexport const CryptoCurrencies = {\n  BTC: {\n    id: \"bitcoin\",\n    symbol: \"BTC\",\n    name: \"Bitcoin\",\n    icon: BtcSVG(),\n    config: {\n      hashRateAmount: 40,\n      hashRateType: \"Th/s\",\n      power: 2600\n    }\n  },\n  ETH: {\n    id: \"ethereum\",\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    icon: EthSVG(),\n    config: {\n      hashRateAmount: 200,\n      hashRateType: \"Mh/s\",\n      power: 140\n    }\n  },\n  ETC: {\n    id: \"ethereum-classic\",\n    symbol: \"ETC\",\n    name: \"Ethereum Classic\",\n    icon: EtcSVG(),\n    config: {\n      hashRateAmount: 500,\n      hashRateType: \"Mh/s\",\n      power: 1000\n    }\n  },\n  XMR: {\n    id: \"monero\",\n    symbol: \"XMR\",\n    name: \"Monero\",\n    icon: XmrSVG(),\n    config: {\n      hashRateAmount: 100,\n      hashRateType: \"Kh/s\",\n      power: 1200\n    }\n  },\n  ZEC: {\n    id: \"zcash\",\n    symbol: \"ZEC\",\n    name: \"Zcash\",\n    icon: ZecSVG(),\n    config: {\n      hashRateAmount: 100,\n      hashRateType: \"Kh/s\",\n      power: 1000\n    }\n  },\n  DASH: {\n    id: \"dash\",\n    symbol: \"DASH\",\n    name: \"Dash\",\n    icon: DashSVG(),\n    config: {\n      hashRateAmount: 200,\n      hashRateType: \"Gh/s\",\n      power: 1110\n    }\n  },\n  LTC: {\n    id: \"litecoin\",\n    symbol: \"LTC\",\n    name: \"Litecoin\",\n    icon: LtcSVG(),\n    config: {\n      hashRateAmount: 5,\n      hashRateType: \"Gh/s\",\n      power: 1000\n    }\n  }\n};\n\nconst CryptoCurrenciesIds = [\"bitcoin\", \"ethereum\", \"ethereum-classic\", \"monero\", \"zcash\", \"dash\", \"litecoin\"];\n\nexport enum CurrencyEnum {\n  \"USD\" = \"USD\",\n  \"EUR\" = \"EUR\",\n  \"GBP\" = \"GBP\",\n  \"CAD\" = \"CAD\",\n  \"AUD\" = \"AUD\",\n  \"CHF\" = \"CHF\",\n  \"CNY\" = \"CNY\",\n  \"RUB\" = \"RUB\",\n  \"BRL\" = \"BRL\",\n  \"HKD\" = \"HKD\",\n  \"JPY\" = \"JPY\",\n  \"MXN\" = \"MXN\"\n}\n\nexport enum HashRateStringToNumber {\n  \"Ph/s\" = 1000000000000000,\n  \"Th/s\" = 1000000000000,\n  \"Gh/s\" = 1000000000,\n  \"Mh/s\" = 1000000,\n  \"Kh/s\" = 1000,\n  \"H/s\" = 1\n}\n\nexport class CalculatorService {\n  private useCache = (path): boolean => {\n    let dateNow = Date.now();\n    let cache = storageService.get(path);\n    if (cache) {\n      let cacheDate = cache.date;\n      if (dateNow - cacheDate < DefaultCacheTime) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  private setCache(path: string, value: unknown): void {\n    let dateNow = Date.now();\n    storageService.set(path, {\n      value,\n      date: dateNow\n    });\n  }\n\n  // async ping(): Promise<unknown> {\n  //   if (this.useCache(\"ping\")) {\n  //     return storageService.get(\"ping.value\");\n  //   }\n\n  //   const response = await CoinGeckoRequest.get(\"/ping\");\n  //   this.setCache(\"ping\", response);\n  //   return response;\n  // }\n\n  // async getCoinsList(): Promise<any> {\n  //   if (this.useCache(\"coinsList\")) {\n  //     return storageService.get(\"coinsList.value\");\n  //   }\n  //   const response = await CoinGeckoRequest.get(\"/coins/list\");\n  //   this.setCache(\"coinsList\", response);\n  //   return response;\n  // }\n\n  // async getSupportedCurrencies(): Promise<any> {\n  //   if (this.useCache(\"supportedCurrencies\")) {\n  //     return storageService.get(\"supportedCurrencies.value\");\n  //   }\n  //   const response = await CoinGeckoRequest.get(\"/simple/supported_vs_currencies\");\n  //   this.setCache(\"supportedCurrencies\", response);\n  //   return response;\n  // }\n\n  async getPrices(): Promise<PricesInterface> {\n    if (this.useCache(\"prices\")) {\n      return storageService.get(\"prices.value\");\n    }\n    const response = await CoinGeckoRequest.get(\"/simple/price\", {\n      ids: CryptoCurrenciesIds.join(\",\"),\n      vs_currencies: Object.keys(CurrencyEnum)\n        .map((key) => key.toLowerCase())\n        .join(\",\")\n    });\n    this.setCache(\"prices\", response);\n    return response;\n  }\n\n  async getCoinsData(): Promise<CoinInterface[]> {\n    if (this.useCache(\"coinsData\")) {\n      return storageService.get(\"coinsData.value\");\n    }\n    const response = await MinerstatRequest.get(\"/\", {\n      list: Object.keys(CoinSymbolEnum).join(\",\")\n    });\n    this.setCache(\"coinsData\", response);\n    return response;\n  }\n\n  getHashRateFromString(hashRateString: HashRateStringToNumber, amount: number) {\n    return amount * Number(HashRateStringToNumber[hashRateString]);\n  }\n\n  async calculateCoinForHashRate({\n    coinSymbol,\n    hashRate,\n    power,\n    powerCost,\n    currency,\n    algorithm,\n    poolFee,\n    customPrice,\n    customDailyMined\n  }: {\n    customPrice: number;\n    customDailyMined: number;\n    coinSymbol: CoinSymbolEnum;\n    hashRate: number;\n    power: number;\n    powerCost: number;\n    currency: string;\n    algorithm?: AlgorithmsEnum;\n    poolFee: number;\n  }): Promise<CalculationsResult> {\n    let coins = await this.getCoinsData();\n    let pricesForAllCoins = await this.getPrices();\n\n    if (!coins || !pricesForAllCoins) {\n      throw new Error(\"Could not load data\");\n    }\n\n    let coin = coins.find((coin) => coin.coin === coinSymbol);\n\n    if (!coin || !CryptoCurrencies[coinSymbol] || !pricesForAllCoins[CryptoCurrencies[coinSymbol].id]) {\n      throw new Error(\"Coin not found\");\n    }\n\n    if (algorithm && coin.algorithm !== algorithm) {\n      throw new Error(\"Algorithm not supported\");\n    }\n\n    let currencyLowerCased = (currency || \"usd\").toLowerCase();\n\n    let realPrice =\n      pricesForAllCoins[CryptoCurrencies[coinSymbol].id][currencyLowerCased] ||\n      pricesForAllCoins[CryptoCurrencies[coinSymbol].id].usd;\n    let coinPrice = customPrice || realPrice;\n\n    let coinRewardPerDayMined = coin.reward * hashRate * 24;\n    let dailyMinedFee = coinRewardPerDayMined * poolFee;\n    let dailyMined = coinRewardPerDayMined - dailyMinedFee;\n\n    if (customDailyMined) {\n      dailyMined = customDailyMined;\n      let intPoolFee = poolFee * 100;\n      dailyMinedFee = (dailyMined / (100 - intPoolFee)) * intPoolFee;\n      coinRewardPerDayMined = dailyMined + dailyMinedFee;\n    }\n\n    const dailyIncome = dailyMined * coinPrice;\n    const dailyIncomeFee = dailyMinedFee * coinPrice;\n    const dailyPowerCost = (powerCost / 1000) * power * 24;\n    const dailyProfit = dailyIncome - dailyPowerCost;\n\n    const costPerMinedCoin = (dailyPowerCost + dailyIncomeFee) / dailyMined;\n    const electricityPriceBreakEven = ((dailyMined * coinPrice * 1000) / power) * 24;\n    const hashPrice = coinRewardPerDayMined * coinPrice;\n\n    return {\n      daily: {\n        mined: dailyMined,\n        minedFee: dailyMinedFee,\n        income: dailyIncome,\n        incomeFee: dailyIncomeFee,\n        powerCost: dailyPowerCost,\n        profit: dailyProfit\n      },\n      weekly: {\n        mined: dailyMined * 7,\n        minedFee: dailyMinedFee * 7,\n        income: dailyIncome * 7,\n        incomeFee: dailyIncomeFee * 7,\n        powerCost: dailyPowerCost * 7,\n        profit: dailyProfit * 7\n      },\n      monthly: {\n        mined: dailyMined * 30,\n        minedFee: dailyMinedFee * 30,\n        income: dailyIncome * 30,\n        incomeFee: dailyIncomeFee * 30,\n        powerCost: dailyPowerCost * 30,\n        profit: dailyProfit * 30\n      },\n      yearly: {\n        mined: dailyMined * 365,\n        minedFee: dailyMinedFee * 365,\n        income: dailyIncome * 365,\n        incomeFee: dailyIncomeFee * 365,\n        powerCost: dailyPowerCost * 365,\n        profit: dailyProfit * 365\n      },\n      currency,\n      price: coinPrice,\n      realPrice: realPrice,\n      costPerMinedCoin,\n      electricityPriceBreakEven,\n      hashPrice\n    };\n  }\n}\n", "// Format money with currency symbol and decimal precision (2) using the Intl.NumberFormat API\n\nimport { Directive, IVnode, Valyrian } from \"valyrian.js/interfaces\";\n\nenum CurrencyToLanguageEnum {\n  \"USD\" = \"en-US\",\n  \"EUR\" = \"es-ES\",\n  \"GBP\" = \"en-GB\",\n  \"CAD\" = \"en-CA\",\n  \"AUD\" = \"en-AU\",\n  \"CHF\" = \"fr-CH\",\n  \"CNY\" = \"zh-CN\",\n  \"RUB\" = \"ru-RU\",\n  \"BRL\" = \"pt-BR\",\n  \"HKD\" = \"zh-HK\",\n  \"JPY\" = \"ja-JP\",\n  \"MXN\" = \"es-MX\"\n}\n\nlet formatMoney = (amount: number, currency: CurrencyToLanguageEnum, language: string) => {\n  let formatter = new Intl.NumberFormat(language, {\n    style: \"currency\",\n    currency: currency,\n    minimumFractionDigits: 2\n  });\n  return formatter.format(amount);\n};\n\nlet formatNumber = (amount: number, decimalPlaces: number, language: string) => {\n  let formatter = new Intl.NumberFormat(language, {\n    style: \"decimal\",\n    minimumFractionDigits: decimalPlaces,\n    maximumFractionDigits: decimalPlaces\n  });\n  return formatter.format(amount);\n};\n\nexport function formatMoneyDirective(currency: CurrencyToLanguageEnum, vnode: IVnode) {\n  let child = vnode.children[0];\n  if (typeof child === \"number\") {\n    vnode.children[0] = formatMoney(child, currency, CurrencyToLanguageEnum[currency]);\n  }\n}\n\nexport function formatNumberDirective(\n  { currency, decimalPlaces }: { currency: CurrencyToLanguageEnum; decimalPlaces: number },\n  vnode: IVnode\n) {\n  let child = vnode.children[0];\n  if (typeof child === \"number\") {\n    vnode.children[0] = formatNumber(child, decimalPlaces, CurrencyToLanguageEnum[currency]);\n  }\n}\n", "// lib/hooks/index.ts\nimport { current, directive, onCleanup, onUnmount, update } from \"valyrian.js\";\nvar createHook = function createHook2({\n  onCreate,\n  onUpdate: onUpdateHook,\n  onCleanup: onCleanupHook,\n  onRemove,\n  returnValue\n}) {\n  return (...args) => {\n    let { component, vnode, oldVnode } = current;\n    if (!vnode.components) {\n      vnode.components = [];\n      onUnmount(() => Reflect.deleteProperty(vnode, \"components\"));\n    }\n    if (vnode.components.indexOf(component) === -1) {\n      vnode.components.push(component);\n    }\n    if (!component.hooks) {\n      component.hooks = [];\n      onUnmount(() => Reflect.deleteProperty(component, \"hooks\"));\n    }\n    let hook = void 0;\n    if (!oldVnode || !oldVnode.components || oldVnode.components[vnode.components.length - 1] !== component) {\n      hook = onCreate(...args);\n      component.hooks.push(hook);\n      if (onRemove) {\n        onUnmount(() => onRemove(hook));\n      }\n    } else {\n      if (\"calls\" in component === false) {\n        component.calls = -1;\n        onUnmount(() => Reflect.deleteProperty(component, \"calls\"));\n      }\n      onCleanup(() => component.calls = -1);\n      component.calls++;\n      hook = component.hooks[component.calls];\n      if (onUpdateHook) {\n        onUpdateHook(hook, ...args);\n      }\n    }\n    if (onCleanupHook) {\n      onCleanup(() => onCleanupHook(hook));\n    }\n    if (returnValue) {\n      return returnValue(hook);\n    }\n    return hook;\n  };\n};\nvar updateTimeout;\nfunction delayedUpdate() {\n  clearTimeout(updateTimeout);\n  updateTimeout = setTimeout(update);\n}\nvar useState = createHook({\n  onCreate: (value) => {\n    let stateObj = /* @__PURE__ */ Object.create(null);\n    stateObj.value = value;\n    stateObj.toJSON = stateObj.toString = stateObj.valueOf = () => typeof stateObj.value === \"function\" ? stateObj.value() : stateObj.value;\n    return [\n      stateObj,\n      (value2) => {\n        if (stateObj.value !== value2) {\n          stateObj.value = value2;\n          delayedUpdate();\n        }\n      }\n    ];\n  }\n});\nvar useEffect = createHook({\n  onCreate: (effect, changes) => {\n    let hook = { effect, prev: [] };\n    if (changes === null) {\n      hook.onRemove = effect;\n      return hook;\n    }\n    hook.prev = changes;\n    hook.onCleanup = hook.effect();\n    return hook;\n  },\n  onUpdate: (hook, effect, changes) => {\n    if (typeof changes === \"undefined\") {\n      hook.prev = changes;\n      if (typeof hook.onCleanup === \"function\") {\n        hook.onCleanup();\n      }\n      hook.onCleanup = hook.effect();\n      return;\n    }\n    if (Array.isArray(changes)) {\n      for (let i = 0, l = changes.length; i < l; i++) {\n        if (changes[i] !== hook.prev[i]) {\n          hook.prev = changes;\n          if (typeof hook.onCleanup === \"function\") {\n            hook.onCleanup();\n          }\n          hook.onCleanup = hook.effect();\n          return;\n        }\n      }\n    }\n  },\n  onRemove: (hook) => {\n    if (typeof hook.onCleanup === \"function\") {\n      hook.onCleanup();\n    }\n    if (typeof hook.onRemove === \"function\") {\n      hook.onRemove();\n    }\n  }\n});\nvar useRef = createHook({\n  onCreate: (initialValue) => {\n    directive(\"ref\", (ref, vnode) => {\n      ref.current = vnode.dom;\n    });\n    return { current: initialValue };\n  }\n});\nvar useCallback = createHook({\n  onCreate: (callback, changes) => {\n    callback();\n    return { callback, changes };\n  },\n  onUpdate: (hook, callback, changes) => {\n    for (let i = 0, l = changes.length; i < l; i++) {\n      if (changes[i] !== hook.changes[i]) {\n        hook.changes = changes;\n        hook.callback();\n        return;\n      }\n    }\n  }\n});\nvar useMemo = createHook({\n  onCreate: (callback, changes) => {\n    return { callback, changes, value: callback() };\n  },\n  onUpdate: (hook, callback, changes) => {\n    for (let i = 0, l = changes.length; i < l; i++) {\n      if (changes[i] !== hook.changes[i]) {\n        hook.changes = changes;\n        hook.value = callback();\n        return;\n      }\n    }\n  },\n  returnValue: (hook) => {\n    return hook.value;\n  }\n});\nexport {\n  createHook,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n};\n", "import {\n  CalculationResult,\n  CalculationsResult,\n  CalculatorService,\n  CoinSymbolEnum,\n  CryptoCurrencies,\n  CurrencyEnum\n} from \"./business-logic/crypto-calculator-service\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { update, v } from \"valyrian.js\";\nimport { useEffect, useRef } from \"valyrian.js/hooks\";\n\nconst DefaultCurrency = CurrencyEnum.USD;\nconst DefaultCoin = CryptoCurrencies.ETH;\nconst AllowSelectMiner = false;\n\nenum FormToShow {\n  \"minerSelect\" = \"minerSelect\",\n  \"manualConfig\" = \"manualConfig\"\n}\n\nconst DefaultConfig = {\n  powerCost: 0.1,\n  poolFee: 1\n};\n\nconst Store = {\n  loading: true,\n  currency: DefaultCurrency,\n  coin: DefaultCoin,\n  formToShow: FormToShow.manualConfig,\n  config: {\n    powerCost: DefaultConfig.powerCost,\n    poolFee: DefaultConfig.poolFee,\n    customPrice: null,\n    customDailyMined: null,\n    BTC: { ...CryptoCurrencies.BTC.config },\n    ETH: { ...CryptoCurrencies.ETH.config },\n    ETC: { ...CryptoCurrencies.ETC.config },\n    LTC: { ...CryptoCurrencies.LTC.config },\n    XMR: { ...CryptoCurrencies.XMR.config },\n    ZEC: { ...CryptoCurrencies.ZEC.config },\n    DASH: { ...CryptoCurrencies.DASH.config }\n  },\n  result: {} as CalculationsResult\n};\n\nfunction CoinNav() {\n  return (\n    <nav v-for={Object.keys(CryptoCurrencies)} class=\"coin-nav flex\">\n      {(key) => (\n        <button\n          v-class={{\n            active: Store.coin.symbol === key\n          }}\n          onclick={() => (Store.coin = CryptoCurrencies[key])}\n        >\n          {key}\n        </button>\n      )}\n    </nav>\n  );\n}\n\nfunction CurrencyNav() {\n  return (\n    <nav v-for={Object.keys(CurrencyEnum)} class=\"currency-nav flex flex-column\">\n      {(key) => (\n        <button\n          v-class={{\n            active: Store.currency === key\n          }}\n          onclick={() => (Store.currency = key)}\n        >\n          {key}\n        </button>\n      )}\n    </nav>\n  );\n}\n\nfunction CoinDescription() {\n  return (\n    <div class=\"coin-description-top\">\n      <figure>{Store.coin.icon}</figure>\n      <b>{Store.coin.name}</b>\n      <small class=\"flex flex-row\">\n        <span class=\"u-p-xs u-no-warp\">1 {Store.coin.symbol} = </span>\n        <input type=\"number\" v-model={[Store.config, \"customPrice\"]} step=\"0.01\" class=\"u-m-0\" />\n        <span class=\"u-p-xs u-no-warp\">{Store.currency}</span>\n      </small>\n      <small v-format-money={Store.currency} class=\"note text-xs\">\n        {Store.result.realPrice}\n      </small>\n    </div>\n  );\n}\n\nfunction MinerSelect() {\n  return <div v-if={Store.formToShow === FormToShow.minerSelect && AllowSelectMiner}></div>;\n}\n\nfunction ManualConfig() {\n  return (\n    <div v-if={!AllowSelectMiner || Store.formToShow === FormToShow.manualConfig}>\n      <form>\n        <section>\n          <div class=\"flex flex-hash-power\">\n            <fieldset>\n              <legend>Hash Power</legend>\n              <input\n                type=\"number\"\n                placeholder=\"Hash power\"\n                v-model={[Store.config[Store.coin.symbol], \"hashRateAmount\"]}\n              />\n            </fieldset>\n            <fieldset class=\"hash-power\">\n              <legend>&nbsp;</legend>\n              <select v-model={[Store.config[Store.coin.symbol], \"hashRateType\"]}>\n                <option>Ph/s</option>\n                <option>Th/s</option>\n                <option>Gh/s</option>\n                <option>Mh/s</option>\n                <option>Kh/s</option>\n                <option>H/s</option>\n              </select>\n            </fieldset>\n          </div>\n          <fieldset>\n            <legend>Power Consumption (W)</legend>\n            <input\n              type=\"number\"\n              placeholder=\"Power Consumption (W)\"\n              v-model={[Store.config[Store.coin.symbol], \"power\"]}\n            />\n          </fieldset>\n          <fieldset>\n            <legend>Power Cost Kw/h ($)</legend>\n            <input type=\"number\" placeholder=\"Power Cost Kw/h ($)\" v-model={[Store.config, \"powerCost\"]} />\n          </fieldset>\n          <fieldset>\n            <legend>Pool fee (%)</legend>\n            <input type=\"number\" placeholder=\"Pool fee (%)\" v-model={[Store.config, \"poolFee\"]} />\n          </fieldset>\n        </section>\n      </form>\n    </div>\n  );\n}\n\nfunction ConfigSection() {\n  return (\n    <div class=\"config\">\n      <nav v-if={AllowSelectMiner}>\n        <button\n          v-class={{\n            active: Store.formToShow === FormToShow.minerSelect\n          }}\n        >\n          Miner List\n        </button>\n        <button\n          v-class={{\n            active: Store.formToShow === FormToShow.manualConfig\n          }}\n        >\n          Manual\n        </button>\n      </nav>\n      <section>\n        <MinerSelect />\n        <ManualConfig />\n      </section>\n    </div>\n  );\n}\n\nenum ResultByStringEnum {\n  \"daily\" = \"Day\",\n  \"weekly\" = \"Week\",\n  \"monthly\" = \"Month\",\n  \"yearly\" = \"Year\"\n}\n\nenum ResultByEnum {\n  \"daily\" = \"daily\",\n  \"weekly\" = \"weekly\",\n  \"monthly\" = \"monthly\",\n  \"yearly\" = \"yearly\"\n}\n\nfunction ResultBy({ by }: { by: string }) {\n  let result = Store.result[by] as CalculationResult;\n  let byString = ResultByStringEnum[by];\n  if (result === undefined) {\n    return (\n      <tr>\n        <td colspan=\"4\"> - </td>\n      </tr>\n    );\n  }\n\n  let decimalPlacesString = Store.config.customDailyMined >= 1 ? 5 : 0.000005;\n\n  return (\n    <tr>\n      <td>\n        <small>Mined/{byString}</small>\n        <input\n          v-if={by === ResultByEnum.daily}\n          type=\"number\"\n          v-model={[Store.config, \"customDailyMined\"]}\n          step={decimalPlacesString}\n          class=\"u-m-0\"\n        />\n        <b\n          v-if={by !== ResultByEnum.daily}\n          v-format-number={{\n            currency: Store.currency,\n            decimalPlaces: 6\n          }}\n        >\n          {result.mined}\n        </b>\n        <small>\n          Pool fee: <span v-format-number={{ currency: Store.currency, decimalPlaces: 6 }}>{result.minedFee}</span>\n        </small>\n      </td>\n      <td>\n        <small>Income/{byString}</small>\n        <b v-format-money={Store.currency}>{result.income}</b>\n        <small>\n          Pool fee <span v-format-money={Store.currency}>{result.incomeFee}</span>\n        </small>\n      </td>\n      <td>\n        <small>Power cost/{byString}</small>\n        <b v-format-money={Store.currency}>{result.powerCost}</b>\n      </td>\n      <td>\n        <small>Profit/{byString}</small>\n        <b v-format-money={Store.currency}>{result.profit}</b>\n      </td>\n    </tr>\n  );\n}\n\nfunction Results() {\n  if (Store.loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <tr class=\"results\">\n      <td colspan=\"2\">\n        <dl>\n          <dt>\n            <dd>\n              Cost by <span class=\"text-sm\">{Store.coin.name}</span> mined\n            </dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.costPerMinedCoin}</b>\n            </dd>\n          </dt>\n          <dt>\n            <dd>Electricity BreakEven</dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.electricityPriceBreakEven}</b>\n            </dd>\n          </dt>\n          <dt>\n            <dd>Hashprice</dd>\n            <dd>\n              <b v-format-money={Store.currency}>{Store.result.hashPrice}</b>\n            </dd>\n          </dt>\n        </dl>\n      </td>\n      <td colspan=\"2\">\n        <b>Profit by month</b>\n        <b v-format-money={Store.currency}>{Store.result.monthly.profit}</b>\n      </td>\n    </tr>\n  );\n}\n\nconst calculatorService = new CalculatorService();\n\nasync function computeProfit() {\n  if (Store.config[Store.coin.symbol] === undefined || Store.config[Store.coin.symbol].hashRateAmount === undefined) {\n    return;\n  }\n\n  Store.loading = true;\n\n  if (Store.config.powerCost === undefined) {\n    Store.config.powerCost === 0;\n  }\n  if (Store.config.poolFee === undefined) {\n    Store.config.poolFee === 0;\n  }\n\n  const hashRate = calculatorService.getHashRateFromString(\n    Store.config[Store.coin.symbol].hashRateType,\n    Store.config[Store.coin.symbol].hashRateAmount\n  );\n\n  let results = await calculatorService.calculateCoinForHashRate({\n    customPrice: Store.config.customPrice,\n    customDailyMined: Store.config.customDailyMined,\n    coinSymbol: CoinSymbolEnum[Store.coin.symbol],\n    hashRate,\n    power: Store.config[Store.coin.symbol].power,\n    powerCost: Store.config.powerCost,\n    currency: Store.currency,\n    poolFee: Store.config.poolFee / 100\n  });\n\n  Store.result = results;\n  Store.config.customPrice = results.price;\n  Store.config.customDailyMined = results.daily.mined;\n\n  Store.loading = false;\n  update();\n}\n\nexport function App() {\n  let ref = useRef(null);\n\n  // Reset the custom price when the coin or currency changes\n  useEffect(() => {\n    Store.config.customPrice = null;\n  }, [Store.coin.symbol, Store.currency]);\n\n  // Reset the custom daily mined when the config changes\n  useEffect(() => {\n    Store.config.customDailyMined = null;\n  }, [\n    Store.coin.symbol,\n    Store.currency,\n    Store.config[Store.coin.symbol].hashRateAmount,\n    Store.config[Store.coin.symbol].hashRateType,\n    Store.config[Store.coin.symbol].power,\n    Store.config.powerCost,\n    Store.config.poolFee\n  ]);\n\n  // Compute profit only in the first render\n  useEffect(computeProfit, []);\n\n  // Compute profit on every change\n  useEffect(() => {\n    if (ref.current) {\n      computeProfit();\n    }\n  }, [\n    Store.config.customDailyMined,\n    Store.config.customPrice,\n    Store.coin.symbol,\n    Store.currency,\n    Store.config[Store.coin.symbol].hashRateAmount,\n    Store.config[Store.coin.symbol].hashRateType,\n    Store.config[Store.coin.symbol].power,\n    Store.config.powerCost,\n    Store.config.poolFee\n  ]);\n\n  return [\n    <CoinNav />,\n    <article class=\"flex\" v-ref={ref}>\n      <CurrencyNav />\n      <section class=\"coin-container flex flex-1\">\n        <div class=\"coin-description\">\n          <CoinDescription />\n          <ConfigSection />\n        </div>\n\n        <table class=\"coin-result flex-1\">\n          <tbody>\n            <ResultBy by=\"daily\" />\n            <ResultBy by=\"weekly\" />\n            <ResultBy by=\"monthly\" />\n            <ResultBy by=\"yearly\" />\n            <Results />\n          </tbody>\n        </table>\n      </section>\n    </article>,\n    <small class=\"note text-sm text-right\">Data is updated every 30 minutes</small>\n  ];\n}\n", "import \"./business-logic/crypto-calculator-service\";\n\nimport { directive, mount, v } from \"valyrian.js\";\nimport { formatMoneyDirective, formatNumberDirective } from \"./common/format-number\";\n\nimport { App } from \"./app\";\n\ndirective(\"format-number\", formatNumberDirective);\ndirective(\"format-money\", formatMoneyDirective);\n\nmount(\"body\", App);\n"],
  "mappings": "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",
  "names": ["CoinSymbolEnum", "CurrencyEnum", "HashRateStringToNumber", "coin", "CurrencyToLanguageEnum", "ResultByStringEnum"]
}
