//# sourceMappingURL=data:application/json;charset=utf-8;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vbm9kZV9tb2R1bGVzL3ZhbHlyaWFuLmpzL3BsdWdpbnMvcmVxdWVzdC5qcyIsICIuLi9ub2RlX21vZHVsZXMvdmFseXJpYW4uanMvcGx1Z2lucy9ob29rcy5qcyIsICIuLi9ub2RlX21vZHVsZXMvdmFseXJpYW4uanMvbGliL2luZGV4LnRzIiwgIi4uL2FwcC9idXNpbmVzcy1sb2dpYy9idGMuc3ZnLnRzeCIsICIuLi9hcHAvYnVzaW5lc3MtbG9naWMvZGFzaC5zdmcudHN4IiwgIi4uL2FwcC9idXNpbmVzcy1sb2dpYy9ldGMuc3ZnLnRzeCIsICIuLi9hcHAvYnVzaW5lc3MtbG9naWMvZXRoLnN2Zy50c3giLCAiLi4vYXBwL2J1c2luZXNzLWxvZ2ljL2x0Yy5zdmcudHN4IiwgIi4uL2FwcC9idXNpbmVzcy1sb2dpYy9jcnlwdG8tY2FsY3VsYXRvci1zZXJ2aWNlLnRzIiwgIi4uL2FwcC9idXNpbmVzcy1sb2dpYy94bXIuc3ZnLnRzeCIsICIuLi9hcHAvYnVzaW5lc3MtbG9naWMvemVjLnN2Zy50c3giLCAiLi4vYXBwL2NvbW1vbi9zdG9yYWdlLXNlcnZpY2UudHMiLCAiLi4vYXBwL2NvbW1vbi9mb3JtYXQtbnVtYmVyLnRzIiwgIi4uL2FwcC9hcHAudHN4IiwgIi4uL2FwcC9pbmRleC50c3giXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IGlzTm9kZUpzID0gQm9vbGVhbih0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLnZlcnNpb25zICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSk7XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZShvYmosIHByZWZpeCkge1xuICByZXR1cm4gT2JqZWN0LmtleXMob2JqKVxuICAgIC5tYXAoKHApID0+IHtcbiAgICAgIGxldCBrID0gcHJlZml4ID8gYCR7cHJlZml4fVske3B9XWAgOiBwO1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmpbcF0gPT09IFwib2JqZWN0XCIgPyBzZXJpYWxpemUob2JqW3BdLCBrKSA6IGAke2VuY29kZVVSSUNvbXBvbmVudChrKX09JHtlbmNvZGVVUklDb21wb25lbnQob2JqW3BdKX1gO1xuICAgIH0pXG4gICAgLmpvaW4oXCImXCIpO1xufVxuXG5mdW5jdGlvbiBwYXJzZVVybCh1cmwsIG9wdGlvbnMgPSB7fSkge1xuICBsZXQgdSA9IC9eaHR0cHM/L2dpLnRlc3QodXJsKSA/IHVybCA6IG9wdGlvbnMudXJscy5iYXNlICsgdXJsO1xuXG4gIGxldCBwYXJ0cyA9IHUuc3BsaXQoXCI/XCIpO1xuICB1ID0gcGFydHNbMF0udHJpbSgpLnJlcGxhY2UoL15cXC9cXC8vLCBcIi9cIikucmVwbGFjZSgvXFwvJC8sIFwiXCIpLnRyaW0oKTtcblxuICBpZiAocGFydHNbMV0pIHtcbiAgICB1ICs9IGA/JHtwYXJ0c1sxXX1gO1xuICB9XG5cbiAgaWYgKGlzTm9kZUpzICYmIHR5cGVvZiBvcHRpb25zLnVybHMubm9kZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIG9wdGlvbnMudXJscy5ub2RlID0gb3B0aW9ucy51cmxzLm5vZGU7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMudXJscy5hcGkgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG9wdGlvbnMudXJscy5hcGkgPSBvcHRpb25zLnVybHMuYXBpLnJlcGxhY2UoL1xcLyQvZ2ksIFwiXCIpLnRyaW0oKTtcbiAgICAgIHUgPSB1LnJlcGxhY2Uob3B0aW9ucy51cmxzLmFwaSwgb3B0aW9ucy51cmxzLm5vZGUpO1xuICAgIH1cblxuICAgIGlmICghL15odHRwcz8vZ2kudGVzdCh1KSkge1xuICAgICAgdSA9IG9wdGlvbnMudXJscy5ub2RlICsgdTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdTtcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNvbmFyanMvY29nbml0aXZlLWNvbXBsZXhpdHlcbmZ1bmN0aW9uIFJlcXVlc3QoYmFzZVVybCA9IFwiXCIsIG9wdGlvbnMgPSB7fSkge1xuICBsZXQgdXJsID0gYmFzZVVybC5yZXBsYWNlKC9cXC8kL2dpLCBcIlwiKS50cmltKCk7XG4gIG9wdGlvbnMudXJscyA9IG9wdGlvbnMudXJscyB8fCB7fTtcbiAgbGV0IG9wdHMgPSB7XG4gICAgbWV0aG9kczogW1wiZ2V0XCIsIFwicG9zdFwiLCBcInB1dFwiLCBcInBhdGNoXCIsIFwiZGVsZXRlXCJdLFxuICAgIC4uLm9wdGlvbnMsXG4gICAgdXJsczoge1xuICAgICAgbm9kZTogb3B0aW9ucy51cmxzLm5vZGUgfHwgbnVsbCxcbiAgICAgIGFwaTogb3B0aW9ucy51cmxzLmFwaSB8fCBudWxsLFxuICAgICAgYmFzZTogb3B0aW9ucy51cmxzLmJhc2UgPyBvcHRpb25zLnVybHMuYmFzZSArIHVybCA6IHVybFxuICAgIH1cbiAgfTtcblxuICBhc3luYyBmdW5jdGlvbiByZXF1ZXN0KG1ldGhvZCwgdXJsLCBkYXRhLCBvcHRpb25zID0ge30pIHtcbiAgICBsZXQgaW5uZXJPcHRpb25zID0ge1xuICAgICAgbWV0aG9kOiBtZXRob2QudG9Mb3dlckNhc2UoKSxcbiAgICAgIGhlYWRlcnM6IHt9LFxuICAgICAgcmVzb2x2ZVdpdGhGdWxsUmVzcG9uc2U6IGZhbHNlLFxuICAgICAgLi4ub3B0cyxcbiAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuXG4gICAgaWYgKCFpbm5lck9wdGlvbnMuaGVhZGVycy5BY2NlcHQpIHtcbiAgICAgIGlubmVyT3B0aW9ucy5oZWFkZXJzLkFjY2VwdCA9IFwiYXBwbGljYXRpb24vanNvblwiO1xuICAgIH1cblxuICAgIGxldCBhY2NlcHRUeXBlID0gaW5uZXJPcHRpb25zLmhlYWRlcnMuQWNjZXB0O1xuICAgIGxldCBjb250ZW50VHlwZSA9IGlubmVyT3B0aW9ucy5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdIHx8IGlubmVyT3B0aW9ucy5oZWFkZXJzW1wiY29udGVudC10eXBlXCJdIHx8IFwiXCI7XG5cbiAgICBpZiAoaW5uZXJPcHRpb25zLm1ldGhvZHMuaW5kZXhPZihtZXRob2QpID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBhbGxvd2VkXCIpO1xuICAgIH1cblxuICAgIGlmIChkYXRhKSB7XG4gICAgICBpZiAoaW5uZXJPcHRpb25zLm1ldGhvZCA9PT0gXCJnZXRcIiAmJiB0eXBlb2YgZGF0YSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICB1cmwgKz0gYD8ke3NlcmlhbGl6ZShkYXRhKX1gO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5uZXJPcHRpb25zLm1ldGhvZCAhPT0gXCJnZXRcIikge1xuICAgICAgICBpZiAoL2pzb24vZ2kudGVzdChjb250ZW50VHlwZSkpIHtcbiAgICAgICAgICBpbm5lck9wdGlvbnMuYm9keSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxldCBmb3JtRGF0YTtcbiAgICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgICAgICAgICBmb3JtRGF0YSA9IGRhdGE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIGRhdGEpIHtcbiAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKGksIGRhdGFbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpbm5lck9wdGlvbnMuYm9keSA9IGZvcm1EYXRhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2gocGFyc2VVcmwodXJsLCBvcHRzKSwgaW5uZXJPcHRpb25zKTtcbiAgICBsZXQgYm9keSA9IG51bGw7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgbGV0IGVyciA9IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgICAgIGVyci5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgICAgaWYgKC90ZXh0L2dpLnRlc3QoYWNjZXB0VHlwZSkpIHtcbiAgICAgICAgZXJyLmJvZHkgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICB9XG5cbiAgICAgIGlmICgvanNvbi9naS50ZXN0KGFjY2VwdFR5cGUpKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZXJyLmJvZHkgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgLy8gaWdub3JlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cblxuICAgIGlmIChpbm5lck9wdGlvbnMucmVzb2x2ZVdpdGhGdWxsUmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG5cbiAgICBpZiAoL3RleHQvZ2kudGVzdChhY2NlcHRUeXBlKSkge1xuICAgICAgYm9keSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgIHJldHVybiBib2R5O1xuICAgIH1cblxuICAgIGlmICgvanNvbi9naS50ZXN0KGFjY2VwdFR5cGUpKSB7XG4gICAgICB0cnkge1xuICAgICAgICBib2R5ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4gYm9keTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIGlnbm9yZVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxuXG4gIHJlcXVlc3QubmV3ID0gKGJhc2VVcmwsIG9wdGlvbnMpID0+IFJlcXVlc3QoYmFzZVVybCwgeyAuLi5vcHRzLCAuLi5vcHRpb25zIH0pO1xuXG4gIHJlcXVlc3Qub3B0aW9ucyA9IChrZXksIHZhbHVlKSA9PiB7XG4gICAgbGV0IHJlc3VsdCA9IG9wdHM7XG5cbiAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBsZXQgcGFyc2VkID0ga2V5LnNwbGl0KFwiLlwiKTtcbiAgICBsZXQgbmV4dDtcblxuICAgIHdoaWxlIChwYXJzZWQubGVuZ3RoKSB7XG4gICAgICBuZXh0ID0gcGFyc2VkLnNoaWZ0KCk7XG5cbiAgICAgIGxldCBuZXh0SXNBcnJheSA9IG5leHQuaW5kZXhPZihcIltcIikgPiAtMTtcbiAgICAgIGlmIChuZXh0SXNBcnJheSkge1xuICAgICAgICBsZXQgaWR4ID0gbmV4dC5yZXBsYWNlKC9cXEQvZ2ksIFwiXCIpO1xuICAgICAgICBuZXh0ID0gbmV4dC5zcGxpdChcIltcIilbMF07XG4gICAgICAgIHBhcnNlZC51bnNoaWZ0KGlkeCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJzZWQubGVuZ3RoID4gMCAmJiB0eXBlb2YgcmVzdWx0W25leHRdICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJlc3VsdFtuZXh0XSA9IG5leHRJc0FycmF5ID8gW10gOiB7fTtcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcnNlZC5sZW5ndGggPT09IDAgJiYgdHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJlc3VsdFtuZXh0XSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXN1bHQgPSByZXN1bHRbbmV4dF07XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBvcHRzLm1ldGhvZHMuZm9yRWFjaCgobWV0aG9kKSA9PiAocmVxdWVzdFttZXRob2RdID0gKHVybCwgZGF0YSwgb3B0aW9ucykgPT4gcmVxdWVzdChtZXRob2QsIHVybCwgZGF0YSwgb3B0aW9ucykpKTtcblxuICByZXR1cm4gcmVxdWVzdDtcbn1cblxuY29uc3QgcmVxdWVzdCA9IFJlcXVlc3QoKTtcblxucmVxdWVzdC5kZWZhdWx0ID0gcmVxdWVzdDtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWVzdDtcbiIsICJsZXQgdiA9IHtcbiAgY3VycmVudDoge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUhvb2soeyBvbkNyZWF0ZSwgb25VcGRhdGUsIG9uUmVtb3ZlLCBvbkNsZWFudXAsIHJldHVyblZhbHVlIH0pIHtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgbGV0IHsgY29tcG9uZW50LCB2bm9kZSwgb2xkVm5vZGUgfSA9IHYuY3VycmVudDtcblxuICAgIC8vIEluaXQgdGhlIGNvbXBvbmVudHMgYXJyYXkgZm9yIHRoZSBjdXJyZW50IHZub2RlXG4gICAgaWYgKCF2bm9kZS5jb21wb25lbnRzKSB7XG4gICAgICB2bm9kZS5jb21wb25lbnRzID0gW107XG4gICAgICB2Lm9uVW5tb3VudCgoKSA9PiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHZub2RlLCBcImNvbXBvbmVudHNcIikpO1xuICAgIH1cblxuICAgIC8vIEFkZCB0aGUgY29tcG9uZW50IHRvIHRoZSBjb21wb25lbnRzIGFycmF5IGlmIGl0J3Mgbm90IGFscmVhZHkgdGhlcmVcbiAgICBpZiAodm5vZGUuY29tcG9uZW50cy5pbmRleE9mKGNvbXBvbmVudCkgPT09IC0xKSB7XG4gICAgICB2bm9kZS5jb21wb25lbnRzLnB1c2goY29tcG9uZW50KTtcbiAgICB9XG5cbiAgICAvLyBJbml0IHRoZSBjb21wb25lbnQgaG9va3MgYXJyYXlcbiAgICBpZiAoIWNvbXBvbmVudC5ob29rcykge1xuICAgICAgY29tcG9uZW50Lmhvb2tzID0gW107XG4gICAgICB2Lm9uVW5tb3VudCgoKSA9PiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KGNvbXBvbmVudCwgXCJob29rc1wiKSk7XG4gICAgfVxuXG4gICAgbGV0IGhvb2s7XG5cbiAgICAvLyBpZiBubyBvbGQgdm5vZGUgb3Igb2xkIHZub2RlIGhhcyBubyBjb21wb25lbnRzIG9yIG9sZCB2bm9kZSdzIGxhc3QgY29tcG9uZW50IGlzIG5vdCB0aGUgY3VycmVudCBjb21wb25lbnRcbiAgICAvLyB3ZSBhcmUgbW91bnRpbmcgdGhlIGNvbXBvbmVudCBmb3IgdGhlIGZpcnN0IHRpbWUgc28gd2UgY3JlYXRlIGEgbmV3IGhvb2tcbiAgICBpZiAoIW9sZFZub2RlIHx8ICFvbGRWbm9kZS5jb21wb25lbnRzIHx8IG9sZFZub2RlLmNvbXBvbmVudHNbdm5vZGUuY29tcG9uZW50cy5sZW5ndGggLSAxXSAhPT0gY29tcG9uZW50KSB7XG4gICAgICAvLyBjcmVhdGUgYSBuZXcgaG9va1xuICAgICAgaG9vayA9IG9uQ3JlYXRlKC4uLmFyZ3MpO1xuXG4gICAgICAvLyBhZGQgdGhlIGhvb2sgdG8gdGhlIGNvbXBvbmVudCdzIGhvb2tzIGFycmF5XG4gICAgICBjb21wb25lbnQuaG9va3MucHVzaChob29rKTtcblxuICAgICAgLy8gaWYgd2UgaGF2ZSBhIG9uUmVtb3ZlIGhvb2ssIGFkZCBpdCB0byB0aGUgb25SZW1vdmUgYXJyYXlcbiAgICAgIGlmIChvblJlbW92ZSkge1xuICAgICAgICAvLyBBZGQgdGhlIGhvb2sgdG8gdGhlIG9uUmVtb3ZlIGFycmF5XG4gICAgICAgIHYub25Vbm1vdW50KCgpID0+IG9uUmVtb3ZlKGhvb2spKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gb2xkIHZub2RlIGhhcyBjb21wb25lbnRzLCB3ZSBhcmUgdXBkYXRpbmcgdGhlIGNvbXBvbmVudFxuXG4gICAgICAvLyBTZXQgdGhlIGNhbGxzIHByb3BlcnR5IHRvIHRoZSBjdXJyZW50IGNvbXBvbmVudCBpZiBpdCdzIG5vdCBhbHJlYWR5IHNldFxuICAgICAgaWYgKFwiY2FsbHNcIiBpbiBjb21wb25lbnQgPT09IGZhbHNlKSB7XG4gICAgICAgIGNvbXBvbmVudC5jYWxscyA9IC0xO1xuICAgICAgICB2Lm9uVW5tb3VudCgoKSA9PiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KGNvbXBvbmVudCwgXCJjYWxsc1wiKSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFJlc2V0IHRoZSBjYWxscyBwcm9wZXJ0eSB0byAtMSBvbiBjbGVhbnVwIHNvIHdlIGNhbiBkZXRlY3QgaWYgdGhlIGNvbXBvbmVudCBpcyB1cGRhdGVkIGFnYWluXG4gICAgICB2Lm9uQ2xlYW51cCgoKSA9PiAoY29tcG9uZW50LmNhbGxzID0gLTEpKTtcblxuICAgICAgLy8gSW5jcmVtZW50IHRoZSBjYWxscyBwcm9wZXJ0eVxuICAgICAgY29tcG9uZW50LmNhbGxzKys7XG5cbiAgICAgIC8vIEdldCB0aGUgY3VycmVudCBob29rIGZyb20gdGhlIGNvbXBvbmVudCdzIGhvb2tzIGFycmF5XG4gICAgICBob29rID0gY29tcG9uZW50Lmhvb2tzW2NvbXBvbmVudC5jYWxsc107XG5cbiAgICAgIC8vIElmIHdlIGhhdmUgYW4gb25VcGRhdGUgaG9vaywgY2FsbCBpdFxuICAgICAgaWYgKG9uVXBkYXRlKSB7XG4gICAgICAgIG9uVXBkYXRlKGhvb2ssIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIElmIHdlIGhhdmUgYW4gb25DbGVhbnVwIGZ1bmN0aW9uLCBhZGQgaXQgdG8gdGhlIGNsZWFudXAgYXJyYXlcbiAgICBpZiAob25DbGVhbnVwKSB7XG4gICAgICAvLyBBZGQgdGhlIGhvb2sgdG8gdGhlIG9uQ2xlYW51cCBhcnJheVxuICAgICAgdi5vbkNsZWFudXAoKCkgPT4gb25DbGVhbnVwKGhvb2spKTtcbiAgICB9XG5cbiAgICAvLyBJZiB3ZSBoYXZlIGEgcmV0dXJuVmFsdWUgZnVuY3Rpb24sIGNhbGwgaXQgYW5kIHJldHVybiB0aGUgcmVzdWx0IGluc3RlYWQgb2YgdGhlIGhvb2tcbiAgICBpZiAocmV0dXJuVmFsdWUpIHtcbiAgICAgIHJldHVybiByZXR1cm5WYWx1ZShob29rKTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gdGhlIGhvb2tcbiAgICByZXR1cm4gaG9vaztcbiAgfTtcbn1cblxuLy8gVXNlIHN0YXRlIGhvb2tcbmNvbnN0IHVzZVN0YXRlID0gY3JlYXRlSG9vayh7XG4gIG9uQ3JlYXRlOiAodmFsdWUpID0+IHtcbiAgICBsZXQgc3RhdGVPYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIHN0YXRlT2JqLnZhbHVlID0gdmFsdWU7XG4gICAgc3RhdGVPYmoudG9KU09OID0gc3RhdGVPYmoudG9TdHJpbmcgPSBzdGF0ZU9iai52YWx1ZU9mID0gKCkgPT4gKHR5cGVvZiBzdGF0ZU9iai52YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gc3RhdGVPYmoudmFsdWUoKSA6IHN0YXRlT2JqLnZhbHVlKTtcblxuICAgIHJldHVybiBbc3RhdGVPYmosICh2YWx1ZSkgPT4gKHN0YXRlT2JqLnZhbHVlID0gdmFsdWUpXTtcbiAgfVxufSk7XG5cbi8vIEVmZmVjdCBob29rXG5jb25zdCB1c2VFZmZlY3QgPSBjcmVhdGVIb29rKHtcbiAgb25DcmVhdGU6IChlZmZlY3QsIGNoYW5nZXMpID0+IHtcbiAgICBsZXQgaG9vayA9IHsgZWZmZWN0LCBwcmV2OiBbXSB9O1xuICAgIC8vIG9uIHVubW91bnRcbiAgICBpZiAoY2hhbmdlcyA9PT0gbnVsbCkge1xuICAgICAgaG9vay5vblJlbW92ZSA9IGVmZmVjdDtcbiAgICAgIHJldHVybiBob29rO1xuICAgIH1cblxuICAgIC8vIG9uIGNyZWF0ZVxuICAgIGhvb2sucHJldiA9IGNoYW5nZXM7XG4gICAgaG9vay5vbkNsZWFudXAgPSBob29rLmVmZmVjdCgpO1xuICAgIHJldHVybiBob29rO1xuICB9LFxuICBvblVwZGF0ZTogKGhvb2ssIGVmZmVjdCwgY2hhbmdlcykgPT4ge1xuICAgIC8vIG9uIHVwZGF0ZVxuICAgIGlmICh0eXBlb2YgY2hhbmdlcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgaG9vay5wcmV2ID0gY2hhbmdlcztcbiAgICAgIGlmICh0eXBlb2YgaG9vay5vbkNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBob29rLm9uQ2xlYW51cCgpO1xuICAgICAgfVxuICAgICAgaG9vay5vbkNsZWFudXAgPSBob29rLmVmZmVjdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIG9uIHVwZGF0ZSBpZiB0aGVyZSBhcmUgY2hhbmdlc1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNoYW5nZXMpKSB7XG4gICAgICBmb3IgKGxldCBpID0gMCwgbCA9IGNoYW5nZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChjaGFuZ2VzW2ldICE9PSBob29rLnByZXZbaV0pIHtcbiAgICAgICAgICBob29rLnByZXYgPSBjaGFuZ2VzO1xuICAgICAgICAgIGlmICh0eXBlb2YgaG9vay5vbkNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgaG9vay5vbkNsZWFudXAoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaG9vay5vbkNsZWFudXAgPSBob29rLmVmZmVjdCgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgb25SZW1vdmU6IChob29rKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBob29rLm9uQ2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBob29rLm9uQ2xlYW51cCgpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGhvb2sub25SZW1vdmUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgaG9vay5vblJlbW92ZSgpO1xuICAgIH1cbiAgfVxufSk7XG5cbmNvbnN0IHVzZVJlZiA9IGNyZWF0ZUhvb2soe1xuICBvbkNyZWF0ZTogKGluaXRpYWxWYWx1ZSkgPT4ge1xuICAgIHYuZGlyZWN0aXZlKFwicmVmXCIsIChyZWYsIHZub2RlKSA9PiB7XG4gICAgICByZWYuY3VycmVudCA9IHZub2RlLmRvbTtcbiAgICB9KTtcbiAgICByZXR1cm4geyBjdXJyZW50OiBpbml0aWFsVmFsdWUgfTtcbiAgfVxufSk7XG5cbmNvbnN0IHVzZUNhbGxiYWNrID0gY3JlYXRlSG9vayh7XG4gIG9uQ3JlYXRlOiAoY2FsbGJhY2ssIGNoYW5nZXMpID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICAgIHJldHVybiB7IGNhbGxiYWNrLCBjaGFuZ2VzIH07XG4gIH0sXG4gIG9uVXBkYXRlOiAoaG9vaywgY2FsbGJhY2ssIGNoYW5nZXMpID0+IHtcbiAgICBmb3IgKGxldCBpID0gMCwgbCA9IGNoYW5nZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBpZiAoY2hhbmdlc1tpXSAhPT0gaG9vay5jaGFuZ2VzW2ldKSB7XG4gICAgICAgIGhvb2suY2hhbmdlcyA9IGNoYW5nZXM7XG4gICAgICAgIGhvb2suY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbmNvbnN0IHVzZU1lbW8gPSBjcmVhdGVIb29rKHtcbiAgb25DcmVhdGU6IChjYWxsYmFjaywgY2hhbmdlcykgPT4ge1xuICAgIHJldHVybiB7IGNhbGxiYWNrLCBjaGFuZ2VzLCB2YWx1ZTogY2FsbGJhY2soKSB9O1xuICB9LFxuICBvblVwZGF0ZTogKGhvb2ssIGNhbGxiYWNrLCBjaGFuZ2VzKSA9PiB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBjaGFuZ2VzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgaWYgKGNoYW5nZXNbaV0gIT09IGhvb2suY2hhbmdlc1tpXSkge1xuICAgICAgICBob29rLmNoYW5nZXMgPSBjaGFuZ2VzO1xuICAgICAgICBob29rLnZhbHVlID0gY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmV0dXJuVmFsdWU6IChob29rKSA9PiB7XG4gICAgcmV0dXJuIGhvb2sudmFsdWU7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBwbHVnaW4odkluc3RhbmNlKSB7XG4gIHYgPSB2SW5zdGFuY2U7XG59XG5cbnBsdWdpbi5jcmVhdGVIb29rID0gY3JlYXRlSG9vaztcbnBsdWdpbi51c2VTdGF0ZSA9IHVzZVN0YXRlO1xucGx1Z2luLnVzZUVmZmVjdCA9IHVzZUVmZmVjdDtcbnBsdWdpbi51c2VSZWYgPSB1c2VSZWY7XG5wbHVnaW4udXNlQ2FsbGJhY2sgPSB1c2VDYWxsYmFjaztcbnBsdWdpbi51c2VNZW1vID0gdXNlTWVtbztcblxucGx1Z2luLmRlZmF1bHQgPSBwbHVnaW47XG5tb2R1bGUuZXhwb3J0cyA9IHBsdWdpbjtcbiIsICIvKiBlc2xpbnQtZGlzYWJsZSBzb25hcmpzL2NvZ25pdGl2ZS1jb21wbGV4aXR5ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBjb21wbGV4aXR5ICovXG5cbmltcG9ydCB7XG4gIENoaWxkcmVuLFxuICBDb21wb25lbnQsXG4gIEN1cnJlbnQsXG4gIERpcmVjdGl2ZSxcbiAgRGlyZWN0aXZlcyxcbiAgRG9tRWxlbWVudCxcbiAgUGx1Z2luLFxuICBQcm9wcyxcbiAgVmFseXJpYW4sXG4gIFZhbHlyaWFuQ29tcG9uZW50LFxuICBWbm9kZUNvbXBvbmVudEludGVyZmFjZSxcbiAgVm5vZGVJbnRlcmZhY2UsXG4gIFZub2RlVGV4dEludGVyZmFjZSxcbiAgVm5vZGVXaXRoRG9tXG59IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcblxuY29uc3QgY3VycmVudDogQ3VycmVudCA9IHt9O1xuY29uc3Qgb25DbGVhbnVwTGlzdDogRnVuY3Rpb25bXSA9IFtdO1xuY29uc3Qgb25Nb3VudExpc3Q6IEZ1bmN0aW9uW10gPSBbXTtcbmNvbnN0IG9uVXBkYXRlTGlzdDogRnVuY3Rpb25bXSA9IFtdO1xuY29uc3Qgb25Vbm1vdW50TGlzdDogRnVuY3Rpb25bXSA9IFtdO1xuY29uc3QgZW1wdHlDb21wb25lbnQ6IENvbXBvbmVudCA9ICgpID0+IFwiXCI7XG5cbmNvbnN0IGV2ZW50TGlzdGVuZXJOYW1lczogUmVjb3JkPHN0cmluZywgdHJ1ZT4gPSB7fTtcbmZ1bmN0aW9uIGV2ZW50TGlzdGVuZXIoZTogRXZlbnQpIHtcbiAgbGV0IGRvbSA9IGUudGFyZ2V0IGFzIERvbUVsZW1lbnQ7XG4gIGxldCBuYW1lID0gYHYtb24ke2UudHlwZX1gO1xuICB3aGlsZSAoZG9tKSB7XG4gICAgaWYgKGRvbVtuYW1lXSkge1xuICAgICAgZG9tW25hbWVdKGUsIGRvbSk7XG4gICAgICBpZiAoIWUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdi51cGRhdGUoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZG9tID0gZG9tLnBhcmVudE5vZGUgYXMgRG9tRWxlbWVudDtcbiAgfVxufVxuXG5jb25zdCByZXNlcnZlZFByb3BzOiBSZWNvcmQ8c3RyaW5nLCB0cnVlPiA9IHtcbiAga2V5OiB0cnVlLFxuICBzdGF0ZTogdHJ1ZSxcbiAgb25jcmVhdGU6IHRydWUsXG4gIG9udXBkYXRlOiB0cnVlLFxuICBvbnJlbW92ZTogdHJ1ZSxcbiAgc2hvdWxkdXBkYXRlOiB0cnVlLFxuICBcInYtb25jZVwiOiB0cnVlLFxuXG4gIC8vIEJ1aWx0IGluIGRpcmVjdGl2ZXNcbiAgXCJ2LWlmXCI6IHRydWUsXG4gIFwidi11bmxlc3NcIjogdHJ1ZSxcbiAgXCJ2LWZvclwiOiB0cnVlLFxuICBcInYtc2hvd1wiOiB0cnVlLFxuICBcInYtY2xhc3NcIjogdHJ1ZSxcbiAgXCJ2LWh0bWxcIjogdHJ1ZSxcbiAgXCJ2LW1vZGVsXCI6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZURvbUVsZW1lbnQodGFnOiBzdHJpbmcsIGlzU1ZHOiBib29sZWFuID0gZmFsc2UpOiBEb21FbGVtZW50IHtcbiAgcmV0dXJuIGlzU1ZHID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgdGFnKSA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbn1cblxuZXhwb3J0IGNvbnN0IFZub2RlID0gZnVuY3Rpb24gVm5vZGUodGhpczogVm5vZGVJbnRlcmZhY2UsIHRhZzogc3RyaW5nLCBwcm9wczogUHJvcHMsIGNoaWxkcmVuOiBDaGlsZHJlbikge1xuICB0aGlzLnRhZyA9IHRhZztcbiAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG59IGFzIHVua25vd24gYXMgVm5vZGVJbnRlcmZhY2U7XG5cbmV4cG9ydCBjb25zdCBWbm9kZVRleHQgPSBmdW5jdGlvbiBWbm9kZVRleHQodGhpczogVm5vZGVUZXh0SW50ZXJmYWNlLCBub2RlVmFsdWU6IHN0cmluZykge1xuICB0aGlzLm5vZGVWYWx1ZSA9IG5vZGVWYWx1ZTtcbn0gYXMgdW5rbm93biBhcyBWbm9kZVRleHRJbnRlcmZhY2U7XG5cbmV4cG9ydCBjb25zdCBWbm9kZUNvbXBvbmVudCA9IGZ1bmN0aW9uIFZub2RlQ29tcG9uZW50KFxuICB0aGlzOiBWbm9kZUNvbXBvbmVudEludGVyZmFjZSxcbiAgY29tcG9uZW50OiBDb21wb25lbnQgfCBWYWx5cmlhbkNvbXBvbmVudCxcbiAgcHJvcHM6IFByb3BzLFxuICBjaGlsZHJlbjogQ2hpbGRyZW5cbikge1xuICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcbiAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG59IGFzIHVua25vd24gYXMgVm5vZGVDb21wb25lbnRJbnRlcmZhY2U7XG5cbi8vIFRyYW5zZm9ybXMgYSBET00gbm9kZSB0byBhIFZOb2RlXG5mdW5jdGlvbiBkb21Ub1Zub2RlKGRvbTogYW55KTogVm5vZGVXaXRoRG9tIHtcbiAgbGV0IGNoaWxkcmVuID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZG9tLmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgY2hpbGREb20gPSBkb20uY2hpbGROb2Rlc1tpXTtcbiAgICBpZiAoY2hpbGREb20ubm9kZVR5cGUgPT09IDMpIHtcbiAgICAgIGxldCB2bm9kZSA9IG5ldyBWbm9kZVRleHQoY2hpbGREb20ubm9kZVZhbHVlKTtcbiAgICAgIHZub2RlLmRvbSA9IGNoaWxkRG9tO1xuICAgICAgY2hpbGRyZW4ucHVzaCh2bm9kZSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGREb20ubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgIGNoaWxkcmVuLnB1c2goZG9tVG9Wbm9kZShjaGlsZERvbSkpO1xuICAgIH1cbiAgfVxuXG4gIGxldCBwcm9wczogUHJvcHMgPSB7fTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb20uYXR0cmlidXRlcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBhdHRyID0gZG9tLmF0dHJpYnV0ZXNbaV07XG4gICAgcHJvcHNbYXR0ci5ub2RlTmFtZV0gPSBhdHRyLm5vZGVWYWx1ZTtcbiAgfVxuXG4gIGxldCB2bm9kZSA9IG5ldyBWbm9kZShkb20udGFnTmFtZS50b0xvd2VyQ2FzZSgpLCBwcm9wcywgY2hpbGRyZW4pO1xuICB2bm9kZS5kb20gPSBkb207XG4gIHJldHVybiB2bm9kZSBhcyBWbm9kZVdpdGhEb207XG59XG5cbmNvbnN0IHY6IFZhbHlyaWFuID0gKHRhZ09yQ29tcG9uZW50LCBwcm9wcywgLi4uY2hpbGRyZW4pID0+IHtcbiAgaWYgKHR5cGVvZiB0YWdPckNvbXBvbmVudCA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBuZXcgVm5vZGUodGFnT3JDb21wb25lbnQsIHByb3BzIHx8IHt9LCBjaGlsZHJlbik7XG4gIH1cblxuICByZXR1cm4gbmV3IFZub2RlQ29tcG9uZW50KHRhZ09yQ29tcG9uZW50LCBwcm9wcyB8fCB7fSwgY2hpbGRyZW4pO1xufTtcblxudi5mcmFnbWVudCA9IChwcm9wczogUHJvcHMsIC4uLnZub2RlczogQ2hpbGRyZW4pID0+IHtcbiAgcmV0dXJuIHZub2Rlcztcbn07XG5cbnYudHJ1c3QgPSAoaHRtbFN0cmluZzogc3RyaW5nKSA9PiB7XG4gIGxldCBkaXYgPSBjcmVhdGVEb21FbGVtZW50KFwiZGl2XCIpO1xuICBkaXYuaW5uZXJIVE1MID0gaHRtbFN0cmluZy50cmltKCk7XG5cbiAgcmV0dXJuIFtdLm1hcC5jYWxsKGRpdi5jaGlsZE5vZGVzLCAoaXRlbSkgPT4gZG9tVG9Wbm9kZShpdGVtKSkgYXMgVm5vZGVXaXRoRG9tW107XG59O1xuXG52LmlzVm5vZGUgPSAob2JqZWN0PzogdW5rbm93biB8IFZub2RlSW50ZXJmYWNlKTogb2JqZWN0IGlzIFZub2RlSW50ZXJmYWNlID0+IHtcbiAgcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIFZub2RlO1xufTtcblxudi5pc1Zub2RlQ29tcG9uZW50ID0gKG9iamVjdD86IHVua25vd24gfCBWbm9kZUNvbXBvbmVudEludGVyZmFjZSk6IG9iamVjdCBpcyBWbm9kZUNvbXBvbmVudEludGVyZmFjZSA9PiB7XG4gIHJldHVybiBvYmplY3QgaW5zdGFuY2VvZiBWbm9kZUNvbXBvbmVudDtcbn07XG5cbnYuaXNWYWx5cmlhbkNvbXBvbmVudCA9IChjb21wb25lbnQ/OiB1bmtub3duIHwgVmFseXJpYW5Db21wb25lbnQpOiBjb21wb25lbnQgaXMgVmFseXJpYW5Db21wb25lbnQgPT4ge1xuICByZXR1cm4gQm9vbGVhbihjb21wb25lbnQgJiYgdHlwZW9mIGNvbXBvbmVudCA9PT0gXCJvYmplY3RcIiAmJiBcInZpZXdcIiBpbiBjb21wb25lbnQpO1xufTtcblxudi5pc0NvbXBvbmVudCA9IChjb21wb25lbnQ/OiB1bmtub3duIHwgVmFseXJpYW5Db21wb25lbnQpOiBjb21wb25lbnQgaXMgVmFseXJpYW5Db21wb25lbnQgPT4ge1xuICByZXR1cm4gQm9vbGVhbigoY29tcG9uZW50ICYmIHR5cGVvZiBjb21wb25lbnQgPT09IFwiZnVuY3Rpb25cIikgfHwgdi5pc1ZhbHlyaWFuQ29tcG9uZW50KGNvbXBvbmVudCkgfHwgdi5pc1Zub2RlQ29tcG9uZW50KGNvbXBvbmVudCkpO1xufTtcblxudi5vbkNsZWFudXAgPSAoY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZCA9PiB7XG4gIGlmIChvbkNsZWFudXBMaXN0LmluZGV4T2YoY2FsbGJhY2spID09PSAtMSkge1xuICAgIG9uQ2xlYW51cExpc3QucHVzaChjYWxsYmFjayk7XG4gIH1cbn07XG52Lm9uVW5tb3VudCA9IChjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkID0+IHtcbiAgaWYgKG9uVW5tb3VudExpc3QuaW5kZXhPZihjYWxsYmFjaykgPT09IC0xKSB7XG4gICAgb25Vbm1vdW50TGlzdC5wdXNoKGNhbGxiYWNrKTtcbiAgfVxufTtcbnYub25Nb3VudCA9IChjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkID0+IHtcbiAgaWYgKG9uTW91bnRMaXN0LmluZGV4T2YoY2FsbGJhY2spID09PSAtMSkge1xuICAgIG9uTW91bnRMaXN0LnB1c2goY2FsbGJhY2spO1xuICB9XG59O1xudi5vblVwZGF0ZSA9IChjYWxsYmFjazogRnVuY3Rpb24pOiB2b2lkID0+IHtcbiAgaWYgKG9uVXBkYXRlTGlzdC5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTEpIHtcbiAgICBvblVwZGF0ZUxpc3QucHVzaChjYWxsYmFjayk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNhbGxDYWxsYmFja0xpc3QobGlzdDogRnVuY3Rpb25bXSk6IHZvaWQge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBsaXN0W2ldKCk7XG4gIH1cbiAgbGlzdC5sZW5ndGggPSAwO1xufVxuXG5mdW5jdGlvbiBzaGFyZWRTZXRBdHRyaWJ1dGUocHJvcDogc3RyaW5nLCBuZXdWbm9kZTogVm5vZGVXaXRoRG9tLCBvbGRWbm9kZT86IFZub2RlV2l0aERvbSk6IHZvaWQgfCBib29sZWFuIHtcbiAgaWYgKHJlc2VydmVkUHJvcHNbcHJvcF0pIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICBpZiAoZGlyZWN0aXZlc1twcm9wXSkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICByZXR1cm4gZGlyZWN0aXZlc1twcm9wXShuZXdWbm9kZS5wcm9wc1twcm9wXSwgbmV3Vm5vZGUsIG9sZFZub2RlKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IHZhbHVlID0gbmV3Vm5vZGUucHJvcHNbcHJvcF07XG4gIGxldCBkb20gPSBuZXdWbm9kZS5kb207XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgaWYgKCFldmVudExpc3RlbmVyTmFtZXNbcHJvcF0pIHtcbiAgICAgICh2Lm1haW5Wbm9kZSBhcyBWbm9kZVdpdGhEb20pLmRvbS5hZGRFdmVudExpc3RlbmVyKHByb3Auc2xpY2UoMiksIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgZXZlbnRMaXN0ZW5lck5hbWVzW3Byb3BdID0gdHJ1ZTtcbiAgICB9XG4gICAgZG9tW2B2LSR7cHJvcH1gXSA9IHZhbHVlO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChwcm9wIGluIGRvbSAmJiAhbmV3Vm5vZGUuaXNTVkcpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG4gICAgaWYgKGRvbVtwcm9wXSAhPSB2YWx1ZSkge1xuICAgICAgZG9tW3Byb3BdID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCFvbGRWbm9kZSB8fCB2YWx1ZSAhPT0gb2xkVm5vZGUucHJvcHNbcHJvcF0pIHtcbiAgICBpZiAodmFsdWUgPT09IGZhbHNlKSB7XG4gICAgICBkb20ucmVtb3ZlQXR0cmlidXRlKHByb3ApO1xuICAgIH0gZWxzZSB7XG4gICAgICBkb20uc2V0QXR0cmlidXRlKHByb3AsIHZhbHVlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlKG5hbWU6IHN0cmluZywgdmFsdWU6IGFueSwgdm5vZGU6IFZub2RlV2l0aERvbSwgb2xkVm5vZGU/OiBWbm9kZVdpdGhEb20pOiB2b2lkIHtcbiAgdm5vZGUucHJvcHNbbmFtZV0gPSB2YWx1ZTtcbiAgc2hhcmVkU2V0QXR0cmlidXRlKG5hbWUsIHZub2RlIGFzIFZub2RlV2l0aERvbSwgb2xkVm5vZGUpO1xufVxuXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzKG5ld1Zub2RlOiBWbm9kZVdpdGhEb20sIG9sZFZub2RlPzogVm5vZGVXaXRoRG9tKTogdm9pZCB7XG4gIGZvciAobGV0IHByb3AgaW4gbmV3Vm5vZGUucHJvcHMpIHtcbiAgICBpZiAoc2hhcmVkU2V0QXR0cmlidXRlKHByb3AsIG5ld1Zub2RlLCBvbGRWbm9kZSkgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgaWYgKG9sZFZub2RlKSB7XG4gICAgZm9yIChsZXQgbmFtZSBpbiBvbGRWbm9kZS5wcm9wcykge1xuICAgICAgaWYgKG5hbWUgaW4gbmV3Vm5vZGUucHJvcHMgPT09IGZhbHNlICYmIHR5cGVvZiBvbGRWbm9kZS5wcm9wc1tuYW1lXSAhPT0gXCJmdW5jdGlvblwiICYmICFyZXNlcnZlZFByb3BzW25hbWVdKSB7XG4gICAgICAgIGlmIChuYW1lIGluIG5ld1Zub2RlLmRvbSAmJiBuZXdWbm9kZS5pc1NWRyA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBuZXdWbm9kZS5kb21bbmFtZV0gPSBudWxsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1Zub2RlLmRvbS5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuY29uc3QgY2FsbFJlbW92ZSA9ICh2bm9kZTogVm5vZGVJbnRlcmZhY2UpID0+IHtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSB2bm9kZS5jaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICB2bm9kZS5jaGlsZHJlbltpXSBpbnN0YW5jZW9mIFZub2RlICYmIGNhbGxSZW1vdmUodm5vZGUuY2hpbGRyZW5baV0pO1xuICB9XG5cbiAgdm5vZGUucHJvcHMub25yZW1vdmUgJiYgdm5vZGUucHJvcHMub25yZW1vdmUodm5vZGUpO1xufTtcblxuLy8gUGF0Y2ggYSBET00gbm9kZSB3aXRoIGEgbmV3IFZOb2RlIHRyZWVcbnYucGF0Y2ggPSAobmV3UGFyZW50Vm5vZGU6IFZub2RlV2l0aERvbSwgb2xkUGFyZW50Vm5vZGU/OiBWbm9kZVdpdGhEb20pOiB2b2lkID0+IHtcbiAgbGV0IG9sZFRyZWUgPSBvbGRQYXJlbnRWbm9kZT8uY2hpbGRyZW4gfHwgW107XG4gIGxldCBuZXdUcmVlID0gbmV3UGFyZW50Vm5vZGUuY2hpbGRyZW47XG4gIGxldCBvbGRUcmVlTGVuZ3RoID0gb2xkVHJlZS5sZW5ndGg7XG5cbiAgY3VycmVudC52bm9kZSA9IG5ld1BhcmVudFZub2RlO1xuICBjdXJyZW50Lm9sZFZub2RlID0gb2xkUGFyZW50Vm5vZGU7XG5cbiAgaWYgKG5ld1RyZWVbMF0gaW5zdGFuY2VvZiBWbm9kZSAmJiBvbGRUcmVlWzBdIGluc3RhbmNlb2YgVm5vZGUgJiYgXCJrZXlcIiBpbiBuZXdUcmVlWzBdLnByb3BzICYmIFwia2V5XCIgaW4gb2xkVHJlZVswXS5wcm9wcykge1xuICAgIGxldCBuZXdUcmVlTGVuZ3RoID0gbmV3VHJlZS5sZW5ndGg7XG4gICAgbGV0IG9sZEtleWVkTGlzdDogeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfSA9IHt9O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb2xkVHJlZUxlbmd0aDsgaSsrKSB7XG4gICAgICBvbGRLZXllZExpc3Rbb2xkVHJlZVtpXS5wcm9wcy5rZXldID0gaTtcbiAgICB9XG5cbiAgICBsZXQgbmV3S2V5ZWRMaXN0OiB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9ID0ge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXdUcmVlTGVuZ3RoOyBpKyspIHtcbiAgICAgIG5ld0tleWVkTGlzdFtuZXdUcmVlW2ldLnByb3BzLmtleV0gPSBpO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmV3VHJlZUxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgY2hpbGRWbm9kZSA9IG5ld1RyZWVbaV07XG4gICAgICBsZXQgb2xkQ2hpbGRWbm9kZSA9IG9sZFRyZWVbb2xkS2V5ZWRMaXN0W2NoaWxkVm5vZGUucHJvcHMua2V5XV07XG4gICAgICBsZXQgc2hvdWxkUGF0Y2ggPSB0cnVlO1xuXG4gICAgICBpZiAob2xkQ2hpbGRWbm9kZSkge1xuICAgICAgICBjaGlsZFZub2RlLmRvbSA9IG9sZENoaWxkVm5vZGUuZG9tO1xuICAgICAgICBpZiAoY2hpbGRWbm9kZS5wcm9wc1tcInYtb25jZVwiXSB8fCAoY2hpbGRWbm9kZS5wcm9wcy5zaG91bGR1cGRhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5zaG91bGR1cGRhdGUoY2hpbGRWbm9kZSwgb2xkQ2hpbGRWbm9kZSkgPT09IGZhbHNlKSkge1xuICAgICAgICAgIGNoaWxkVm5vZGUuY2hpbGRyZW4gPSBvbGRDaGlsZFZub2RlLmNoaWxkcmVuO1xuICAgICAgICAgIHNob3VsZFBhdGNoID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0QXR0cmlidXRlcyhjaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgICBpZiAodi5pc01vdW50ZWQpIHtcbiAgICAgICAgICAgIGNoaWxkVm5vZGUucHJvcHMub251cGRhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5vbnVwZGF0ZShjaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZSAmJiBjaGlsZFZub2RlLnByb3BzLm9uY3JlYXRlKGNoaWxkVm5vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2hpbGRWbm9kZS5kb20gPSBjcmVhdGVEb21FbGVtZW50KGNoaWxkVm5vZGUudGFnLCBjaGlsZFZub2RlLmlzU1ZHKTtcbiAgICAgICAgc2V0QXR0cmlidXRlcyhjaGlsZFZub2RlKTtcbiAgICAgICAgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZSAmJiBjaGlsZFZub2RlLnByb3BzLm9uY3JlYXRlKGNoaWxkVm5vZGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIW5ld1BhcmVudFZub2RlLmRvbS5jaGlsZE5vZGVzW2ldKSB7XG4gICAgICAgIG5ld1BhcmVudFZub2RlLmRvbS5hcHBlbmRDaGlsZChjaGlsZFZub2RlLmRvbSk7XG4gICAgICB9IGVsc2UgaWYgKG5ld1BhcmVudFZub2RlLmRvbS5jaGlsZE5vZGVzW2ldICE9PSBjaGlsZFZub2RlLmRvbSkge1xuICAgICAgICBvbGRUcmVlW2ldICYmICFuZXdLZXllZExpc3Rbb2xkVHJlZVtpXS5wcm9wcy5rZXldICYmIGNhbGxSZW1vdmUob2xkVHJlZVtpXSk7XG4gICAgICAgIG5ld1BhcmVudFZub2RlLmRvbS5yZXBsYWNlQ2hpbGQoY2hpbGRWbm9kZS5kb20sIG5ld1BhcmVudFZub2RlLmRvbS5jaGlsZE5vZGVzW2ldKTtcbiAgICAgIH1cblxuICAgICAgc2hvdWxkUGF0Y2ggJiYgdi5wYXRjaChjaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICB9XG5cbiAgICAvLyBGb3IgdGhlIHJlc3Qgb2YgdGhlIGNoaWxkcmVuLCB3ZSBzaG91bGQgcmVtb3ZlIHRoZW1cbiAgICBmb3IgKGxldCBpID0gbmV3VHJlZUxlbmd0aDsgaSA8IG9sZFRyZWVMZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCFuZXdLZXllZExpc3Rbb2xkVHJlZVtpXS5wcm9wcy5rZXldKSB7XG4gICAgICAgIGxldCBvbGRDaGlsZFZub2RlID0gb2xkVHJlZVtpXTtcbiAgICAgICAgY2FsbFJlbW92ZShvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgb2xkQ2hpbGRWbm9kZS5kb20ucGFyZW50Tm9kZSAmJiBvbGRDaGlsZFZub2RlLmRvbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG9sZENoaWxkVm5vZGUuZG9tKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRmxhdCBuZXdUcmVlXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmV3VHJlZS5sZW5ndGg7IGkrKykge1xuICAgIGxldCBjaGlsZFZub2RlID0gbmV3VHJlZVtpXTtcblxuICAgIGlmIChjaGlsZFZub2RlIGluc3RhbmNlb2YgVm5vZGUpIHtcbiAgICAgIGxldCBvbGRDaGlsZFZub2RlID0gb2xkVHJlZVtpXTtcbiAgICAgIGNoaWxkVm5vZGUuaXNTVkcgPSBuZXdQYXJlbnRWbm9kZS5pc1NWRyB8fCBjaGlsZFZub2RlLnRhZyA9PT0gXCJzdmdcIjtcblxuICAgICAgaWYgKCFvbGRDaGlsZFZub2RlKSB7XG4gICAgICAgIGNoaWxkVm5vZGUuZG9tID0gY3JlYXRlRG9tRWxlbWVudChjaGlsZFZub2RlLnRhZywgY2hpbGRWbm9kZS5pc1NWRyk7XG4gICAgICAgIHNldEF0dHJpYnV0ZXMoY2hpbGRWbm9kZSBhcyBWbm9kZVdpdGhEb20pO1xuICAgICAgICBjaGlsZFZub2RlLnByb3BzLm9uY3JlYXRlICYmIGNoaWxkVm5vZGUucHJvcHMub25jcmVhdGUoY2hpbGRWbm9kZSk7XG4gICAgICAgIHYucGF0Y2goY2hpbGRWbm9kZSBhcyBWbm9kZVdpdGhEb20pO1xuICAgICAgICBuZXdQYXJlbnRWbm9kZS5kb20uYXBwZW5kQ2hpbGQoY2hpbGRWbm9kZS5kb20pO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNoaWxkVm5vZGUudGFnID09PSBvbGRDaGlsZFZub2RlLnRhZykge1xuICAgICAgICBjaGlsZFZub2RlLmRvbSA9IG9sZENoaWxkVm5vZGUuZG9tO1xuXG4gICAgICAgIGlmIChjaGlsZFZub2RlLnByb3BzW1widi1vbmNlXCJdIHx8IChjaGlsZFZub2RlLnByb3BzLnNob3VsZHVwZGF0ZSAmJiBjaGlsZFZub2RlLnByb3BzLnNob3VsZHVwZGF0ZShjaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKSA9PT0gZmFsc2UpKSB7XG4gICAgICAgICAgY2hpbGRWbm9kZS5jaGlsZHJlbiA9IG9sZENoaWxkVm5vZGUuY2hpbGRyZW47XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRBdHRyaWJ1dGVzKGNoaWxkVm5vZGUgYXMgVm5vZGVXaXRoRG9tLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgaWYgKHYuaXNNb3VudGVkKSB7XG4gICAgICAgICAgY2hpbGRWbm9kZS5wcm9wcy5vbnVwZGF0ZSAmJiBjaGlsZFZub2RlLnByb3BzLm9udXBkYXRlKGNoaWxkVm5vZGUsIG9sZENoaWxkVm5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoaWxkVm5vZGUucHJvcHMub25jcmVhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZShjaGlsZFZub2RlKTtcbiAgICAgICAgfVxuICAgICAgICB2LnBhdGNoKGNoaWxkVm5vZGUgYXMgVm5vZGVXaXRoRG9tLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGNoaWxkVm5vZGUuZG9tID0gY3JlYXRlRG9tRWxlbWVudChjaGlsZFZub2RlLnRhZywgY2hpbGRWbm9kZS5pc1NWRyk7XG4gICAgICBzZXRBdHRyaWJ1dGVzKGNoaWxkVm5vZGUgYXMgVm5vZGVXaXRoRG9tKTtcbiAgICAgIGNoaWxkVm5vZGUucHJvcHMub25jcmVhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZShjaGlsZFZub2RlKTtcbiAgICAgIG9sZENoaWxkVm5vZGUgaW5zdGFuY2VvZiBWbm9kZSAmJiBjYWxsUmVtb3ZlKG9sZENoaWxkVm5vZGUpO1xuICAgICAgbmV3UGFyZW50Vm5vZGUuZG9tLnJlcGxhY2VDaGlsZChjaGlsZFZub2RlLmRvbSwgb2xkQ2hpbGRWbm9kZS5kb20pO1xuICAgICAgdi5wYXRjaChjaGlsZFZub2RlIGFzIFZub2RlV2l0aERvbSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGRWbm9kZSA9PT0gbnVsbCB8fCBjaGlsZFZub2RlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIG5ld1RyZWUuc3BsaWNlKGktLSwgMSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZFZub2RlKSkge1xuICAgICAgbmV3VHJlZS5zcGxpY2UoaS0tLCAxLCAuLi5jaGlsZFZub2RlKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChjaGlsZFZub2RlIGluc3RhbmNlb2YgVm5vZGVDb21wb25lbnQpIHtcbiAgICAgIGN1cnJlbnQuY29tcG9uZW50ID0gY2hpbGRWbm9kZS5jb21wb25lbnQ7XG4gICAgICBuZXdUcmVlLnNwbGljZShcbiAgICAgICAgaS0tLFxuICAgICAgICAxLFxuICAgICAgICAoY2hpbGRWbm9kZS5jb21wb25lbnQudmlldyA/IGNoaWxkVm5vZGUuY29tcG9uZW50LnZpZXcuYmluZChjaGlsZFZub2RlLmNvbXBvbmVudCkgOiBjaGlsZFZub2RlLmNvbXBvbmVudC5iaW5kKGNoaWxkVm5vZGUuY29tcG9uZW50KSkoXG4gICAgICAgICAgY2hpbGRWbm9kZS5wcm9wcyxcbiAgICAgICAgICAuLi5jaGlsZFZub2RlLmNoaWxkcmVuXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGRWbm9kZSBpbnN0YW5jZW9mIFZub2RlVGV4dCA9PT0gZmFsc2UpIHtcbiAgICAgIG5ld1RyZWVbaV0gPSBjaGlsZFZub2RlID0gbmV3IFZub2RlVGV4dChTdHJpbmcoY2hpbGRWbm9kZSkpO1xuICAgIH1cblxuICAgIGlmIChuZXdUcmVlW2kgLSAxXSBpbnN0YW5jZW9mIFZub2RlVGV4dCkge1xuICAgICAgbmV3VHJlZVtpIC0gMV0uZG9tLm5vZGVWYWx1ZSArPSBjaGlsZFZub2RlLm5vZGVWYWx1ZTtcbiAgICAgIG5ld1RyZWVbaSAtIDFdLm5vZGVWYWx1ZSArPSBjaGlsZFZub2RlLm5vZGVWYWx1ZTtcbiAgICAgIG5ld1RyZWUuc3BsaWNlKGktLSwgMSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBsZXQgb2xkQ2hpbGRWbm9kZSA9IG9sZFRyZWVbaV07XG5cbiAgICBpZiAoIW9sZENoaWxkVm5vZGUpIHtcbiAgICAgIGNoaWxkVm5vZGUuZG9tID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY2hpbGRWbm9kZS5ub2RlVmFsdWUpO1xuICAgICAgbmV3UGFyZW50Vm5vZGUuZG9tLmFwcGVuZENoaWxkKGNoaWxkVm5vZGUuZG9tKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChvbGRDaGlsZFZub2RlIGluc3RhbmNlb2YgVm5vZGVUZXh0KSB7XG4gICAgICBjaGlsZFZub2RlLmRvbSA9IG9sZENoaWxkVm5vZGUuZG9tO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuICAgICAgaWYgKGNoaWxkVm5vZGUubm9kZVZhbHVlICE9IGNoaWxkVm5vZGUuZG9tLm5vZGVWYWx1ZSkge1xuICAgICAgICBjaGlsZFZub2RlLmRvbS5ub2RlVmFsdWUgPSBjaGlsZFZub2RlLm5vZGVWYWx1ZTtcbiAgICAgIH1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNoaWxkVm5vZGUuZG9tID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY2hpbGRWbm9kZS5ub2RlVmFsdWUpO1xuICAgIGNhbGxSZW1vdmUob2xkQ2hpbGRWbm9kZSk7XG4gICAgbmV3UGFyZW50Vm5vZGUuZG9tLnJlcGxhY2VDaGlsZChjaGlsZFZub2RlLmRvbSwgb2xkQ2hpbGRWbm9kZS5kb20pO1xuICB9XG5cbiAgbGV0IG5ld1RyZWVMZW5ndGggPSBuZXdUcmVlLmxlbmd0aDtcblxuICAvLyBJZiBuZXcgdHJlZSBpcyBlbXB0eSwgZmFzdCByZW1vdmUgYWxsIG9sZCBub2Rlc1xuICBpZiAobmV3VHJlZUxlbmd0aCA9PT0gMCkge1xuICAgIGZvciAobGV0IGkgPSBvbGRUcmVlTGVuZ3RoOyBpLS07ICkge1xuICAgICAgb2xkVHJlZVtpXSBpbnN0YW5jZW9mIFZub2RlICYmIGNhbGxSZW1vdmUob2xkVHJlZVtpXSk7XG4gICAgfVxuICAgIG5ld1BhcmVudFZub2RlLmRvbS50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yIHRoZSByZXN0IG9mIHRoZSBjaGlsZHJlbiwgd2Ugc2hvdWxkIHJlbW92ZSB0aGVtXG4gIGZvciAobGV0IGkgPSBvbGRUcmVlTGVuZ3RoIC0gMTsgaSA+PSBuZXdUcmVlTGVuZ3RoOyAtLWkpIHtcbiAgICBvbGRUcmVlW2ldIGluc3RhbmNlb2YgVm5vZGUgJiYgY2FsbFJlbW92ZShvbGRUcmVlW2ldKTtcbiAgICBvbGRUcmVlW2ldLmRvbS5wYXJlbnROb2RlICYmIG9sZFRyZWVbaV0uZG9tLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQob2xkVHJlZVtpXS5kb20pO1xuICB9XG59O1xuXG52LnVwZGF0ZSA9ICgpID0+IHtcbiAgaWYgKHYubWFpblZub2RlKSB7XG4gICAgb25DbGVhbnVwTGlzdC5sZW5ndGggJiYgY2FsbENhbGxiYWNrTGlzdChvbkNsZWFudXBMaXN0KTtcbiAgICBsZXQgb2xkTWFpblZub2RlID0gdi5tYWluVm5vZGU7XG4gICAgbGV0IG5ld01haW5Wbm9kZSA9IG5ldyBWbm9kZShvbGRNYWluVm5vZGUudGFnLCBvbGRNYWluVm5vZGUucHJvcHMsIFtcbiAgICAgIHYuY29tcG9uZW50IGluc3RhbmNlb2YgVm5vZGVDb21wb25lbnQgPyB2LmNvbXBvbmVudCA6IHYodi5jb21wb25lbnQgYXMgQ29tcG9uZW50LCBudWxsKVxuICAgIF0pIGFzIFZub2RlV2l0aERvbTtcbiAgICBuZXdNYWluVm5vZGUuZG9tID0gb2xkTWFpblZub2RlLmRvbTtcbiAgICBuZXdNYWluVm5vZGUuaXNTVkcgPSBvbGRNYWluVm5vZGUuaXNTVkc7XG4gICAgdi5tYWluVm5vZGUgPSBuZXdNYWluVm5vZGU7XG4gICAgdi5wYXRjaChuZXdNYWluVm5vZGUsIG9sZE1haW5Wbm9kZSk7XG4gICAgaWYgKHYuaXNNb3VudGVkID09PSBmYWxzZSkge1xuICAgICAgb25Nb3VudExpc3QubGVuZ3RoICYmIGNhbGxDYWxsYmFja0xpc3Qob25Nb3VudExpc3QpO1xuICAgICAgdi5pc01vdW50ZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBvblVwZGF0ZUxpc3QubGVuZ3RoICYmIGNhbGxDYWxsYmFja0xpc3Qob25VcGRhdGVMaXN0KTtcbiAgICB9XG4gICAgaWYgKHYuaXNOb2RlSnMpIHtcbiAgICAgIHJldHVybiAobmV3TWFpblZub2RlLmRvbSBhcyBIVE1MRWxlbWVudCkuaW5uZXJIVE1MO1xuICAgIH1cbiAgfVxufTtcblxudi51bm1vdW50ID0gKCkgPT4ge1xuICBpZiAodi5tYWluVm5vZGUpIHtcbiAgICBvbkNsZWFudXBMaXN0Lmxlbmd0aCAmJiBjYWxsQ2FsbGJhY2tMaXN0KG9uQ2xlYW51cExpc3QpO1xuICAgIG9uVW5tb3VudExpc3QubGVuZ3RoICYmIGNhbGxDYWxsYmFja0xpc3Qob25Vbm1vdW50TGlzdCk7XG4gICAgdi5jb21wb25lbnQgPSBlbXB0eUNvbXBvbmVudDtcbiAgICBsZXQgcmVzdWx0ID0gdi51cGRhdGUoKTtcbiAgICB2Lm1haW5Wbm9kZSA9IG51bGw7XG4gICAgdi5jb21wb25lbnQgPSBudWxsO1xuICAgIHYuaXNNb3VudGVkID0gZmFsc2U7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcblxudi5tb3VudCA9IChjb250YWluZXIsIGNvbXBvbmVudCkgPT4ge1xuICBpZiAodi5pc01vdW50ZWQpIHtcbiAgICB2LnVubW91bnQoKTtcbiAgfVxuXG4gIGxldCBtYWluQ29udGFpbmVyO1xuICBpZiAodi5pc05vZGVKcykge1xuICAgIG1haW5Db250YWluZXIgPSB0eXBlb2YgY29udGFpbmVyID09PSBcInN0cmluZ1wiID8gY3JlYXRlRG9tRWxlbWVudChjb250YWluZXIsIGNvbnRhaW5lciA9PT0gXCJzdmdcIikgOiBjb250YWluZXI7XG4gIH0gZWxzZSB7XG4gICAgbWFpbkNvbnRhaW5lciA9IHR5cGVvZiBjb250YWluZXIgPT09IFwic3RyaW5nXCIgPyAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb250YWluZXIpWzBdIGFzIERvbUVsZW1lbnQpIDogY29udGFpbmVyO1xuICB9XG5cbiAgdi5tYWluVm5vZGUgPSBkb21Ub1Zub2RlKG1haW5Db250YWluZXIpO1xuICB2Lm1haW5Wbm9kZS5pc1NWRyA9IHYubWFpblZub2RlLnRhZyA9PT0gXCJzdmdcIjtcbiAgdi5jb21wb25lbnQgPSBjb21wb25lbnQ7XG5cbiAgcmV0dXJuIHYudXBkYXRlKCk7XG59O1xuXG5jb25zdCBwbHVnaW5zID0gbmV3IE1hcDxQbHVnaW4sIGFueT4oKTtcblxudi51c2UgPSAocGx1Z2luOiBQbHVnaW4sIG9wdGlvbnM/OiBSZWNvcmQ8c3RyaW5nIHwgbnVtYmVyIHwgc3ltYm9sLCBhbnk+KTogdm9pZCB8IGFueSA9PiB7XG4gIGlmIChwbHVnaW5zLmhhcyhwbHVnaW4pKSB7XG4gICAgcmV0dXJuIHBsdWdpbnMuZ2V0KHBsdWdpbik7XG4gIH1cblxuICBsZXQgcmVzdWx0ID0gcGx1Z2luKHYsIG9wdGlvbnMpO1xuICBwbHVnaW5zLnNldChwbHVnaW4sIHJlc3VsdCk7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5sZXQgaGlkZURpcmVjdGl2ZSA9ICh0ZXN0OiBib29sZWFuKSA9PiAoYm9vbDogYm9vbGVhbiwgdm5vZGU6IFZub2RlSW50ZXJmYWNlLCBvbGRub2RlPzogVm5vZGVJbnRlcmZhY2UgfCBWbm9kZVRleHRJbnRlcmZhY2UpID0+IHtcbiAgbGV0IHZhbHVlID0gdGVzdCA/IGJvb2wgOiAhYm9vbDtcbiAgaWYgKHZhbHVlKSB7XG4gICAgbGV0IG5ld2RvbSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO1xuICAgIGlmIChvbGRub2RlICYmIG9sZG5vZGUuZG9tICYmIG9sZG5vZGUuZG9tLnBhcmVudE5vZGUpIHtcbiAgICAgIG9sZG5vZGUgaW5zdGFuY2VvZiBWbm9kZSAmJiBjYWxsUmVtb3ZlKG9sZG5vZGUpO1xuICAgICAgb2xkbm9kZS5kb20ucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQobmV3ZG9tLCBvbGRub2RlLmRvbSk7XG4gICAgfVxuICAgIHZub2RlLnRhZyA9IFwiI3RleHRcIjtcbiAgICB2bm9kZS5jaGlsZHJlbiA9IFtdO1xuICAgIHZub2RlLnByb3BzID0ge307XG4gICAgdm5vZGUuZG9tID0gbmV3ZG9tIGFzIHVua25vd24gYXMgRG9tRWxlbWVudDtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmNvbnN0IGRpcmVjdGl2ZXM6IERpcmVjdGl2ZXMgPSB7XG4gIFwidi1pZlwiOiBoaWRlRGlyZWN0aXZlKGZhbHNlKSxcbiAgXCJ2LXVubGVzc1wiOiBoaWRlRGlyZWN0aXZlKHRydWUpLFxuICBcInYtZm9yXCI6IChzZXQ6IHVua25vd25bXSwgdm5vZGU6IFZub2RlV2l0aERvbSkgPT4ge1xuICAgIHZub2RlLmNoaWxkcmVuID0gc2V0Lm1hcCh2bm9kZS5jaGlsZHJlblswXSk7XG4gIH0sXG4gIFwidi1zaG93XCI6IChib29sOiBib29sZWFuLCB2bm9kZTogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgKFxuICAgICAgdm5vZGUuZG9tIGFzIHVua25vd24gYXMge1xuICAgICAgICBzdHlsZTogeyBkaXNwbGF5OiBzdHJpbmcgfTtcbiAgICAgIH1cbiAgICApLnN0eWxlLmRpc3BsYXkgPSBib29sID8gXCJcIiA6IFwibm9uZVwiO1xuICB9LFxuICBcInYtY2xhc3NcIjogKGNsYXNzZXM6IHsgW3g6IHN0cmluZ106IGJvb2xlYW4gfSwgdm5vZGU6IFZub2RlV2l0aERvbSkgPT4ge1xuICAgIGZvciAobGV0IG5hbWUgaW4gY2xhc3Nlcykge1xuICAgICAgKHZub2RlLmRvbSBhcyBEb21FbGVtZW50KS5jbGFzc0xpc3QudG9nZ2xlKG5hbWUsIGNsYXNzZXNbbmFtZV0pO1xuICAgIH1cbiAgfSxcbiAgXCJ2LWh0bWxcIjogKGh0bWw6IHN0cmluZywgdm5vZGU6IFZub2RlV2l0aERvbSkgPT4ge1xuICAgIHZub2RlLmNoaWxkcmVuID0gW3YudHJ1c3QoaHRtbCldO1xuICB9LFxuICBcInYtbW9kZWxcIjogKFttb2RlbCwgcHJvcGVydHksIGV2ZW50XTogYW55W10sIHZub2RlOiBWbm9kZVdpdGhEb20sIG9sZFZub2RlPzogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgbGV0IHZhbHVlO1xuICAgIGxldCBoYW5kbGVyO1xuICAgIGlmICh2bm9kZS50YWcgPT09IFwiaW5wdXRcIikge1xuICAgICAgZXZlbnQgPSBldmVudCB8fCBcIm9uaW5wdXRcIjtcbiAgICAgIHN3aXRjaCAodm5vZGUucHJvcHMudHlwZSkge1xuICAgICAgICBjYXNlIFwiY2hlY2tib3hcIjoge1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KG1vZGVsW3Byb3BlcnR5XSkpIHtcbiAgICAgICAgICAgIGhhbmRsZXIgPSAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgbGV0IHZhbCA9IChlLnRhcmdldCBhcyBEb21FbGVtZW50ICYgUmVjb3JkPHN0cmluZywgYW55PikudmFsdWU7XG4gICAgICAgICAgICAgIGxldCBpZHggPSBtb2RlbFtwcm9wZXJ0eV0uaW5kZXhPZih2YWwpO1xuICAgICAgICAgICAgICBpZiAoaWR4ID09PSAtMSkge1xuICAgICAgICAgICAgICAgIG1vZGVsW3Byb3BlcnR5XS5wdXNoKHZhbCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFsdWUgPSBtb2RlbFtwcm9wZXJ0eV0uaW5kZXhPZih2bm9kZS5kb20udmFsdWUpICE9PSAtMTtcbiAgICAgICAgICB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiB2bm9kZS5wcm9wcykge1xuICAgICAgICAgICAgaGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKG1vZGVsW3Byb3BlcnR5XSA9PT0gdm5vZGUucHJvcHMudmFsdWUpIHtcbiAgICAgICAgICAgICAgICBtb2RlbFtwcm9wZXJ0eV0gPSBudWxsO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1vZGVsW3Byb3BlcnR5XSA9IHZub2RlLnByb3BzLnZhbHVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFsdWUgPSBtb2RlbFtwcm9wZXJ0eV0gPT09IHZub2RlLnByb3BzLnZhbHVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoYW5kbGVyID0gKCkgPT4gKG1vZGVsW3Byb3BlcnR5XSA9ICFtb2RlbFtwcm9wZXJ0eV0pO1xuICAgICAgICAgICAgdmFsdWUgPSBtb2RlbFtwcm9wZXJ0eV07XG4gICAgICAgICAgfVxuICAgICAgICAgIHNldEF0dHJpYnV0ZShcImNoZWNrZWRcIiwgdmFsdWUsIHZub2RlLCBvbGRWbm9kZSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcInJhZGlvXCI6IHtcbiAgICAgICAgICBzZXRBdHRyaWJ1dGUoXCJjaGVja2VkXCIsIG1vZGVsW3Byb3BlcnR5XSA9PT0gdm5vZGUuZG9tLnZhbHVlLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICBzZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBtb2RlbFtwcm9wZXJ0eV0sIHZub2RlLCBvbGRWbm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHZub2RlLnRhZyA9PT0gXCJzZWxlY3RcIikge1xuICAgICAgZXZlbnQgPSBldmVudCB8fCBcIm9uY2xpY2tcIjtcbiAgICAgIGlmICh2bm9kZS5wcm9wcy5tdWx0aXBsZSkge1xuICAgICAgICBoYW5kbGVyID0gKGU6IEV2ZW50ICYgUmVjb3JkPHN0cmluZywgYW55PikgPT4ge1xuICAgICAgICAgIGxldCB2YWwgPSAoZS50YXJnZXQgYXMgRG9tRWxlbWVudCAmIFJlY29yZDxzdHJpbmcsIGFueT4pLnZhbHVlO1xuICAgICAgICAgIGlmIChlLmN0cmxLZXkpIHtcbiAgICAgICAgICAgIGxldCBpZHggPSBtb2RlbFtwcm9wZXJ0eV0uaW5kZXhPZih2YWwpO1xuICAgICAgICAgICAgaWYgKGlkeCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldLnB1c2godmFsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG1vZGVsW3Byb3BlcnR5XS5zcGxpY2UoaWR4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldLnNwbGljZSgwLCBtb2RlbFtwcm9wZXJ0eV0ubGVuZ3RoKTtcbiAgICAgICAgICAgIG1vZGVsW3Byb3BlcnR5XS5wdXNoKHZhbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB2bm9kZS5jaGlsZHJlbi5mb3JFYWNoKChjaGlsZDogVm5vZGVJbnRlcmZhY2UpID0+IHtcbiAgICAgICAgICBpZiAoY2hpbGQudGFnID09PSBcIm9wdGlvblwiKSB7XG4gICAgICAgICAgICBsZXQgdmFsdWUgPSBcInZhbHVlXCIgaW4gY2hpbGQucHJvcHMgPyBjaGlsZC5wcm9wcy52YWx1ZSA6IGNoaWxkLmNoaWxkcmVuLmpvaW4oXCJcIikudHJpbSgpO1xuICAgICAgICAgICAgY2hpbGQucHJvcHMuc2VsZWN0ZWQgPSBtb2RlbFtwcm9wZXJ0eV0uaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2bm9kZS5jaGlsZHJlbi5mb3JFYWNoKChjaGlsZDogVm5vZGVJbnRlcmZhY2UpID0+IHtcbiAgICAgICAgICBpZiAoY2hpbGQudGFnID09PSBcIm9wdGlvblwiKSB7XG4gICAgICAgICAgICBsZXQgdmFsdWUgPSBcInZhbHVlXCIgaW4gY2hpbGQucHJvcHMgPyBjaGlsZC5wcm9wcy52YWx1ZSA6IGNoaWxkLmNoaWxkcmVuLmpvaW4oXCJcIikudHJpbSgpO1xuICAgICAgICAgICAgY2hpbGQucHJvcHMuc2VsZWN0ZWQgPSB2YWx1ZSA9PT0gbW9kZWxbcHJvcGVydHldO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2bm9kZS50YWcgPT09IFwidGV4dGFyZWFcIikge1xuICAgICAgZXZlbnQgPSBldmVudCB8fCBcIm9uaW5wdXRcIjtcbiAgICAgIHZub2RlLmNoaWxkcmVuID0gW21vZGVsW3Byb3BlcnR5XV07XG4gICAgfVxuXG4gICAgaWYgKCF2bm9kZS5wcm9wc1tldmVudF0pIHtcbiAgICAgIGlmICghaGFuZGxlcikge1xuICAgICAgICBoYW5kbGVyID0gKGU6IEV2ZW50KSA9PiAobW9kZWxbcHJvcGVydHldID0gKGUudGFyZ2V0IGFzIERvbUVsZW1lbnQgJiBSZWNvcmQ8c3RyaW5nLCBhbnk+KS52YWx1ZSk7XG4gICAgICB9XG4gICAgICBzZXRBdHRyaWJ1dGUoZXZlbnQsIGhhbmRsZXIsIHZub2RlLCBvbGRWbm9kZSk7XG4gICAgfVxuICB9XG59O1xuXG52LmRpcmVjdGl2ZSA9IChuYW1lOiBzdHJpbmcsIGRpcmVjdGl2ZTogRGlyZWN0aXZlKSA9PiB7XG4gIGxldCBmdWxsTmFtZSA9IGB2LSR7bmFtZX1gO1xuICBkaXJlY3RpdmVzW2Z1bGxOYW1lXSA9IGRpcmVjdGl2ZTtcbiAgcmVzZXJ2ZWRQcm9wc1tmdWxsTmFtZV0gPSB0cnVlO1xufTtcblxudi5pc05vZGVKcyA9IEJvb2xlYW4odHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2Vzcy52ZXJzaW9ucyAmJiBwcm9jZXNzLnZlcnNpb25zLm5vZGUpO1xudi5pc01vdW50ZWQgPSBmYWxzZTtcblxudi5jb21wb25lbnQgPSBudWxsO1xudi5tYWluVm5vZGUgPSBudWxsO1xuXG52LmRpcmVjdGl2ZXMgPSBkaXJlY3RpdmVzO1xudi5yZXNlcnZlZFByb3BzID0gcmVzZXJ2ZWRQcm9wcztcbnYuY3VycmVudCA9IGN1cnJlbnQ7XG5cbnYuc2V0QXR0cmlidXRlID0gc2V0QXR0cmlidXRlO1xuXG5leHBvcnQgZGVmYXVsdCB2O1xuIiwgIi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cbmltcG9ydCB2IGZyb20gXCJ2YWx5cmlhbi5qcy9saWJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIEJ0Y1NWRygpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnXG4gICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgIHhtbDpzcGFjZT1cInByZXNlcnZlXCJcbiAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICBoZWlnaHQ9XCIxMDAlXCJcbiAgICAgIHZlcnNpb249XCIxLjFcIlxuICAgICAgc2hhcGUtcmVuZGVyaW5nPVwiZ2VvbWV0cmljUHJlY2lzaW9uXCJcbiAgICAgIHRleHQtcmVuZGVyaW5nPVwiZ2VvbWV0cmljUHJlY2lzaW9uXCJcbiAgICAgIGltYWdlLXJlbmRlcmluZz1cIm9wdGltaXplUXVhbGl0eVwiXG4gICAgICBmaWxsLXJ1bGU9XCJldmVub2RkXCJcbiAgICAgIGNsaXAtcnVsZT1cImV2ZW5vZGRcIlxuICAgICAgdmlld0JveD1cIjAgMCA0MDkxLjI3IDQwOTEuNzNcIlxuICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgIHhtbG5zOnhvZG09XCJodHRwOi8vd3d3LmNvcmVsLmNvbS9jb3JlbGRyYXcvb2RtLzIwMDNcIlxuICAgID5cbiAgICAgIDxnIGlkPVwiTGF5ZXJfeDAwMjBfMVwiPlxuICAgICAgICA8bWV0YWRhdGEgaWQ9XCJDb3JlbENvcnBJRF8wQ29yZWwtTGF5ZXJcIiAvPlxuICAgICAgICA8ZyBpZD1cIl8xNDIxMzQ0MDIzMzI4XCI+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGZpbGw9XCIjRjc5MzFBXCJcbiAgICAgICAgICAgIGZpbGwtcnVsZT1cIm5vbnplcm9cIlxuICAgICAgICAgICAgZD1cIk00MDMwLjA2IDI1NDAuNzdjLTI3My4yNCwxMDk2LjAxIC0xMzgzLjMyLDE3NjMuMDIgLTI0NzkuNDYsMTQ4OS43MSAtMTA5NS42OCwtMjczLjI0IC0xNzYyLjY5LC0xMzgzLjM5IC0xNDg5LjMzLC0yNDc5LjMxIDI3My4xMiwtMTA5Ni4xMyAxMzgzLjIsLTE3NjMuMTkgMjQ3OSwtMTQ4OS45NSAxMDk2LjA2LDI3My4yNCAxNzYzLjAzLDEzODMuNTEgMTQ4OS43NiwyNDc5LjU3bDAuMDIgLTAuMDJ6XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBmaWxsPVwid2hpdGVcIlxuICAgICAgICAgICAgZmlsbC1ydWxlPVwibm9uemVyb1wiXG4gICAgICAgICAgICBkPVwiTTI5NDcuNzcgMTc1NC4zOGM0MC43MiwtMjcyLjI2IC0xNjYuNTYsLTQxOC42MSAtNDUwLC01MTYuMjRsOTEuOTUgLTM2OC44IC0yMjQuNSAtNTUuOTQgLTg5LjUxIDM1OS4wOWMtNTkuMDIsLTE0LjcyIC0xMTkuNjMsLTI4LjU5IC0xNzkuODcsLTQyLjM0bDkwLjE2IC0zNjEuNDYgLTIyNC4zNiAtNTUuOTQgLTkyIDM2OC42OGMtNDguODQsLTExLjEyIC05Ni44MSwtMjIuMTEgLTE0My4zNSwtMzMuNjlsMC4yNiAtMS4xNiAtMzA5LjU5IC03Ny4zMSAtNTkuNzIgMjM5Ljc4YzAsMCAxNjYuNTYsMzguMTggMTYzLjA1LDQwLjUzIDkwLjkxLDIyLjY5IDEwNy4zNSw4Mi44NyAxMDQuNjIsMTMwLjU3bC0xMDQuNzQgNDIwLjE1YzYuMjYsMS41OSAxNC4zOCwzLjg5IDIzLjM0LDcuNDkgLTcuNDksLTEuODYgLTE1LjQ2LC0zLjg5IC0yMy43MywtNS44N2wtMTQ2LjgxIDU4OC41N2MtMTEuMTEsMjcuNjIgLTM5LjMxLDY5LjA3IC0xMDIuODcsNTMuMzMgMi4yNSwzLjI2IC0xNjMuMTcsLTQwLjcyIC0xNjMuMTcsLTQwLjcybC0xMTEuNDYgMjU2Ljk4IDI5Mi4xNSA3Mi44M2M1NC4zNSwxMy42MyAxMDcuNjEsMjcuODkgMTYwLjA2LDQxLjNsLTkyLjkgMzczLjAzIDIyNC4yNCA1NS45NCA5MiAtMzY5LjA3YzYxLjI2LDE2LjYzIDEyMC43MSwzMS45NyAxNzguOTEsNDYuNDNsLTkxLjY5IDM2Ny4zMyAyMjQuNTEgNTUuOTQgOTIuODkgLTM3Mi4zM2MzODIuODIsNzIuNDUgNjcwLjY3LDQzLjI0IDc5MS44MywtMzAzLjAyIDk3LjYzLC0yNzguNzggLTQuODYsLTQzOS41OCAtMjA2LjI2LC01NDQuNDQgMTQ2LjY5LC0zMy44MyAyNTcuMTgsLTEzMC4zMSAyODYuNjQsLTMyOS42MWwtMC4wNyAtMC4wNXptLTUxMi45MyA3MTkuMjZjLTY5LjM4LDI3OC43OCAtNTM4Ljc2LDEyOC4wOCAtNjkwLjk0LDkwLjI5bDEyMy4yOCAtNDk0LjJjMTUyLjE3LDM3Ljk5IDY0MC4xNywxMTMuMTcgNTY3LjY3LDQwMy45MXptNjkuNDMgLTcyMy4zYy02My4yOSwyNTMuNTggLTQ1My45NiwxMjQuNzUgLTU4MC42OSw5My4xNmwxMTEuNzcgLTQ0OC4yMWMxMjYuNzMsMzEuNTkgNTM0Ljg1LDkwLjU1IDQ2OC45NCwzNTUuMDVsLTAuMDIgMHpcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgKTtcbn1cbiIsICIvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5pbXBvcnQgdiBmcm9tIFwidmFseXJpYW4uanMvbGliXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBEYXNoU1ZHKCkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTEzLjQgNDE2LjhcIj5cbiAgICAgIDxkZWZzPlxuICAgICAgICA8c3R5bGU+XG4gICAgICAgICAge2AuY2xzLTEge1xuICAgICAgICBmaWxsOiAjMDA4ZGU0O1xuICAgICAgfWB9XG4gICAgICAgIDwvc3R5bGU+XG4gICAgICA8L2RlZnM+XG4gICAgICA8dGl0bGU+ZDwvdGl0bGU+XG4gICAgICA8ZyBpZD1cIkxheWVyXzJcIiBkYXRhLW5hbWU9XCJMYXllciAyXCI+XG4gICAgICAgIDxnIGlkPVwiTGF5ZXJfMS0yXCIgZGF0YS1uYW1lPVwiTGF5ZXIgMVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBjbGFzcz1cImNscy0xXCJcbiAgICAgICAgICAgIGQ9XCJNMzM2LjI1LDBIMTQ5LjM1bC0xNS41LDg2LjYsMTY4LjcuMmM4My4xLDAsMTA3LjYsMzAuMiwxMDYuOSw4MC4yLS40LDI1LjYtMTEuNSw2OS0xNi4zLDgzLjEtMTIuOCwzNy41LTM5LjEsODAuMi0xMzcuNyw4MC4xbC0xNjQtLjFMNzYsNDE2LjhoMTg2LjVjNjUuOCwwLDkzLjctNy43LDEyMy40LTIxLjMsNjUuNy0zMC41LDEwNC44LTk1LjMsMTIwLjUtMTc5LjlDNTI5LjY1LDg5LjYsNTAwLjY1LDAsMzM2LjI1LDBcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGNsYXNzPVwiY2xzLTFcIlxuICAgICAgICAgICAgZD1cIk02OC43LDE2NC45Yy00OSwwLTU2LDMxLjktNjAuNiw1MS4yQzIsMjQxLjMsMCwyNTEuNiwwLDI1MS42SDE5MS40YzQ5LDAsNTYtMzEuOSw2MC42LTUxLjIsNi4xLTI1LjIsOC4xLTM1LjUsOC4xLTM1LjVaXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L2c+XG4gICAgPC9zdmc+XG4gICk7XG59XG4iLCAiLyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuaW1wb3J0IHYgZnJvbSBcInZhbHlyaWFuLmpzL2xpYlwiO1xuXG5leHBvcnQgZnVuY3Rpb24gRXRjU1ZHKCkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMTU0MyAyNDk5LjJcIj5cbiAgICAgIDxkZWZzPlxuICAgICAgICA8c3R5bGU+e2AuY2xzLTF7ZmlsbDojM2FiODNhO30uY2xzLTJ7ZmlsbDojMGI4MzExO30uY2xzLTN7ZmlsbDojMTQ2NzE0O31gfTwvc3R5bGU+XG4gICAgICA8L2RlZnM+XG4gICAgICA8dGl0bGU+ZTwvdGl0bGU+XG4gICAgICA8ZyBpZD1cIkxheWVyXzJcIiBkYXRhLW5hbWU9XCJMYXllciAyXCI+XG4gICAgICAgIDxnIGlkPVwic3ZnOFwiPlxuICAgICAgICAgIDxnIGlkPVwibGF5ZXI1XCI+XG4gICAgICAgICAgICA8ZyBpZD1cImcxNjI3XCI+XG4gICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgaWQ9XCJwYXRoMTU5OVwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJjbHMtMVwiXG4gICAgICAgICAgICAgICAgZD1cIk0wLDEzNjEuMDVjMjcxLjg3LDE0NC4zOCw1NTUuNTYsMjk1LjUxLDc3NC42Nyw0MTIuNDVMMTU0MywxMzYxLjA1Yy0yNzguMiw0MTMuMjktNTEwLDc1Ny4zNi03NjguMzMsMTEzOC4xNUM1MTUuODgsMjExOS4yNSwyMzAuMDgsMTcwMCwwLDEzNjEuMDVabTI5LjU1LTExNEw3NzUuNTEsODQ5bDczNi4yNSwzOTUuMTRMNzc1LjkzLDE2NDIuNjNaTTc3NC42Nyw3MjEuNDcsMCwxMTI5LjI4LDc3MS4yOSwwLDE1NDMsMTEzMS44MSw3NzQuNjcsNzIxLjQ3WlwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgaWQ9XCJwYXRoMTU5M1wiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJjbHMtMlwiXG4gICAgICAgICAgICAgICAgZD1cIk03NzQuNjcsMTc3My41LDE1NDMsMTM2MS4wNUMxMjY0LjgsMTc3NC4zNCw3NzQuNjcsMjQ5OS4yLDc3NC42NywyNDk5LjJaTTc3NS41MSw4NDlsNzM2LjI1LDM5NS4xNEw3NzUuOTMsMTY0Mi42Myw3NzUuNTEsODQ5Wm0tLjg0LTEyNy41TDc3MS4yOSwwLDE1NDMsMTEzMS44MVpcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8cGF0aCBpZD1cInBhdGgxNjAzXCIgY2xhc3M9XCJjbHMtMlwiIGQ9XCJNMjkuNTUsMTI0Ny4wNmw3NDYsNjEuMjIsNzM2LjI1LTYzLjc1TDc3NS45MywxNjQzLjA1WlwiIC8+XG4gICAgICAgICAgICAgIDxwYXRoIGlkPVwicGF0aDE2MDZcIiBjbGFzcz1cImNscy0zXCIgZD1cIk03NzUuNTEsMTMwOC4yOGw3MzYuMjUtNjMuNzVMNzc1LjkzLDE2NDMuMDVsLS40Mi0zMzQuNzdaXCIgLz5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICA8L2c+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgKTtcbn1cbiIsICJpbXBvcnQgdiBmcm9tIFwidmFseXJpYW4uanMvbGliXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBFdGhTVkcoKSB7XG4gIHJldHVybiAoXG4gICAgPHN2Z1xuICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICB4bWw6c3BhY2U9XCJwcmVzZXJ2ZVwiXG4gICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgaGVpZ2h0PVwiMTAwJVwiXG4gICAgICB2ZXJzaW9uPVwiMS4xXCJcbiAgICAgIHNoYXBlLXJlbmRlcmluZz1cImdlb21ldHJpY1ByZWNpc2lvblwiXG4gICAgICB0ZXh0LXJlbmRlcmluZz1cImdlb21ldHJpY1ByZWNpc2lvblwiXG4gICAgICBpbWFnZS1yZW5kZXJpbmc9XCJvcHRpbWl6ZVF1YWxpdHlcIlxuICAgICAgZmlsbC1ydWxlPVwiZXZlbm9kZFwiXG4gICAgICBjbGlwLXJ1bGU9XCJldmVub2RkXCJcbiAgICAgIHZpZXdCb3g9XCIwIDAgNzg0LjM3IDEyNzcuMzlcIlxuICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgIHhtbG5zOnhvZG09XCJodHRwOi8vd3d3LmNvcmVsLmNvbS9jb3JlbGRyYXcvb2RtLzIwMDNcIlxuICAgID5cbiAgICAgIDxnIGlkPVwiTGF5ZXJfeDAwMjBfMVwiPlxuICAgICAgICA8bWV0YWRhdGEgaWQ9XCJDb3JlbENvcnBJRF8wQ29yZWwtTGF5ZXJcIiAvPlxuICAgICAgICA8ZyBpZD1cIl8xNDIxMzk0MzQyNDAwXCI+XG4gICAgICAgICAgPGc+XG4gICAgICAgICAgICA8cG9seWdvblxuICAgICAgICAgICAgICBmaWxsPVwiIzM0MzQzNFwiXG4gICAgICAgICAgICAgIGZpbGwtcnVsZT1cIm5vbnplcm9cIlxuICAgICAgICAgICAgICBwb2ludHM9XCIzOTIuMDcsMCAzODMuNSwyOS4xMSAzODMuNSw4NzMuNzQgMzkyLjA3LDg4Mi4yOSA3ODQuMTMsNjUwLjU0IFwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHBvbHlnb24gZmlsbD1cIiM4QzhDOENcIiBmaWxsLXJ1bGU9XCJub256ZXJvXCIgcG9pbnRzPVwiMzkyLjA3LDAgLTAsNjUwLjU0IDM5Mi4wNyw4ODIuMjkgMzkyLjA3LDQ3Mi4zMyBcIiAvPlxuICAgICAgICAgICAgPHBvbHlnb25cbiAgICAgICAgICAgICAgZmlsbD1cIiMzQzNDM0JcIlxuICAgICAgICAgICAgICBmaWxsLXJ1bGU9XCJub256ZXJvXCJcbiAgICAgICAgICAgICAgcG9pbnRzPVwiMzkyLjA3LDk1Ni41MiAzODcuMjQsOTYyLjQxIDM4Ny4yNCwxMjYzLjI4IDM5Mi4wNywxMjc3LjM4IDc4NC4zNyw3MjQuODkgXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8cG9seWdvbiBmaWxsPVwiIzhDOEM4Q1wiIGZpbGwtcnVsZT1cIm5vbnplcm9cIiBwb2ludHM9XCIzOTIuMDcsMTI3Ny4zOCAzOTIuMDcsOTU2LjUyIC0wLDcyNC44OSBcIiAvPlxuICAgICAgICAgICAgPHBvbHlnb24gZmlsbD1cIiMxNDE0MTRcIiBmaWxsLXJ1bGU9XCJub256ZXJvXCIgcG9pbnRzPVwiMzkyLjA3LDg4Mi4yOSA3ODQuMTMsNjUwLjU0IDM5Mi4wNyw0NzIuMzMgXCIgLz5cbiAgICAgICAgICAgIDxwb2x5Z29uIGZpbGw9XCIjMzkzOTM5XCIgZmlsbC1ydWxlPVwibm9uemVyb1wiIHBvaW50cz1cIjAsNjUwLjU0IDM5Mi4wNyw4ODIuMjkgMzkyLjA3LDQ3Mi4zMyBcIiAvPlxuICAgICAgICAgIDwvZz5cbiAgICAgICAgPC9nPlxuICAgICAgPC9nPlxuICAgIDwvc3ZnPlxuICApO1xufVxuIiwgIi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cbmltcG9ydCB2IGZyb20gXCJ2YWx5cmlhbi5qcy9saWJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIEx0Y1NWRygpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIGlkPVwiTGF5ZXJfMVwiIGRhdGEtbmFtZT1cIkxheWVyIDFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA4Mi42IDgyLjZcIj5cbiAgICAgIDx0aXRsZT5saXRlY29pbi1sdGMtbG9nbzwvdGl0bGU+XG4gICAgICA8Y2lyY2xlIGN4PVwiNDEuM1wiIGN5PVwiNDEuM1wiIHI9XCIzNi44M1wiIHN0eWxlPVwiZmlsbDojZmZmXCIgLz5cbiAgICAgIDxwYXRoXG4gICAgICAgIGQ9XCJNNDEuMywwQTQxLjMsNDEuMywwLDEsMCw4Mi42LDQxLjNoMEE0MS4xOCw0MS4xOCwwLDAsMCw0MS41NCwwWk00Miw0Mi43LDM3LjcsNTcuMmgyM2ExLjE2LDEuMTYsMCwwLDEsMS4yLDEuMTJ2LjM4bC0yLDYuOWExLjQ5LDEuNDksMCwwLDEtMS41LDEuMUgyMy4ybDUuOS0yMC4xLTYuNiwyTDI0LDQ0bDYuNi0yLDguMy0yOC4yYTEuNTEsMS41MSwwLDAsMSwxLjUtMS4xaDguOWExLjE2LDEuMTYsMCwwLDEsMS4yLDEuMTJ2LjM4TDQzLjUsMzhsNi42LTItMS40LDQuOFpcIlxuICAgICAgICBzdHlsZT1cImZpbGw6IzM0NWQ5ZFwiXG4gICAgICAvPlxuICAgIDwvc3ZnPlxuICApO1xufVxuIiwgImltcG9ydCB7IEJ0Y1NWRyB9IGZyb20gXCIuL2J0Yy5zdmdcIjtcbmltcG9ydCB7IERhc2hTVkcgfSBmcm9tIFwiLi9kYXNoLnN2Z1wiO1xuaW1wb3J0IHsgRXRjU1ZHIH0gZnJvbSBcIi4vZXRjLnN2Z1wiO1xuaW1wb3J0IHsgRXRoU1ZHIH0gZnJvbSBcIi4vZXRoLnN2Z1wiO1xuaW1wb3J0IHsgTHRjU1ZHIH0gZnJvbSBcIi4vbHRjLnN2Z1wiO1xuLy8gV2Ugd2lsbCBjcmVhdGUgYSBoYXNoIHBvd2VyIGNhbGN1bGF0b3IgZm9yIGNyeXB0b2N1cnJlbmNpZXMgYW5kIG1pbmluZyBoYXJkd2FyZC5cbi8vIFdlIHdpbGwgdXNlIHRoZSBjb2luZ2Vja28tYXBpIGFuZCBtaW5lcnN0YXRzLWFwaS5cbmltcG9ydCBSZXF1ZXN0IGZyb20gXCJ2YWx5cmlhbi5qcy9wbHVnaW5zL3JlcXVlc3QuanNcIjtcbmltcG9ydCB7IFhtclNWRyB9IGZyb20gXCIuL3htci5zdmdcIjtcbmltcG9ydCB7IFplY1NWRyB9IGZyb20gXCIuL3plYy5zdmdcIjtcbmltcG9ydCB7IHN0b3JhZ2VTZXJ2aWNlIH0gZnJvbSBcIi4uL2NvbW1vbi9zdG9yYWdlLXNlcnZpY2VcIjtcblxuY29uc3QgQ29pbkdlY2tvUmVxdWVzdCA9IFJlcXVlc3QubmV3KFwiaHR0cHM6Ly9hcGkuY29pbmdlY2tvLmNvbS9hcGkvdjNcIiwge1xuICBtZXRob2RzOiBbXCJnZXRcIl1cbn0pO1xuXG5jb25zdCBNaW5lcnN0YXRSZXF1ZXN0ID0gUmVxdWVzdC5uZXcoXCJodHRwczovL2FwaS5taW5lcnN0YXQuY29tL3YyL2NvaW5zXCIsIHtcbiAgbWV0aG9kczogW1wiZ2V0XCJdXG59KTtcblxuY29uc3QgVGhpcnR5TWludXRlc0luTWlsbGlTZWNvbmRzID0gMTAwMCAqIDYwICogMzA7XG5cbmNvbnN0IERlZmF1bHRDYWNoZVRpbWUgPSBUaGlydHlNaW51dGVzSW5NaWxsaVNlY29uZHM7XG5cbmV4cG9ydCBlbnVtIEFsZ29yaXRobXNFbnVtIHtcbiAgXCJTSEEtMjU2XCIgPSBcIlNIQS0yNTZcIixcbiAgXCJTY3J5cHRcIiA9IFwiU2NyeXB0XCIsXG4gIFwiRXRoYXNoXCIgPSBcIkV0aGFzaFwiLFxuICBcIkV0Y2hhc2hcIiA9IFwiRXRjaGFzaFwiLFxuICBcIkVxdWloYXNoXCIgPSBcIkVxdWloYXNoXCIsXG4gIFwiUmFuZG9tWFwiID0gXCJSYW5kb21YXCIsXG4gIFwiWDExXCIgPSBcIlgxMVwiXG59XG5cbmV4cG9ydCBlbnVtIENvaW5TeW1ib2xFbnVtIHtcbiAgXCJCVENcIiA9IFwiQlRDXCIsXG4gIFwiRVRIXCIgPSBcIkVUSFwiLFxuICBcIkVUQ1wiID0gXCJFVENcIixcbiAgXCJYTVJcIiA9IFwiWE1SXCIsXG4gIFwiWkVDXCIgPSBcIlpFQ1wiLFxuICBcIkRBU0hcIiA9IFwiREFTSFwiLFxuICBcIkxUQ1wiID0gXCJMVENcIlxufVxuXG5lbnVtIENvaW5OYW1lc0VudW0ge1xuICBcIkJpdGNvaW5cIiA9IFwiQml0Y29pblwiLFxuICBcIkV0aGVyZXVtXCIgPSBcIkV0aGVyZXVtXCIsXG4gIFwiRXRoZXJldW0gQ2xhc3NpY1wiID0gXCJFdGhlcmV1bSBDbGFzc2ljXCIsXG4gIFwiTW9uZXJvXCIgPSBcIk1vbmVyb1wiLFxuICBcIlpjYXNoXCIgPSBcIlpjYXNoXCIsXG4gIFwiRGFzaFwiID0gXCJEYXNoXCIsXG4gIFwiTGl0ZWNvaW5cIiA9IFwiTGl0ZWNvaW5cIlxufVxuXG5pbnRlcmZhY2UgQ29pbkludGVyZmFjZSB7XG4gIGFsZ29yaXRobTogQWxnb3JpdGhtc0VudW07XG4gIGNvaW46IENvaW5TeW1ib2xFbnVtO1xuICBuYW1lOiBDb2luTmFtZXNFbnVtO1xuICBuZXR3b3JrX2hhc2hyYXRlOiBudW1iZXI7XG4gIHByaWNlOiBudW1iZXI7XG4gIHJld2FyZDogbnVtYmVyO1xuICB1cGRhdGVkOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBQcmljZUl0ZW1JbnRlcmZhY2Uge1xuICBhdWQ6IG51bWJlcjtcbiAgYnJsOiBudW1iZXI7XG4gIGNhZDogbnVtYmVyO1xuICBjaGY6IG51bWJlcjtcbiAgY255OiBudW1iZXI7XG4gIGV1cjogbnVtYmVyO1xuICBnYnA6IG51bWJlcjtcbiAgaGtkOiBudW1iZXI7XG4gIGpweTogbnVtYmVyO1xuICBteG46IG51bWJlcjtcbiAgcnViOiBudW1iZXI7XG4gIHVzZDogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgUHJpY2VzSW50ZXJmYWNlIHtcbiAgYml0Y29pbjogUHJpY2VJdGVtSW50ZXJmYWNlO1xuICBkYXNoOiBQcmljZUl0ZW1JbnRlcmZhY2U7XG4gIGV0aGVyZXVtOiBQcmljZUl0ZW1JbnRlcmZhY2U7XG4gIFwiZXRoZXJldW0tY2xhc3NpY1wiOiBQcmljZUl0ZW1JbnRlcmZhY2U7XG4gIGxpdGVjb2luOiBQcmljZUl0ZW1JbnRlcmZhY2U7XG4gIG1vbmVybzogUHJpY2VJdGVtSW50ZXJmYWNlO1xuICB6Y2FzaDogUHJpY2VJdGVtSW50ZXJmYWNlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENhbGN1bGF0aW9uUmVzdWx0IHtcbiAgbWluZWQ6IG51bWJlcjtcbiAgbWluZWRGZWU6IG51bWJlcjtcbiAgaW5jb21lOiBudW1iZXI7XG4gIGluY29tZUZlZTogbnVtYmVyO1xuICBwb3dlckNvc3Q6IG51bWJlcjtcbiAgcHJvZml0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2FsY3VsYXRpb25zUmVzdWx0IHtcbiAgZGFpbHk6IENhbGN1bGF0aW9uUmVzdWx0O1xuICB3ZWVrbHk6IENhbGN1bGF0aW9uUmVzdWx0O1xuICBtb250aGx5OiBDYWxjdWxhdGlvblJlc3VsdDtcbiAgeWVhcmx5OiBDYWxjdWxhdGlvblJlc3VsdDtcbiAgY3VycmVuY3k6IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgcmVhbFByaWNlOiBudW1iZXI7XG4gIGNvc3RQZXJNaW5lZENvaW46IG51bWJlcjtcbiAgZWxlY3RyaWNpdHlQcmljZUJyZWFrRXZlbjogbnVtYmVyO1xuICBoYXNoUHJpY2U6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0IENyeXB0b0N1cnJlbmNpZXMgPSB7XG4gIEJUQzoge1xuICAgIGlkOiBcImJpdGNvaW5cIixcbiAgICBzeW1ib2w6IFwiQlRDXCIsXG4gICAgbmFtZTogXCJCaXRjb2luXCIsXG4gICAgaWNvbjogQnRjU1ZHKCksXG4gICAgY29uZmlnOiB7XG4gICAgICBoYXNoUmF0ZUFtb3VudDogNDAsXG4gICAgICBoYXNoUmF0ZVR5cGU6IFwiVGgvc1wiLFxuICAgICAgcG93ZXI6IDI2MDBcbiAgICB9XG4gIH0sXG4gIEVUSDoge1xuICAgIGlkOiBcImV0aGVyZXVtXCIsXG4gICAgc3ltYm9sOiBcIkVUSFwiLFxuICAgIG5hbWU6IFwiRXRoZXJldW1cIixcbiAgICBpY29uOiBFdGhTVkcoKSxcbiAgICBjb25maWc6IHtcbiAgICAgIGhhc2hSYXRlQW1vdW50OiAyMDAsXG4gICAgICBoYXNoUmF0ZVR5cGU6IFwiTWgvc1wiLFxuICAgICAgcG93ZXI6IDE0MFxuICAgIH1cbiAgfSxcbiAgRVRDOiB7XG4gICAgaWQ6IFwiZXRoZXJldW0tY2xhc3NpY1wiLFxuICAgIHN5bWJvbDogXCJFVENcIixcbiAgICBuYW1lOiBcIkV0aGVyZXVtIENsYXNzaWNcIixcbiAgICBpY29uOiBFdGNTVkcoKSxcbiAgICBjb25maWc6IHtcbiAgICAgIGhhc2hSYXRlQW1vdW50OiA1MDAsXG4gICAgICBoYXNoUmF0ZVR5cGU6IFwiTWgvc1wiLFxuICAgICAgcG93ZXI6IDEwMDBcbiAgICB9XG4gIH0sXG4gIFhNUjoge1xuICAgIGlkOiBcIm1vbmVyb1wiLFxuICAgIHN5bWJvbDogXCJYTVJcIixcbiAgICBuYW1lOiBcIk1vbmVyb1wiLFxuICAgIGljb246IFhtclNWRygpLFxuICAgIGNvbmZpZzoge1xuICAgICAgaGFzaFJhdGVBbW91bnQ6IDEwMCxcbiAgICAgIGhhc2hSYXRlVHlwZTogXCJLaC9zXCIsXG4gICAgICBwb3dlcjogMTIwMFxuICAgIH1cbiAgfSxcbiAgWkVDOiB7XG4gICAgaWQ6IFwiemNhc2hcIixcbiAgICBzeW1ib2w6IFwiWkVDXCIsXG4gICAgbmFtZTogXCJaY2FzaFwiLFxuICAgIGljb246IFplY1NWRygpLFxuICAgIGNvbmZpZzoge1xuICAgICAgaGFzaFJhdGVBbW91bnQ6IDEwMCxcbiAgICAgIGhhc2hSYXRlVHlwZTogXCJLaC9zXCIsXG4gICAgICBwb3dlcjogMTAwMFxuICAgIH1cbiAgfSxcbiAgREFTSDoge1xuICAgIGlkOiBcImRhc2hcIixcbiAgICBzeW1ib2w6IFwiREFTSFwiLFxuICAgIG5hbWU6IFwiRGFzaFwiLFxuICAgIGljb246IERhc2hTVkcoKSxcbiAgICBjb25maWc6IHtcbiAgICAgIGhhc2hSYXRlQW1vdW50OiAyMDAsXG4gICAgICBoYXNoUmF0ZVR5cGU6IFwiR2gvc1wiLFxuICAgICAgcG93ZXI6IDExMTBcbiAgICB9XG4gIH0sXG4gIExUQzoge1xuICAgIGlkOiBcImxpdGVjb2luXCIsXG4gICAgc3ltYm9sOiBcIkxUQ1wiLFxuICAgIG5hbWU6IFwiTGl0ZWNvaW5cIixcbiAgICBpY29uOiBMdGNTVkcoKSxcbiAgICBjb25maWc6IHtcbiAgICAgIGhhc2hSYXRlQW1vdW50OiA1LFxuICAgICAgaGFzaFJhdGVUeXBlOiBcIkdoL3NcIixcbiAgICAgIHBvd2VyOiAxMDAwXG4gICAgfVxuICB9XG59O1xuXG5jb25zdCBDcnlwdG9DdXJyZW5jaWVzSWRzID0gW1wiYml0Y29pblwiLCBcImV0aGVyZXVtXCIsIFwiZXRoZXJldW0tY2xhc3NpY1wiLCBcIm1vbmVyb1wiLCBcInpjYXNoXCIsIFwiZGFzaFwiLCBcImxpdGVjb2luXCJdO1xuXG5leHBvcnQgZW51bSBDdXJyZW5jeUVudW0ge1xuICBcIlVTRFwiID0gXCJVU0RcIixcbiAgXCJFVVJcIiA9IFwiRVVSXCIsXG4gIFwiR0JQXCIgPSBcIkdCUFwiLFxuICBcIkNBRFwiID0gXCJDQURcIixcbiAgXCJBVURcIiA9IFwiQVVEXCIsXG4gIFwiQ0hGXCIgPSBcIkNIRlwiLFxuICBcIkNOWVwiID0gXCJDTllcIixcbiAgXCJSVUJcIiA9IFwiUlVCXCIsXG4gIFwiQlJMXCIgPSBcIkJSTFwiLFxuICBcIkhLRFwiID0gXCJIS0RcIixcbiAgXCJKUFlcIiA9IFwiSlBZXCIsXG4gIFwiTVhOXCIgPSBcIk1YTlwiXG59XG5cbmV4cG9ydCBlbnVtIEhhc2hSYXRlU3RyaW5nVG9OdW1iZXIge1xuICBcIlBoL3NcIiA9IDEwMDAwMDAwMDAwMDAwMDAsXG4gIFwiVGgvc1wiID0gMTAwMDAwMDAwMDAwMCxcbiAgXCJHaC9zXCIgPSAxMDAwMDAwMDAwLFxuICBcIk1oL3NcIiA9IDEwMDAwMDAsXG4gIFwiS2gvc1wiID0gMTAwMCxcbiAgXCJIL3NcIiA9IDFcbn1cblxuZXhwb3J0IGNsYXNzIENhbGN1bGF0b3JTZXJ2aWNlIHtcbiAgcHJpdmF0ZSB1c2VDYWNoZSA9IChwYXRoKTogYm9vbGVhbiA9PiB7XG4gICAgbGV0IGRhdGVOb3cgPSBEYXRlLm5vdygpO1xuICAgIGxldCBjYWNoZSA9IHN0b3JhZ2VTZXJ2aWNlLmdldChwYXRoKTtcbiAgICBpZiAoY2FjaGUpIHtcbiAgICAgIGxldCBjYWNoZURhdGUgPSBjYWNoZS5kYXRlO1xuICAgICAgaWYgKGRhdGVOb3cgLSBjYWNoZURhdGUgPCBEZWZhdWx0Q2FjaGVUaW1lKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgcHJpdmF0ZSBzZXRDYWNoZShwYXRoOiBzdHJpbmcsIHZhbHVlOiB1bmtub3duKTogdm9pZCB7XG4gICAgbGV0IGRhdGVOb3cgPSBEYXRlLm5vdygpO1xuICAgIHN0b3JhZ2VTZXJ2aWNlLnNldChwYXRoLCB7XG4gICAgICB2YWx1ZSxcbiAgICAgIGRhdGU6IGRhdGVOb3dcbiAgICB9KTtcbiAgfVxuXG4gIC8vIGFzeW5jIHBpbmcoKTogUHJvbWlzZTx1bmtub3duPiB7XG4gIC8vICAgaWYgKHRoaXMudXNlQ2FjaGUoXCJwaW5nXCIpKSB7XG4gIC8vICAgICByZXR1cm4gc3RvcmFnZVNlcnZpY2UuZ2V0KFwicGluZy52YWx1ZVwiKTtcbiAgLy8gICB9XG5cbiAgLy8gICBjb25zdCByZXNwb25zZSA9IGF3YWl0IENvaW5HZWNrb1JlcXVlc3QuZ2V0KFwiL3BpbmdcIik7XG4gIC8vICAgdGhpcy5zZXRDYWNoZShcInBpbmdcIiwgcmVzcG9uc2UpO1xuICAvLyAgIHJldHVybiByZXNwb25zZTtcbiAgLy8gfVxuXG4gIC8vIGFzeW5jIGdldENvaW5zTGlzdCgpOiBQcm9taXNlPGFueT4ge1xuICAvLyAgIGlmICh0aGlzLnVzZUNhY2hlKFwiY29pbnNMaXN0XCIpKSB7XG4gIC8vICAgICByZXR1cm4gc3RvcmFnZVNlcnZpY2UuZ2V0KFwiY29pbnNMaXN0LnZhbHVlXCIpO1xuICAvLyAgIH1cbiAgLy8gICBjb25zdCByZXNwb25zZSA9IGF3YWl0IENvaW5HZWNrb1JlcXVlc3QuZ2V0KFwiL2NvaW5zL2xpc3RcIik7XG4gIC8vICAgdGhpcy5zZXRDYWNoZShcImNvaW5zTGlzdFwiLCByZXNwb25zZSk7XG4gIC8vICAgcmV0dXJuIHJlc3BvbnNlO1xuICAvLyB9XG5cbiAgLy8gYXN5bmMgZ2V0U3VwcG9ydGVkQ3VycmVuY2llcygpOiBQcm9taXNlPGFueT4ge1xuICAvLyAgIGlmICh0aGlzLnVzZUNhY2hlKFwic3VwcG9ydGVkQ3VycmVuY2llc1wiKSkge1xuICAvLyAgICAgcmV0dXJuIHN0b3JhZ2VTZXJ2aWNlLmdldChcInN1cHBvcnRlZEN1cnJlbmNpZXMudmFsdWVcIik7XG4gIC8vICAgfVxuICAvLyAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQ29pbkdlY2tvUmVxdWVzdC5nZXQoXCIvc2ltcGxlL3N1cHBvcnRlZF92c19jdXJyZW5jaWVzXCIpO1xuICAvLyAgIHRoaXMuc2V0Q2FjaGUoXCJzdXBwb3J0ZWRDdXJyZW5jaWVzXCIsIHJlc3BvbnNlKTtcbiAgLy8gICByZXR1cm4gcmVzcG9uc2U7XG4gIC8vIH1cblxuICBhc3luYyBnZXRQcmljZXMoKTogUHJvbWlzZTxQcmljZXNJbnRlcmZhY2U+IHtcbiAgICBpZiAodGhpcy51c2VDYWNoZShcInByaWNlc1wiKSkge1xuICAgICAgcmV0dXJuIHN0b3JhZ2VTZXJ2aWNlLmdldChcInByaWNlcy52YWx1ZVwiKTtcbiAgICB9XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBDb2luR2Vja29SZXF1ZXN0LmdldChcIi9zaW1wbGUvcHJpY2VcIiwge1xuICAgICAgaWRzOiBDcnlwdG9DdXJyZW5jaWVzSWRzLmpvaW4oXCIsXCIpLFxuICAgICAgdnNfY3VycmVuY2llczogT2JqZWN0LmtleXMoQ3VycmVuY3lFbnVtKVxuICAgICAgICAubWFwKChrZXkpID0+IGtleS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAuam9pbihcIixcIilcbiAgICB9KTtcbiAgICB0aGlzLnNldENhY2hlKFwicHJpY2VzXCIsIHJlc3BvbnNlKTtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH1cblxuICBhc3luYyBnZXRDb2luc0RhdGEoKTogUHJvbWlzZTxDb2luSW50ZXJmYWNlW10+IHtcbiAgICBpZiAodGhpcy51c2VDYWNoZShcImNvaW5zRGF0YVwiKSkge1xuICAgICAgcmV0dXJuIHN0b3JhZ2VTZXJ2aWNlLmdldChcImNvaW5zRGF0YS52YWx1ZVwiKTtcbiAgICB9XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBNaW5lcnN0YXRSZXF1ZXN0LmdldChcIi9cIiwge1xuICAgICAgbGlzdDogT2JqZWN0LmtleXMoQ29pblN5bWJvbEVudW0pLmpvaW4oXCIsXCIpXG4gICAgfSk7XG4gICAgdGhpcy5zZXRDYWNoZShcImNvaW5zRGF0YVwiLCByZXNwb25zZSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgZ2V0SGFzaFJhdGVGcm9tU3RyaW5nKGhhc2hSYXRlU3RyaW5nOiBIYXNoUmF0ZVN0cmluZ1RvTnVtYmVyLCBhbW91bnQ6IG51bWJlcikge1xuICAgIHJldHVybiBhbW91bnQgKiBOdW1iZXIoSGFzaFJhdGVTdHJpbmdUb051bWJlcltoYXNoUmF0ZVN0cmluZ10pO1xuICB9XG5cbiAgYXN5bmMgY2FsY3VsYXRlQ29pbkZvckhhc2hSYXRlKHtcbiAgICBjb2luU3ltYm9sLFxuICAgIGhhc2hSYXRlLFxuICAgIHBvd2VyLFxuICAgIHBvd2VyQ29zdCxcbiAgICBjdXJyZW5jeSxcbiAgICBhbGdvcml0aG0sXG4gICAgcG9vbEZlZSxcbiAgICBjdXN0b21QcmljZSxcbiAgICBjdXN0b21EYWlseU1pbmVkXG4gIH06IHtcbiAgICBjdXN0b21QcmljZTogbnVtYmVyO1xuICAgIGN1c3RvbURhaWx5TWluZWQ6IG51bWJlcjtcbiAgICBjb2luU3ltYm9sOiBDb2luU3ltYm9sRW51bTtcbiAgICBoYXNoUmF0ZTogbnVtYmVyO1xuICAgIHBvd2VyOiBudW1iZXI7XG4gICAgcG93ZXJDb3N0OiBudW1iZXI7XG4gICAgY3VycmVuY3k6IHN0cmluZztcbiAgICBhbGdvcml0aG0/OiBBbGdvcml0aG1zRW51bTtcbiAgICBwb29sRmVlOiBudW1iZXI7XG4gIH0pOiBQcm9taXNlPENhbGN1bGF0aW9uc1Jlc3VsdD4ge1xuICAgIGxldCBjb2lucyA9IGF3YWl0IHRoaXMuZ2V0Q29pbnNEYXRhKCk7XG4gICAgbGV0IHByaWNlc0ZvckFsbENvaW5zID0gYXdhaXQgdGhpcy5nZXRQcmljZXMoKTtcblxuICAgIGlmICghY29pbnMgfHwgIXByaWNlc0ZvckFsbENvaW5zKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgbG9hZCBkYXRhXCIpO1xuICAgIH1cblxuICAgIGxldCBjb2luID0gY29pbnMuZmluZCgoY29pbikgPT4gY29pbi5jb2luID09PSBjb2luU3ltYm9sKTtcblxuICAgIGlmICghY29pbiB8fCAhQ3J5cHRvQ3VycmVuY2llc1tjb2luU3ltYm9sXSB8fCAhcHJpY2VzRm9yQWxsQ29pbnNbQ3J5cHRvQ3VycmVuY2llc1tjb2luU3ltYm9sXS5pZF0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvaW4gbm90IGZvdW5kXCIpO1xuICAgIH1cblxuICAgIGlmIChhbGdvcml0aG0gJiYgY29pbi5hbGdvcml0aG0gIT09IGFsZ29yaXRobSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQWxnb3JpdGhtIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgfVxuXG4gICAgbGV0IGN1cnJlbmN5TG93ZXJDYXNlZCA9IChjdXJyZW5jeSB8fCBcInVzZFwiKS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgbGV0IHJlYWxQcmljZSA9XG4gICAgICBwcmljZXNGb3JBbGxDb2luc1tDcnlwdG9DdXJyZW5jaWVzW2NvaW5TeW1ib2xdLmlkXVtjdXJyZW5jeUxvd2VyQ2FzZWRdIHx8XG4gICAgICBwcmljZXNGb3JBbGxDb2luc1tDcnlwdG9DdXJyZW5jaWVzW2NvaW5TeW1ib2xdLmlkXS51c2Q7XG4gICAgbGV0IGNvaW5QcmljZSA9IGN1c3RvbVByaWNlIHx8IHJlYWxQcmljZTtcblxuICAgIGxldCBjb2luUmV3YXJkUGVyRGF5TWluZWQgPSBjb2luLnJld2FyZCAqIGhhc2hSYXRlICogMjQ7XG4gICAgbGV0IGRhaWx5TWluZWRGZWUgPSBjb2luUmV3YXJkUGVyRGF5TWluZWQgKiBwb29sRmVlO1xuICAgIGxldCBkYWlseU1pbmVkID0gY29pblJld2FyZFBlckRheU1pbmVkIC0gZGFpbHlNaW5lZEZlZTtcblxuICAgIGlmIChjdXN0b21EYWlseU1pbmVkKSB7XG4gICAgICBkYWlseU1pbmVkID0gY3VzdG9tRGFpbHlNaW5lZDtcbiAgICAgIGxldCBpbnRQb29sRmVlID0gcG9vbEZlZSAqIDEwMDtcbiAgICAgIGRhaWx5TWluZWRGZWUgPSAoZGFpbHlNaW5lZCAvICgxMDAgLSBpbnRQb29sRmVlKSkgKiBpbnRQb29sRmVlO1xuICAgICAgY29pblJld2FyZFBlckRheU1pbmVkID0gZGFpbHlNaW5lZCArIGRhaWx5TWluZWRGZWU7XG4gICAgfVxuXG4gICAgY29uc3QgZGFpbHlJbmNvbWUgPSBkYWlseU1pbmVkICogY29pblByaWNlO1xuICAgIGNvbnN0IGRhaWx5SW5jb21lRmVlID0gZGFpbHlNaW5lZEZlZSAqIGNvaW5QcmljZTtcbiAgICBjb25zdCBkYWlseVBvd2VyQ29zdCA9IChwb3dlckNvc3QgLyAxMDAwKSAqIHBvd2VyICogMjQ7XG4gICAgY29uc3QgZGFpbHlQcm9maXQgPSBkYWlseUluY29tZSAtIGRhaWx5UG93ZXJDb3N0O1xuXG4gICAgY29uc3QgY29zdFBlck1pbmVkQ29pbiA9IChkYWlseVBvd2VyQ29zdCArIGRhaWx5SW5jb21lRmVlKSAvIGRhaWx5TWluZWQ7XG4gICAgY29uc3QgZWxlY3RyaWNpdHlQcmljZUJyZWFrRXZlbiA9ICgoZGFpbHlNaW5lZCAqIGNvaW5QcmljZSAqIDEwMDApIC8gcG93ZXIpICogMjQ7XG4gICAgY29uc3QgaGFzaFByaWNlID0gY29pblJld2FyZFBlckRheU1pbmVkICogY29pblByaWNlO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRhaWx5OiB7XG4gICAgICAgIG1pbmVkOiBkYWlseU1pbmVkLFxuICAgICAgICBtaW5lZEZlZTogZGFpbHlNaW5lZEZlZSxcbiAgICAgICAgaW5jb21lOiBkYWlseUluY29tZSxcbiAgICAgICAgaW5jb21lRmVlOiBkYWlseUluY29tZUZlZSxcbiAgICAgICAgcG93ZXJDb3N0OiBkYWlseVBvd2VyQ29zdCxcbiAgICAgICAgcHJvZml0OiBkYWlseVByb2ZpdFxuICAgICAgfSxcbiAgICAgIHdlZWtseToge1xuICAgICAgICBtaW5lZDogZGFpbHlNaW5lZCAqIDcsXG4gICAgICAgIG1pbmVkRmVlOiBkYWlseU1pbmVkRmVlICogNyxcbiAgICAgICAgaW5jb21lOiBkYWlseUluY29tZSAqIDcsXG4gICAgICAgIGluY29tZUZlZTogZGFpbHlJbmNvbWVGZWUgKiA3LFxuICAgICAgICBwb3dlckNvc3Q6IGRhaWx5UG93ZXJDb3N0ICogNyxcbiAgICAgICAgcHJvZml0OiBkYWlseVByb2ZpdCAqIDdcbiAgICAgIH0sXG4gICAgICBtb250aGx5OiB7XG4gICAgICAgIG1pbmVkOiBkYWlseU1pbmVkICogMzAsXG4gICAgICAgIG1pbmVkRmVlOiBkYWlseU1pbmVkRmVlICogMzAsXG4gICAgICAgIGluY29tZTogZGFpbHlJbmNvbWUgKiAzMCxcbiAgICAgICAgaW5jb21lRmVlOiBkYWlseUluY29tZUZlZSAqIDMwLFxuICAgICAgICBwb3dlckNvc3Q6IGRhaWx5UG93ZXJDb3N0ICogMzAsXG4gICAgICAgIHByb2ZpdDogZGFpbHlQcm9maXQgKiAzMFxuICAgICAgfSxcbiAgICAgIHllYXJseToge1xuICAgICAgICBtaW5lZDogZGFpbHlNaW5lZCAqIDM2NSxcbiAgICAgICAgbWluZWRGZWU6IGRhaWx5TWluZWRGZWUgKiAzNjUsXG4gICAgICAgIGluY29tZTogZGFpbHlJbmNvbWUgKiAzNjUsXG4gICAgICAgIGluY29tZUZlZTogZGFpbHlJbmNvbWVGZWUgKiAzNjUsXG4gICAgICAgIHBvd2VyQ29zdDogZGFpbHlQb3dlckNvc3QgKiAzNjUsXG4gICAgICAgIHByb2ZpdDogZGFpbHlQcm9maXQgKiAzNjVcbiAgICAgIH0sXG4gICAgICBjdXJyZW5jeSxcbiAgICAgIHByaWNlOiBjb2luUHJpY2UsXG4gICAgICByZWFsUHJpY2U6IHJlYWxQcmljZSxcbiAgICAgIGNvc3RQZXJNaW5lZENvaW4sXG4gICAgICBlbGVjdHJpY2l0eVByaWNlQnJlYWtFdmVuLFxuICAgICAgaGFzaFByaWNlXG4gICAgfTtcbiAgfVxufVxuIiwgIi8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cbmltcG9ydCB2IGZyb20gXCJ2YWx5cmlhbi5qcy9saWJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFhtclNWRygpIHtcbiAgcmV0dXJuIChcbiAgICA8c3ZnIGlkPVwiTGF5ZXJfMVwiIGRhdGEtbmFtZT1cIkxheWVyIDFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAzNzU2LjA5IDM3NTYuNDlcIj5cbiAgICAgIDx0aXRsZT5tb25lcm88L3RpdGxlPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk00MTI4LDIyNDkuODFDNDEyOCwzMjg3LDMyODcuMjYsNDEyNy44NiwyMjUwLDQxMjcuODZTMzcyLDMyODcsMzcyLDIyNDkuODEsMTIxMi43NiwzNzEuNzUsMjI1MCwzNzEuNzUsNDEyOCwxMjEyLjU0LDQxMjgsMjI0OS44MVpcIlxuICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTM3MS45NiAtMzcxLjc1KVwiXG4gICAgICAgIHN0eWxlPVwiZmlsbDojZmZmXCJcbiAgICAgIC8+XG4gICAgICA8cGF0aFxuICAgICAgICBpZD1cIl8xNDk5MzEwMzJcIlxuICAgICAgICBkYXRhLW5hbWU9XCIgMTQ5OTMxMDMyXCJcbiAgICAgICAgZD1cIk0yMjUwLDM3MS43NWMtMTAzNi44OSwwLTE4NzkuMTIsODQyLjA2LTE4NzcuOCwxODc4LDAuMjYsMjA3LjI2LDMzLjMxLDQwNi42Myw5NS4zNCw1OTMuMTJoNTYxLjg4VjEyNjNMMjI1MCwyNDgzLjU3LDM0NzAuNTIsMTI2M3YxNTc5LjloNTYyYzYyLjEyLTE4Ni40OCw5NS0zODUuODUsOTUuMzctNTkzLjEyQzQxMjkuNjYsMTIxMi43NiwzMjg3LDM3MiwyMjUwLDM3MlpcIlxuICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTM3MS45NiAtMzcxLjc1KVwiXG4gICAgICAgIHN0eWxlPVwiZmlsbDojZjI2ODIyXCJcbiAgICAgIC8+XG4gICAgICA8cGF0aFxuICAgICAgICBpZD1cIl8xNDk5MzExNjBcIlxuICAgICAgICBkYXRhLW5hbWU9XCIgMTQ5OTMxMTYwXCJcbiAgICAgICAgZD1cIk0xOTY5LjMsMjc2NC4xN2wtNTMyLjY3LTUzMi43djk5NC4xNEgxMDI5LjM4bC0zODQuMjkuMDdjMzI5LjYzLDU0MC44LDkyNS4zNSw5MDIuNTYsMTYwNC45MSw5MDIuNTZTMzUyNS4zMSwzNzY2LjQsMzg1NSwzMjI1LjZIMzA2My4yNVYyMjMxLjQ3bC01MzIuNyw1MzIuNy0yODAuNjEsMjgwLjYxLTI4MC42Mi0yODAuNjFoMFpcIlxuICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTM3MS45NiAtMzcxLjc1KVwiXG4gICAgICAgIHN0eWxlPVwiZmlsbDojNGQ0ZDRkXCJcbiAgICAgIC8+XG4gICAgPC9zdmc+XG4gICk7XG59XG4iLCAiLyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuaW1wb3J0IHYgZnJvbSBcInZhbHlyaWFuLmpzL2xpYlwiO1xuXG5leHBvcnQgZnVuY3Rpb24gWmVjU1ZHKCkge1xuICByZXR1cm4gKFxuICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiIHZpZXdCb3g9XCIwIDAgMjUwMCAyNTAwXCI+XG4gICAgICA8ZGVmcz5cbiAgICAgICAgPHN0eWxlPntgLmNscy0xe2ZpbGw6dXJsKCNsaW5lYXItZ3JhZGllbnQpO31gfTwvc3R5bGU+XG4gICAgICAgIDxsaW5lYXJHcmFkaWVudFxuICAgICAgICAgIGlkPVwibGluZWFyLWdyYWRpZW50XCJcbiAgICAgICAgICB4MT1cIjc4Mi44NFwiXG4gICAgICAgICAgeTE9XCIxNjUuOTFcIlxuICAgICAgICAgIHgyPVwiNzk5LjM0XCJcbiAgICAgICAgICB5Mj1cIjE2NS45MVwiXG4gICAgICAgICAgZ3JhZGllbnRUcmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTgxNTY4LjIgNTUzNzIuMDUpIHJvdGF0ZSgtNDUpIHNjYWxlKDEyMi40MSlcIlxuICAgICAgICAgIGdyYWRpZW50VW5pdHM9XCJ1c2VyU3BhY2VPblVzZVwiXG4gICAgICAgID5cbiAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCIwXCIgc3RvcC1jb2xvcj1cIiNjZjg3MjRcIiAvPlxuICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjFcIiBzdG9wLWNvbG9yPVwiI2ZkY2U1OFwiIC8+XG4gICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG4gICAgICA8L2RlZnM+XG4gICAgICA8dGl0bGU+ejwvdGl0bGU+XG4gICAgICA8ZyBpZD1cIkxheWVyXzJcIiBkYXRhLW5hbWU9XCJMYXllciAyXCI+XG4gICAgICAgIDxnIGlkPVwiTGF5ZXJfMS0yXCIgZGF0YS1uYW1lPVwiTGF5ZXIgMVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBjbGFzcz1cImNscy0xXCJcbiAgICAgICAgICAgIGQ9XCJNMTI2My4wNSwyMjk3LjYxYy01NjkuNiwwLTEwMzQuNTctNDY1LjQzLTEwMzQuNTctMTAzNC41NiwwLTU2OS42LDQ2NS40NC0xMDM0LjU3LDEwMzQuNTctMTAzNC41Nyw1NjkuNiwwLDEwMzQuNTYsNDY1LjQ0LDEwMzQuNTYsMTAzNC41N0MyMjk3LjYxLDE4MzIuNjUsMTgzMi42NSwyMjk3LjYxLDEyNjMuMDUsMjI5Ny42MVpcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0xMjUwLDI1MDBDNTYyLjUsMjUwMCwwLDE5MzcuNSwwLDEyNTBTNTYyLjUsMCwxMjUwLDAsMjUwMCw1NjIuNSwyNTAwLDEyNTAsMTkzNy41LDI1MDAsMTI1MCwyNTAwWm0wLTIyMjIuMDZjLTUzNC41NiwwLTk3Mi4wNiw0MzcuNS05NzIuMDYsOTcyLjA2czQzNy41LDk3Mi4wNiw5NzIuMDYsOTcyLjA2LDk3Mi4wNi00MzcuNSw5NzIuMDYtOTcyLjA2UzE3ODQuNTYsMjc3Ljk0LDEyNTAsMjc3Ljk0WlwiIC8+XG4gICAgICAgICAgPHBhdGggZD1cIk0xMjIxLjA1LDE1ODguNTloNTQxLjY3djI3MC44NGgtMzE5LjZ2MjI5LjE2SDExNjUuMThWMTg2Ni41M0g4MzEuODVjMC05MC40NC0xMy43My0xODAuNCw3LjEtMjYzLjczLDcuMS00MS42Nyw1NS40LTgzLjM0LDkwLjQzLTEyNSwxMDQuMTctMTI1LDIwOC4zNC0yNTAsMzE5LjYxLTM3NSw0MS42Ni00OC43Nyw4My4zMy05MC40NCwxMzIuMS0xNDUuODNIODYwLjI2VjY4Ni4xM2gzMDUuMzlWNDU3aDI3MC44NFY2NzloMzMzLjMzYzAsOTAuNDMsMTMuNzMsMTgwLjQtNy4xLDI2My43My03LjEsNDEuNjctNTUuNCw4My4zMy05MC40NCwxMjUtMTA0LjE2LDEyNS0yMDguMzMsMjUwLTMxOS42LDM3NUMxMzExLDE0OTEuNTMsMTI2OS4zNSwxNTM5LjgyLDEyMjEuMDUsMTU4OC41OVpcIiAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L2c+XG4gICAgPC9zdmc+XG4gICk7XG59XG4iLCAiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuY29uc3QgS2V5ID0gXCJoYXNoLXBvd2VyLWluY29tZS1jYWxjdWxhdG9yXCI7XG5leHBvcnQgY2xhc3MgU3RvcmFnZVNlcnZpY2Uge1xuICBkYjogU3RvcmFnZTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5kYiA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UgfHwgd2luZG93LnNlc3Npb25TdG9yYWdlO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXREYigpOiBSZWNvcmQ8c3RyaW5nIHwgbnVtYmVyIHwgc3ltYm9sLCBhbnk+IHtcbiAgICBsZXQgb2JqO1xuXG4gICAgdHJ5IHtcbiAgICAgIG9iaiA9IEpTT04ucGFyc2UodGhpcy5kYi5nZXRJdGVtKEtleSkgfHwgXCJ7fVwiKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBvYmogPSB7fTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIGdldChrZXk6IHN0cmluZywgZmFsbGJhY2sgPSBudWxsKTogYW55IHwgbnVsbCB7XG4gICAgbGV0IHJlc3VsdCA9IHRoaXMuZ2V0RGIoKTtcblxuICAgIGxldCBwYXJzZWQgPSBrZXkuc3BsaXQoXCIuXCIpO1xuICAgIGxldCBuZXh0O1xuXG4gICAgd2hpbGUgKHBhcnNlZC5sZW5ndGgpIHtcbiAgICAgIG5leHQgPSBwYXJzZWQuc2hpZnQoKTtcbiAgICAgIGlmIChuZXh0IGluIHJlc3VsdCA9PT0gZmFsc2UgfHwgKHBhcnNlZC5sZW5ndGggPiAwICYmIHR5cGVvZiByZXN1bHRbbmV4dF0gIT09IFwib2JqZWN0XCIpKSB7XG4gICAgICAgIHJldHVybiBmYWxsYmFjaztcbiAgICAgIH1cblxuICAgICAgcmVzdWx0ID0gcmVzdWx0W25leHRdO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQgPT09IG51bGwgfHwgdHlwZW9mIHJlc3VsdCA9PT0gXCJ1bmRlZmluZWRcIiA/IGZhbGxiYWNrIDogcmVzdWx0O1xuICB9XG5cbiAgc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgbGV0IHJlc3VsdCA9IHRoaXMuZ2V0RGIoKTtcbiAgICBsZXQgZmluYWxSZXN1bHQgPSByZXN1bHQ7XG5cbiAgICBsZXQgcGFyc2VkID0ga2V5LnNwbGl0KFwiLlwiKTtcbiAgICBsZXQgbmV4dDogc3RyaW5nIHwgbnVtYmVyO1xuXG4gICAgd2hpbGUgKHBhcnNlZC5sZW5ndGgpIHtcbiAgICAgIG5leHQgPSBwYXJzZWQuc2hpZnQoKTtcbiAgICAgIGlmIChuZXh0IGluIHJlc3VsdCA9PT0gZmFsc2UgfHwgKHBhcnNlZC5sZW5ndGggPiAwICYmIHR5cGVvZiByZXN1bHRbbmV4dF0gIT09IFwib2JqZWN0XCIpKSB7XG4gICAgICAgIHJlc3VsdFtuZXh0XSA9IHt9O1xuICAgICAgfVxuXG4gICAgICBpZiAocGFyc2VkLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICBkZWxldGUgcmVzdWx0W25leHRdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc3VsdFtuZXh0XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdCA9IHJlc3VsdFtuZXh0XTtcbiAgICB9XG5cbiAgICB0aGlzLmRiLnNldEl0ZW0oS2V5LCBKU09OLnN0cmluZ2lmeShmaW5hbFJlc3VsdCkpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBzdG9yYWdlU2VydmljZSA9IG5ldyBTdG9yYWdlU2VydmljZSgpO1xuIiwgIi8vIEZvcm1hdCBtb25leSB3aXRoIGN1cnJlbmN5IHN5bWJvbCBhbmQgZGVjaW1hbCBwcmVjaXNpb24gKDIpIHVzaW5nIHRoZSBJbnRsLk51bWJlckZvcm1hdCBBUElcblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBJVm5vZGUsIFZhbHlyaWFuIH0gZnJvbSBcInZhbHlyaWFuLmpzL2xpYi9pbnRlcmZhY2VzXCI7XG5cbmVudW0gQ3VycmVuY3lUb0xhbmd1YWdlRW51bSB7XG4gIFwiVVNEXCIgPSBcImVuLVVTXCIsXG4gIFwiRVVSXCIgPSBcImVzLUVTXCIsXG4gIFwiR0JQXCIgPSBcImVuLUdCXCIsXG4gIFwiQ0FEXCIgPSBcImVuLUNBXCIsXG4gIFwiQVVEXCIgPSBcImVuLUFVXCIsXG4gIFwiQ0hGXCIgPSBcImZyLUNIXCIsXG4gIFwiQ05ZXCIgPSBcInpoLUNOXCIsXG4gIFwiUlVCXCIgPSBcInJ1LVJVXCIsXG4gIFwiQlJMXCIgPSBcInB0LUJSXCIsXG4gIFwiSEtEXCIgPSBcInpoLUhLXCIsXG4gIFwiSlBZXCIgPSBcImphLUpQXCIsXG4gIFwiTVhOXCIgPSBcImVzLU1YXCJcbn1cblxubGV0IGZvcm1hdE1vbmV5ID0gKGFtb3VudDogbnVtYmVyLCBjdXJyZW5jeTogQ3VycmVuY3lUb0xhbmd1YWdlRW51bSwgbGFuZ3VhZ2U6IHN0cmluZykgPT4ge1xuICBsZXQgZm9ybWF0dGVyID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KGxhbmd1YWdlLCB7XG4gICAgc3R5bGU6IFwiY3VycmVuY3lcIixcbiAgICBjdXJyZW5jeTogY3VycmVuY3ksXG4gICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAyXG4gIH0pO1xuICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdChhbW91bnQpO1xufTtcblxubGV0IGZvcm1hdE51bWJlciA9IChhbW91bnQ6IG51bWJlciwgZGVjaW1hbFBsYWNlczogbnVtYmVyLCBsYW5ndWFnZTogc3RyaW5nKSA9PiB7XG4gIGxldCBmb3JtYXR0ZXIgPSBuZXcgSW50bC5OdW1iZXJGb3JtYXQobGFuZ3VhZ2UsIHtcbiAgICBzdHlsZTogXCJkZWNpbWFsXCIsXG4gICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiBkZWNpbWFsUGxhY2VzLFxuICAgIG1heGltdW1GcmFjdGlvbkRpZ2l0czogZGVjaW1hbFBsYWNlc1xuICB9KTtcbiAgcmV0dXJuIGZvcm1hdHRlci5mb3JtYXQoYW1vdW50KTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRNb25leURpcmVjdGl2ZShjdXJyZW5jeTogQ3VycmVuY3lUb0xhbmd1YWdlRW51bSwgdm5vZGU6IElWbm9kZSkge1xuICBsZXQgY2hpbGQgPSB2bm9kZS5jaGlsZHJlblswXTtcbiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJudW1iZXJcIikge1xuICAgIHZub2RlLmNoaWxkcmVuWzBdID0gZm9ybWF0TW9uZXkoY2hpbGQsIGN1cnJlbmN5LCBDdXJyZW5jeVRvTGFuZ3VhZ2VFbnVtW2N1cnJlbmN5XSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdE51bWJlckRpcmVjdGl2ZShcbiAgeyBjdXJyZW5jeSwgZGVjaW1hbFBsYWNlcyB9OiB7IGN1cnJlbmN5OiBDdXJyZW5jeVRvTGFuZ3VhZ2VFbnVtOyBkZWNpbWFsUGxhY2VzOiBudW1iZXIgfSxcbiAgdm5vZGU6IElWbm9kZVxuKSB7XG4gIGxldCBjaGlsZCA9IHZub2RlLmNoaWxkcmVuWzBdO1xuICBpZiAodHlwZW9mIGNoaWxkID09PSBcIm51bWJlclwiKSB7XG4gICAgdm5vZGUuY2hpbGRyZW5bMF0gPSBmb3JtYXROdW1iZXIoY2hpbGQsIGRlY2ltYWxQbGFjZXMsIEN1cnJlbmN5VG9MYW5ndWFnZUVudW1bY3VycmVuY3ldKTtcbiAgfVxufVxuIiwgImltcG9ydCB7XG4gIENhbGN1bGF0aW9uUmVzdWx0LFxuICBDYWxjdWxhdGlvbnNSZXN1bHQsXG4gIENhbGN1bGF0b3JTZXJ2aWNlLFxuICBDb2luU3ltYm9sRW51bSxcbiAgQ3J5cHRvQ3VycmVuY2llcyxcbiAgQ3VycmVuY3lFbnVtXG59IGZyb20gXCIuL2J1c2luZXNzLWxvZ2ljL2NyeXB0by1jYWxjdWxhdG9yLXNlcnZpY2VcIjtcbmltcG9ydCBob29rc1BsdWdpbiwgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJ2YWx5cmlhbi5qcy9wbHVnaW5zL2hvb2tzXCI7XG5cbmltcG9ydCB2IGZyb20gXCJ2YWx5cmlhbi5qcy9saWJcIjtcblxudi51c2UoaG9va3NQbHVnaW4pO1xuXG5jb25zdCBEZWZhdWx0Q3VycmVuY3kgPSBDdXJyZW5jeUVudW0uVVNEO1xuY29uc3QgRGVmYXVsdENvaW4gPSBDcnlwdG9DdXJyZW5jaWVzLkVUSDtcbmNvbnN0IEFsbG93U2VsZWN0TWluZXIgPSBmYWxzZTtcblxuZW51bSBGb3JtVG9TaG93IHtcbiAgXCJtaW5lclNlbGVjdFwiID0gXCJtaW5lclNlbGVjdFwiLFxuICBcIm1hbnVhbENvbmZpZ1wiID0gXCJtYW51YWxDb25maWdcIlxufVxuXG5jb25zdCBEZWZhdWx0Q29uZmlnID0ge1xuICBwb3dlckNvc3Q6IDAuMSxcbiAgcG9vbEZlZTogMVxufTtcblxuY29uc3QgU3RvcmUgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGN1cnJlbmN5OiBEZWZhdWx0Q3VycmVuY3ksXG4gIGNvaW46IERlZmF1bHRDb2luLFxuICBmb3JtVG9TaG93OiBGb3JtVG9TaG93Lm1hbnVhbENvbmZpZyxcbiAgY29uZmlnOiB7XG4gICAgcG93ZXJDb3N0OiBEZWZhdWx0Q29uZmlnLnBvd2VyQ29zdCxcbiAgICBwb29sRmVlOiBEZWZhdWx0Q29uZmlnLnBvb2xGZWUsXG4gICAgY3VzdG9tUHJpY2U6IG51bGwsXG4gICAgY3VzdG9tRGFpbHlNaW5lZDogbnVsbCxcbiAgICBCVEM6IHsgLi4uQ3J5cHRvQ3VycmVuY2llcy5CVEMuY29uZmlnIH0sXG4gICAgRVRIOiB7IC4uLkNyeXB0b0N1cnJlbmNpZXMuRVRILmNvbmZpZyB9LFxuICAgIEVUQzogeyAuLi5DcnlwdG9DdXJyZW5jaWVzLkVUQy5jb25maWcgfSxcbiAgICBMVEM6IHsgLi4uQ3J5cHRvQ3VycmVuY2llcy5MVEMuY29uZmlnIH0sXG4gICAgWE1SOiB7IC4uLkNyeXB0b0N1cnJlbmNpZXMuWE1SLmNvbmZpZyB9LFxuICAgIFpFQzogeyAuLi5DcnlwdG9DdXJyZW5jaWVzLlpFQy5jb25maWcgfSxcbiAgICBEQVNIOiB7IC4uLkNyeXB0b0N1cnJlbmNpZXMuREFTSC5jb25maWcgfVxuICB9LFxuICByZXN1bHQ6IHt9IGFzIENhbGN1bGF0aW9uc1Jlc3VsdFxufTtcblxuZnVuY3Rpb24gQ29pbk5hdigpIHtcbiAgcmV0dXJuIChcbiAgICA8bmF2IHYtZm9yPXtPYmplY3Qua2V5cyhDcnlwdG9DdXJyZW5jaWVzKX0gY2xhc3M9XCJjb2luLW5hdiBmbGV4XCI+XG4gICAgICB7KGtleSkgPT4gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgdi1jbGFzcz17e1xuICAgICAgICAgICAgYWN0aXZlOiBTdG9yZS5jb2luLnN5bWJvbCA9PT0ga2V5XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbmNsaWNrPXsoKSA9PiAoU3RvcmUuY29pbiA9IENyeXB0b0N1cnJlbmNpZXNba2V5XSl9XG4gICAgICAgID5cbiAgICAgICAgICB7a2V5fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICl9XG4gICAgPC9uYXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIEN1cnJlbmN5TmF2KCkge1xuICByZXR1cm4gKFxuICAgIDxuYXYgdi1mb3I9e09iamVjdC5rZXlzKEN1cnJlbmN5RW51bSl9IGNsYXNzPVwiY3VycmVuY3ktbmF2IGZsZXggZmxleC1jb2x1bW5cIj5cbiAgICAgIHsoa2V5KSA9PiAoXG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICB2LWNsYXNzPXt7XG4gICAgICAgICAgICBhY3RpdmU6IFN0b3JlLmN1cnJlbmN5ID09PSBrZXlcbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uY2xpY2s9eygpID0+IChTdG9yZS5jdXJyZW5jeSA9IGtleSl9XG4gICAgICAgID5cbiAgICAgICAgICB7a2V5fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICl9XG4gICAgPC9uYXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIENvaW5EZXNjcmlwdGlvbigpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzPVwiY29pbi1kZXNjcmlwdGlvbi10b3BcIj5cbiAgICAgIDxmaWd1cmU+e1N0b3JlLmNvaW4uaWNvbn08L2ZpZ3VyZT5cbiAgICAgIDxiPntTdG9yZS5jb2luLm5hbWV9PC9iPlxuICAgICAgPHNtYWxsIGNsYXNzPVwiZmxleCBmbGV4LXJvd1wiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInUtcC14cyB1LW5vLXdhcnBcIj4xIHtTdG9yZS5jb2luLnN5bWJvbH0gPSA8L3NwYW4+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgdi1tb2RlbD17W1N0b3JlLmNvbmZpZywgXCJjdXN0b21QcmljZVwiXX0gc3RlcD1cIjAuMDFcIiBjbGFzcz1cInUtbS0wXCIgLz5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJ1LXAteHMgdS1uby13YXJwXCI+e1N0b3JlLmN1cnJlbmN5fTwvc3Bhbj5cbiAgICAgIDwvc21hbGw+XG4gICAgICA8c21hbGwgdi1mb3JtYXQtbW9uZXk9e1N0b3JlLmN1cnJlbmN5fSBjbGFzcz1cIm5vdGUgdGV4dC14c1wiPlxuICAgICAgICB7U3RvcmUucmVzdWx0LnJlYWxQcmljZX1cbiAgICAgIDwvc21hbGw+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIE1pbmVyU2VsZWN0KCkge1xuICByZXR1cm4gPGRpdiB2LWlmPXtTdG9yZS5mb3JtVG9TaG93ID09PSBGb3JtVG9TaG93Lm1pbmVyU2VsZWN0ICYmIEFsbG93U2VsZWN0TWluZXJ9PjwvZGl2Pjtcbn1cblxuZnVuY3Rpb24gTWFudWFsQ29uZmlnKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgdi1pZj17IUFsbG93U2VsZWN0TWluZXIgfHwgU3RvcmUuZm9ybVRvU2hvdyA9PT0gRm9ybVRvU2hvdy5tYW51YWxDb25maWd9PlxuICAgICAgPGZvcm0+XG4gICAgICAgIDxzZWN0aW9uPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGZsZXgtaGFzaC1wb3dlclwiPlxuICAgICAgICAgICAgPGZpZWxkc2V0PlxuICAgICAgICAgICAgICA8bGVnZW5kPkhhc2ggUG93ZXI8L2xlZ2VuZD5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJIYXNoIHBvd2VyXCJcbiAgICAgICAgICAgICAgICB2LW1vZGVsPXtbU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXSwgXCJoYXNoUmF0ZUFtb3VudFwiXX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZmllbGRzZXQ+XG4gICAgICAgICAgICA8ZmllbGRzZXQgY2xhc3M9XCJoYXNoLXBvd2VyXCI+XG4gICAgICAgICAgICAgIDxsZWdlbmQ+Jm5ic3A7PC9sZWdlbmQ+XG4gICAgICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD17W1N0b3JlLmNvbmZpZ1tTdG9yZS5jb2luLnN5bWJvbF0sIFwiaGFzaFJhdGVUeXBlXCJdfT5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPlBoL3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPlRoL3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPkdoL3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPk1oL3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPktoL3M8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uPkgvczwvb3B0aW9uPlxuICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgIDwvZmllbGRzZXQ+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGZpZWxkc2V0PlxuICAgICAgICAgICAgPGxlZ2VuZD5Qb3dlciBDb25zdW1wdGlvbiAoVyk8L2xlZ2VuZD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJQb3dlciBDb25zdW1wdGlvbiAoVylcIlxuICAgICAgICAgICAgICB2LW1vZGVsPXtbU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXSwgXCJwb3dlclwiXX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9maWVsZHNldD5cbiAgICAgICAgICA8ZmllbGRzZXQ+XG4gICAgICAgICAgICA8bGVnZW5kPlBvd2VyIENvc3QgS3cvaCAoJCk8L2xlZ2VuZD5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgcGxhY2Vob2xkZXI9XCJQb3dlciBDb3N0IEt3L2ggKCQpXCIgdi1tb2RlbD17W1N0b3JlLmNvbmZpZywgXCJwb3dlckNvc3RcIl19IC8+XG4gICAgICAgICAgPC9maWVsZHNldD5cbiAgICAgICAgICA8ZmllbGRzZXQ+XG4gICAgICAgICAgICA8bGVnZW5kPlBvb2wgZmVlICglKTwvbGVnZW5kPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBwbGFjZWhvbGRlcj1cIlBvb2wgZmVlICglKVwiIHYtbW9kZWw9e1tTdG9yZS5jb25maWcsIFwicG9vbEZlZVwiXX0gLz5cbiAgICAgICAgICA8L2ZpZWxkc2V0PlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L2Zvcm0+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIENvbmZpZ1NlY3Rpb24oKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzcz1cImNvbmZpZ1wiPlxuICAgICAgPG5hdiB2LWlmPXtBbGxvd1NlbGVjdE1pbmVyfT5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHYtY2xhc3M9e3tcbiAgICAgICAgICAgIGFjdGl2ZTogU3RvcmUuZm9ybVRvU2hvdyA9PT0gRm9ybVRvU2hvdy5taW5lclNlbGVjdFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICBNaW5lciBMaXN0XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgdi1jbGFzcz17e1xuICAgICAgICAgICAgYWN0aXZlOiBTdG9yZS5mb3JtVG9TaG93ID09PSBGb3JtVG9TaG93Lm1hbnVhbENvbmZpZ1xuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICBNYW51YWxcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L25hdj5cbiAgICAgIDxzZWN0aW9uPlxuICAgICAgICA8TWluZXJTZWxlY3QgLz5cbiAgICAgICAgPE1hbnVhbENvbmZpZyAvPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5lbnVtIFJlc3VsdEJ5U3RyaW5nRW51bSB7XG4gIFwiZGFpbHlcIiA9IFwiRGF5XCIsXG4gIFwid2Vla2x5XCIgPSBcIldlZWtcIixcbiAgXCJtb250aGx5XCIgPSBcIk1vbnRoXCIsXG4gIFwieWVhcmx5XCIgPSBcIlllYXJcIlxufVxuXG5lbnVtIFJlc3VsdEJ5RW51bSB7XG4gIFwiZGFpbHlcIiA9IFwiZGFpbHlcIixcbiAgXCJ3ZWVrbHlcIiA9IFwid2Vla2x5XCIsXG4gIFwibW9udGhseVwiID0gXCJtb250aGx5XCIsXG4gIFwieWVhcmx5XCIgPSBcInllYXJseVwiXG59XG5cbmZ1bmN0aW9uIFJlc3VsdEJ5KHsgYnkgfTogeyBieTogc3RyaW5nIH0pIHtcbiAgbGV0IHJlc3VsdCA9IFN0b3JlLnJlc3VsdFtieV0gYXMgQ2FsY3VsYXRpb25SZXN1bHQ7XG4gIGxldCBieVN0cmluZyA9IFJlc3VsdEJ5U3RyaW5nRW51bVtieV07XG4gIGlmIChyZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiAoXG4gICAgICA8dHI+XG4gICAgICAgIDx0ZCBjb2xzcGFuPVwiNFwiPiAtIDwvdGQ+XG4gICAgICA8L3RyPlxuICAgICk7XG4gIH1cblxuICBsZXQgZGVjaW1hbFBsYWNlc1N0cmluZyA9IFN0b3JlLmNvbmZpZy5jdXN0b21EYWlseU1pbmVkID49IDEgPyA1IDogMC4wMDAwMDU7XG5cbiAgcmV0dXJuIChcbiAgICA8dHI+XG4gICAgICA8dGQ+XG4gICAgICAgIDxzbWFsbD5NaW5lZC97YnlTdHJpbmd9PC9zbWFsbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdi1pZj17YnkgPT09IFJlc3VsdEJ5RW51bS5kYWlseX1cbiAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICB2LW1vZGVsPXtbU3RvcmUuY29uZmlnLCBcImN1c3RvbURhaWx5TWluZWRcIl19XG4gICAgICAgICAgc3RlcD17ZGVjaW1hbFBsYWNlc1N0cmluZ31cbiAgICAgICAgICBjbGFzcz1cInUtbS0wXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGJcbiAgICAgICAgICB2LWlmPXtieSAhPT0gUmVzdWx0QnlFbnVtLmRhaWx5fVxuICAgICAgICAgIHYtZm9ybWF0LW51bWJlcj17e1xuICAgICAgICAgICAgY3VycmVuY3k6IFN0b3JlLmN1cnJlbmN5LFxuICAgICAgICAgICAgZGVjaW1hbFBsYWNlczogNlxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7cmVzdWx0Lm1pbmVkfVxuICAgICAgICA8L2I+XG4gICAgICAgIDxzbWFsbD5cbiAgICAgICAgICBQb29sIGZlZTogPHNwYW4gdi1mb3JtYXQtbnVtYmVyPXt7IGN1cnJlbmN5OiBTdG9yZS5jdXJyZW5jeSwgZGVjaW1hbFBsYWNlczogNiB9fT57cmVzdWx0Lm1pbmVkRmVlfTwvc3Bhbj5cbiAgICAgICAgPC9zbWFsbD5cbiAgICAgIDwvdGQ+XG4gICAgICA8dGQ+XG4gICAgICAgIDxzbWFsbD5JbmNvbWUve2J5U3RyaW5nfTwvc21hbGw+XG4gICAgICAgIDxiIHYtZm9ybWF0LW1vbmV5PXtTdG9yZS5jdXJyZW5jeX0+e3Jlc3VsdC5pbmNvbWV9PC9iPlxuICAgICAgICA8c21hbGw+XG4gICAgICAgICAgUG9vbCBmZWUgPHNwYW4gdi1mb3JtYXQtbW9uZXk9e1N0b3JlLmN1cnJlbmN5fT57cmVzdWx0LmluY29tZUZlZX08L3NwYW4+XG4gICAgICAgIDwvc21hbGw+XG4gICAgICA8L3RkPlxuICAgICAgPHRkPlxuICAgICAgICA8c21hbGw+UG93ZXIgY29zdC97YnlTdHJpbmd9PC9zbWFsbD5cbiAgICAgICAgPGIgdi1mb3JtYXQtbW9uZXk9e1N0b3JlLmN1cnJlbmN5fT57cmVzdWx0LnBvd2VyQ29zdH08L2I+XG4gICAgICA8L3RkPlxuICAgICAgPHRkPlxuICAgICAgICA8c21hbGw+UHJvZml0L3tieVN0cmluZ308L3NtYWxsPlxuICAgICAgICA8YiB2LWZvcm1hdC1tb25leT17U3RvcmUuY3VycmVuY3l9PntyZXN1bHQucHJvZml0fTwvYj5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgKTtcbn1cblxuZnVuY3Rpb24gUmVzdWx0cygpIHtcbiAgaWYgKFN0b3JlLmxvYWRpbmcpIHtcbiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nLi4uPC9kaXY+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8dHIgY2xhc3M9XCJyZXN1bHRzXCI+XG4gICAgICA8dGQgY29sc3Bhbj1cIjJcIj5cbiAgICAgICAgPGRsPlxuICAgICAgICAgIDxkdD5cbiAgICAgICAgICAgIDxkZD5cbiAgICAgICAgICAgICAgQ29zdCBieSA8c3BhbiBjbGFzcz1cInRleHQtc21cIj57U3RvcmUuY29pbi5uYW1lfTwvc3Bhbj4gbWluZWRcbiAgICAgICAgICAgIDwvZGQ+XG4gICAgICAgICAgICA8ZGQ+XG4gICAgICAgICAgICAgIDxiIHYtZm9ybWF0LW1vbmV5PXtTdG9yZS5jdXJyZW5jeX0+e1N0b3JlLnJlc3VsdC5jb3N0UGVyTWluZWRDb2lufTwvYj5cbiAgICAgICAgICAgIDwvZGQ+XG4gICAgICAgICAgPC9kdD5cbiAgICAgICAgICA8ZHQ+XG4gICAgICAgICAgICA8ZGQ+RWxlY3RyaWNpdHkgQnJlYWtFdmVuPC9kZD5cbiAgICAgICAgICAgIDxkZD5cbiAgICAgICAgICAgICAgPGIgdi1mb3JtYXQtbW9uZXk9e1N0b3JlLmN1cnJlbmN5fT57U3RvcmUucmVzdWx0LmVsZWN0cmljaXR5UHJpY2VCcmVha0V2ZW59PC9iPlxuICAgICAgICAgICAgPC9kZD5cbiAgICAgICAgICA8L2R0PlxuICAgICAgICAgIDxkdD5cbiAgICAgICAgICAgIDxkZD5IYXNocHJpY2U8L2RkPlxuICAgICAgICAgICAgPGRkPlxuICAgICAgICAgICAgICA8YiB2LWZvcm1hdC1tb25leT17U3RvcmUuY3VycmVuY3l9PntTdG9yZS5yZXN1bHQuaGFzaFByaWNlfTwvYj5cbiAgICAgICAgICAgIDwvZGQ+XG4gICAgICAgICAgPC9kdD5cbiAgICAgICAgPC9kbD5cbiAgICAgIDwvdGQ+XG4gICAgICA8dGQgY29sc3Bhbj1cIjJcIj5cbiAgICAgICAgPGI+UHJvZml0IGJ5IG1vbnRoPC9iPlxuICAgICAgICA8YiB2LWZvcm1hdC1tb25leT17U3RvcmUuY3VycmVuY3l9PntTdG9yZS5yZXN1bHQubW9udGhseS5wcm9maXR9PC9iPlxuICAgICAgPC90ZD5cbiAgICA8L3RyPlxuICApO1xufVxuXG5jb25zdCBjYWxjdWxhdG9yU2VydmljZSA9IG5ldyBDYWxjdWxhdG9yU2VydmljZSgpO1xuXG5hc3luYyBmdW5jdGlvbiBjb21wdXRlUHJvZml0KCkge1xuICBpZiAoU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXSA9PT0gdW5kZWZpbmVkIHx8IFN0b3JlLmNvbmZpZ1tTdG9yZS5jb2luLnN5bWJvbF0uaGFzaFJhdGVBbW91bnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIFN0b3JlLmxvYWRpbmcgPSB0cnVlO1xuXG4gIGlmIChTdG9yZS5jb25maWcucG93ZXJDb3N0ID09PSB1bmRlZmluZWQpIHtcbiAgICBTdG9yZS5jb25maWcucG93ZXJDb3N0ID09PSAwO1xuICB9XG4gIGlmIChTdG9yZS5jb25maWcucG9vbEZlZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgU3RvcmUuY29uZmlnLnBvb2xGZWUgPT09IDA7XG4gIH1cblxuICBjb25zdCBoYXNoUmF0ZSA9IGNhbGN1bGF0b3JTZXJ2aWNlLmdldEhhc2hSYXRlRnJvbVN0cmluZyhcbiAgICBTdG9yZS5jb25maWdbU3RvcmUuY29pbi5zeW1ib2xdLmhhc2hSYXRlVHlwZSxcbiAgICBTdG9yZS5jb25maWdbU3RvcmUuY29pbi5zeW1ib2xdLmhhc2hSYXRlQW1vdW50XG4gICk7XG5cbiAgbGV0IHJlc3VsdHMgPSBhd2FpdCBjYWxjdWxhdG9yU2VydmljZS5jYWxjdWxhdGVDb2luRm9ySGFzaFJhdGUoe1xuICAgIGN1c3RvbVByaWNlOiBTdG9yZS5jb25maWcuY3VzdG9tUHJpY2UsXG4gICAgY3VzdG9tRGFpbHlNaW5lZDogU3RvcmUuY29uZmlnLmN1c3RvbURhaWx5TWluZWQsXG4gICAgY29pblN5bWJvbDogQ29pblN5bWJvbEVudW1bU3RvcmUuY29pbi5zeW1ib2xdLFxuICAgIGhhc2hSYXRlLFxuICAgIHBvd2VyOiBTdG9yZS5jb25maWdbU3RvcmUuY29pbi5zeW1ib2xdLnBvd2VyLFxuICAgIHBvd2VyQ29zdDogU3RvcmUuY29uZmlnLnBvd2VyQ29zdCxcbiAgICBjdXJyZW5jeTogU3RvcmUuY3VycmVuY3ksXG4gICAgcG9vbEZlZTogU3RvcmUuY29uZmlnLnBvb2xGZWUgLyAxMDBcbiAgfSk7XG5cbiAgU3RvcmUucmVzdWx0ID0gcmVzdWx0cztcbiAgU3RvcmUuY29uZmlnLmN1c3RvbVByaWNlID0gcmVzdWx0cy5wcmljZTtcbiAgU3RvcmUuY29uZmlnLmN1c3RvbURhaWx5TWluZWQgPSByZXN1bHRzLmRhaWx5Lm1pbmVkO1xuXG4gIFN0b3JlLmxvYWRpbmcgPSBmYWxzZTtcbiAgdi51cGRhdGUoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFwcCgpIHtcbiAgbGV0IHJlZiA9IHVzZVJlZjxFbGVtZW50PihudWxsKTtcblxuICAvLyBSZXNldCB0aGUgY3VzdG9tIHByaWNlIHdoZW4gdGhlIGNvaW4gb3IgY3VycmVuY3kgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIFN0b3JlLmNvbmZpZy5jdXN0b21QcmljZSA9IG51bGw7XG4gIH0sIFtTdG9yZS5jb2luLnN5bWJvbCwgU3RvcmUuY3VycmVuY3ldKTtcblxuICAvLyBSZXNldCB0aGUgY3VzdG9tIGRhaWx5IG1pbmVkIHdoZW4gdGhlIGNvbmZpZyBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgU3RvcmUuY29uZmlnLmN1c3RvbURhaWx5TWluZWQgPSBudWxsO1xuICB9LCBbXG4gICAgU3RvcmUuY29pbi5zeW1ib2wsXG4gICAgU3RvcmUuY3VycmVuY3ksXG4gICAgU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXS5oYXNoUmF0ZUFtb3VudCxcbiAgICBTdG9yZS5jb25maWdbU3RvcmUuY29pbi5zeW1ib2xdLmhhc2hSYXRlVHlwZSxcbiAgICBTdG9yZS5jb25maWdbU3RvcmUuY29pbi5zeW1ib2xdLnBvd2VyLFxuICAgIFN0b3JlLmNvbmZpZy5wb3dlckNvc3QsXG4gICAgU3RvcmUuY29uZmlnLnBvb2xGZWVcbiAgXSk7XG5cbiAgLy8gQ29tcHV0ZSBwcm9maXQgb25seSBpbiB0aGUgZmlyc3QgcmVuZGVyXG4gIHVzZUVmZmVjdChjb21wdXRlUHJvZml0LCBbXSk7XG5cbiAgLy8gQ29tcHV0ZSBwcm9maXQgb24gZXZlcnkgY2hhbmdlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHJlZi5jdXJyZW50KSB7XG4gICAgICBjb21wdXRlUHJvZml0KCk7XG4gICAgfVxuICB9LCBbXG4gICAgU3RvcmUuY29uZmlnLmN1c3RvbURhaWx5TWluZWQsXG4gICAgU3RvcmUuY29uZmlnLmN1c3RvbVByaWNlLFxuICAgIFN0b3JlLmNvaW4uc3ltYm9sLFxuICAgIFN0b3JlLmN1cnJlbmN5LFxuICAgIFN0b3JlLmNvbmZpZ1tTdG9yZS5jb2luLnN5bWJvbF0uaGFzaFJhdGVBbW91bnQsXG4gICAgU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXS5oYXNoUmF0ZVR5cGUsXG4gICAgU3RvcmUuY29uZmlnW1N0b3JlLmNvaW4uc3ltYm9sXS5wb3dlcixcbiAgICBTdG9yZS5jb25maWcucG93ZXJDb3N0LFxuICAgIFN0b3JlLmNvbmZpZy5wb29sRmVlXG4gIF0pO1xuXG4gIHJldHVybiBbXG4gICAgPENvaW5OYXYgLz4sXG4gICAgPGFydGljbGUgY2xhc3M9XCJmbGV4XCIgdi1yZWY9e3JlZn0+XG4gICAgICA8Q3VycmVuY3lOYXYgLz5cbiAgICAgIDxzZWN0aW9uIGNsYXNzPVwiY29pbi1jb250YWluZXIgZmxleCBmbGV4LTFcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvaW4tZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICA8Q29pbkRlc2NyaXB0aW9uIC8+XG4gICAgICAgICAgPENvbmZpZ1NlY3Rpb24gLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHRhYmxlIGNsYXNzPVwiY29pbi1yZXN1bHQgZmxleC0xXCI+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPFJlc3VsdEJ5IGJ5PVwiZGFpbHlcIiAvPlxuICAgICAgICAgICAgPFJlc3VsdEJ5IGJ5PVwid2Vla2x5XCIgLz5cbiAgICAgICAgICAgIDxSZXN1bHRCeSBieT1cIm1vbnRobHlcIiAvPlxuICAgICAgICAgICAgPFJlc3VsdEJ5IGJ5PVwieWVhcmx5XCIgLz5cbiAgICAgICAgICAgIDxSZXN1bHRzIC8+XG4gICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICA8L2FydGljbGU+LFxuICAgIDxzbWFsbCBjbGFzcz1cIm5vdGUgdGV4dC1zbSB0ZXh0LXJpZ2h0XCI+RGF0YSBpcyB1cGRhdGVkIGV2ZXJ5IDMwIG1pbnV0ZXM8L3NtYWxsPlxuICBdO1xufVxuIiwgImltcG9ydCBcIi4vYnVzaW5lc3MtbG9naWMvY3J5cHRvLWNhbGN1bGF0b3Itc2VydmljZVwiO1xuXG5pbXBvcnQgeyBmb3JtYXRNb25leURpcmVjdGl2ZSwgZm9ybWF0TnVtYmVyRGlyZWN0aXZlIH0gZnJvbSBcIi4vY29tbW9uL2Zvcm1hdC1udW1iZXJcIjtcblxuaW1wb3J0IHsgQXBwIH0gZnJvbSBcIi4vYXBwXCI7XG5pbXBvcnQgdiBmcm9tIFwidmFseXJpYW4uanMvbGliXCI7XG5cbnYuZGlyZWN0aXZlKFwiZm9ybWF0LW51bWJlclwiLCBmb3JtYXROdW1iZXJEaXJlY3RpdmUpO1xudi5kaXJlY3RpdmUoXCJmb3JtYXQtbW9uZXlcIiwgZm9ybWF0TW9uZXlEaXJlY3RpdmUpO1xuXG52Lm1vdW50KFwiYm9keVwiLCBBcHApO1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBLFVBQU0sV0FBVyxRQUFRLE9BQU8sWUFBWSxlQUFlLFFBQVEsWUFBWSxRQUFRLFNBQVMsSUFBSTtBQUVwRyxlQUFTLFVBQVUsS0FBSyxRQUFRO0FBQzlCLGVBQU8sT0FBTyxLQUFLLEdBQUcsRUFDbkIsSUFBSSxDQUFDLE1BQU07QUFDVixjQUFJLElBQUksU0FBUyxHQUFHLFVBQVUsT0FBTztBQUNyQyxpQkFBTyxPQUFPLElBQUksT0FBTyxXQUFXLFVBQVUsSUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLG1CQUFtQixDQUFDLEtBQUssbUJBQW1CLElBQUksRUFBRTtBQUFBLFFBQ2xILENBQUMsRUFDQSxLQUFLLEdBQUc7QUFBQSxNQUNiO0FBRUEsZUFBUyxTQUFTLEtBQUssVUFBVSxDQUFDLEdBQUc7QUFDbkMsWUFBSSxJQUFJLFlBQVksS0FBSyxHQUFHLElBQUksTUFBTSxRQUFRLEtBQUssT0FBTztBQUUxRCxZQUFJLFFBQVEsRUFBRSxNQUFNLEdBQUc7QUFDdkIsWUFBSSxNQUFNLEdBQUcsS0FBSyxFQUFFLFFBQVEsU0FBUyxHQUFHLEVBQUUsUUFBUSxPQUFPLEVBQUUsRUFBRSxLQUFLO0FBRWxFLFlBQUksTUFBTSxJQUFJO0FBQ1osZUFBSyxJQUFJLE1BQU07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LDRCQUFDLG1CQUFjLENBQ2pCLEdBRUEsNEJBQUM7QUFBQSxRQUFNLE9BQU07QUFBQSxTQUNYLDRCQUFDLGVBQ0MsNEJBQUM7QUFBQSxRQUFTLElBQUc7QUFBQSxPQUFRLEdBQ3JCLDRCQUFDO0FBQUEsUUFBUyxJQUFHO0FBQUEsT0FBUyxHQUN0Qiw0QkFBQztBQUFBLFFBQVMsSUFBRztBQUFBLE9BQVUsR0FDdkIsNEJBQUM7QUFBQSxRQUFTLElBQUc7QUFBQSxPQUFTLEdBQ3RCLDRCQUFDLGFBQVEsQ0FDWCxDQUNGLENBQ0YsQ0FDRjtBQUFBLE1BQ0EsNEJBQUM7QUFBQSxRQUFNLE9BQU07QUFBQSxTQUEwQixrQ0FBZ0M7QUFBQSxJQUN6RTtBQUFBLEVBQ0Y7OztBQ2pZQSxjQUFFLFVBQVUsaUJBQWlCLHFCQUFxQjtBQUNsRCxjQUFFLFVBQVUsZ0JBQWdCLG9CQUFvQjtBQUVoRCxjQUFFLE1BQU0sUUFBUSxHQUFHOyIsCiAgIm5hbWVzIjogWyJSZXF1ZXN0IiwgInJlcXVlc3QiLCAidXJsIiwgIm9wdGlvbnMiLCAiYmFzZVVybCIsICJ2IiwgInZhbHVlIiwgInVzZUVmZmVjdCIsICJ1c2VSZWYiLCAiVm5vZGUiLCAiVm5vZGVUZXh0IiwgIlZub2RlQ29tcG9uZW50IiwgInZub2RlIiwgIm5ld1RyZWVMZW5ndGgiLCAib2xkQ2hpbGRWbm9kZSIsICJ2YWx1ZSIsICJSZXF1ZXN0IiwgIkNvaW5TeW1ib2xFbnVtIiwgIkN1cnJlbmN5RW51bSIsICJIYXNoUmF0ZVN0cmluZ1RvTnVtYmVyIiwgImNvaW4iLCAiQ3VycmVuY3lUb0xhbmd1YWdlRW51bSIsICJob29rc1BsdWdpbiIsICJSZXN1bHRCeVN0cmluZ0VudW0iXQp9Cg==